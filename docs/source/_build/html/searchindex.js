Search.setIndex({"docnames": ["HorizonMS/horizonms", "HorizonMS/horizonms.configs", "HorizonMS/horizonms.datasets", "HorizonMS/horizonms.engine", "HorizonMS/horizonms.losses", "HorizonMS/horizonms.metrics", "HorizonMS/horizonms.models", "HorizonMS/horizonms.models.backbones", "HorizonMS/horizonms.models.classification", "HorizonMS/horizonms.models.detection", "HorizonMS/horizonms.models.heads", "HorizonMS/horizonms.models.necks", "HorizonMS/horizonms.models.nets", "HorizonMS/horizonms.models.ops", "HorizonMS/horizonms.models.segmentation", "HorizonMS/horizonms.samplers", "HorizonMS/horizonms.transforms", "HorizonMS/horizonms.utils", "index"], "filenames": ["HorizonMS/horizonms.rst", "HorizonMS/horizonms.configs.rst", "HorizonMS/horizonms.datasets.rst", "HorizonMS/horizonms.engine.rst", "HorizonMS/horizonms.losses.rst", "HorizonMS/horizonms.metrics.rst", "HorizonMS/horizonms.models.rst", "HorizonMS/horizonms.models.backbones.rst", "HorizonMS/horizonms.models.classification.rst", "HorizonMS/horizonms.models.detection.rst", "HorizonMS/horizonms.models.heads.rst", "HorizonMS/horizonms.models.necks.rst", "HorizonMS/horizonms.models.nets.rst", "HorizonMS/horizonms.models.ops.rst", "HorizonMS/horizonms.models.segmentation.rst", "HorizonMS/horizonms.samplers.rst", "HorizonMS/horizonms.transforms.rst", "HorizonMS/horizonms.utils.rst", "index.rst"], "titles": ["horizonms", "horizonms.configs", "horizonms.datasets", "horizonms.engine", "horizonms.losses", "horizonms.metrics", "horizonms.models", "horizonms.models.backbones", "horizonms.models.classification", "horizonms.models.detection", "horizonms.models.heads", "horizonms.models.necks", "horizonms.models.nets", "horizonms.models.ops", "horizonms.models.segmentation", "horizonms.samplers", "horizonms.transforms", "horizonms.utils", "Welcome to HorizonMS\u2019s documentation!"], "terms": {"config": [0, 18], "read_config_fil": [0, 1, 17], "save_config_fil": [0, 1, 17], "config_upd": [0, 1, 17], "dataset": [0, 3, 4, 15, 16, 18], "atla": 0, "base": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17], "basedataset": [0, 2], "get_imag": [0, 2], "len": [0, 2], "getitem": [0, 2], "get_target_single_item": [0, 2], "format_target": [0, 2], "eyepac": 0, "imagenet": [0, 12], "promis": 0, "util": [0, 6, 18], "voc": 0, "engin": [0, 18], "checkpointmetr": [0, 3], "value_upd": [0, 3], "save_checkpoints_upd": [0, 3, 17], "early_stop": 0, "ema": 0, "lr_finder": 0, "optim": 0, "trainer": 0, "loss": [0, 3, 8, 9, 14, 18], "softmaxbaseloss": [0, 4], "preprocess": [0, 2, 4], "remove_missing_valu": [0, 4], "calculate_loss": [0, 4, 6, 8, 9, 14], "sigmoidbaseloss": [0, 4], "detect_existing_valu": [0, 4], "bbox_sigmoid_func": 0, "mil_unary_baseline_sigmoid_loss": [0, 4], "mil_approx_unary_baseline_sigmoid_loss": [0, 4], "mil_unary_baseline_pos_generalized_neg_sigmoid_loss": [0, 4], "mil_approx_unary_baseline_pos_generalized_neg_sigmoid_loss": [0, 4], "mil_unary_parallel_sigmoid_loss": [0, 4], "mil_approx_unary_parallel_sigmoid_loss": [0, 4], "mil_approx_polar_sigmoid_loss": [0, 4], "mil_unary_bbox_pos_generalized_neg_sigmoid_loss": [0, 4], "mil_approx_unary_bbox_pos_generalized_neg_sigmoid_loss": [0, 4], "mil_pairwise_loss": [0, 4], "bbox_sigmoid_loss": 0, "milunarybaselinesigmoidloss": [0, 4], "milapproxunarybaselinesigmoidloss": [0, 4], "milunarybaselineposgeneralizednegsigmoidloss": [0, 4], "milapproxunarybaselineposgeneralizednegsigmoidloss": [0, 4], "milunaryparallelsigmoidloss": [0, 4], "milapproxunaryparallelsigmoidloss": [0, 4], "milapproxunarypolarsigmoidloss": [0, 4], "milunarybboxposgeneralizednegsigmoidloss": [0, 4], "milapproxunarybboxposgeneralizednegsigmoidloss": [0, 4], "milpairwiseloss": [0, 4], "functional_tensor": 0, "convert_image_dtyp": [0, 4], "vflip": [0, 4], "hflip": [0, 4], "crop": [0, 4, 16], "rgb_to_grayscal": [0, 4], "adjust_bright": [0, 4], "adjust_contrast": [0, 4], "adjust_hu": [0, 4], "adjust_satur": [0, 4], "adjust_gamma": [0, 4], "center_crop": [0, 4], "five_crop": [0, 4], "ten_crop": [0, 4], "pad": [0, 4, 9, 13, 14, 16], "resiz": [0, 2, 4, 16], "affin": [0, 4, 6, 13], "rotat": [0, 4, 16], "perspect": [0, 4], "gaussian_blur": [0, 4], "weakcrossentropyloss": [0, 4], "cdrsmoothl1loss": [0, 4], "pseudocrossentropyloss": [0, 4], "pseudopositivecrossentropyloss": [0, 4], "losses_func": 0, "smooth_l1_loss": [0, 4], "weak_cross_entropi": [0, 4], "size_constraint_loss": [0, 4], "weak_bce_sigmoid_loss": [0, 4], "bbox_overlap": [0, 4], "parallel_transform": 0, "polar_transform": 0, "regression_loss": 0, "smoothl1loss": [0, 4], "regressioniouloss": [0, 4], "sigmoid_loss": 0, "sigmoidcrossentropyloss": [0, 4], "sigmoidfocalloss": [0, 4], "sigmoid_softmax_loss": 0, "diceloss": [0, 4], "softmax_loss": 0, "softmaxcohenkappaloss": [0, 4], "softmaxfocalloss": [0, 4], "softmaxmixfocalloss": [0, 4], "softmaxcrossentropyloss": [0, 4], "metric": [0, 3, 8, 9, 14, 18], "sigmoid_metr": 0, "sigmoidaccuraci": [0, 5], "sigmoid_metrics_func": 0, "sigmoid_accuraci": [0, 5], "sigmoid_softmax_func": 0, "dice_coeffici": [0, 5], "iou_scor": [0, 5], "sigmoid_softmax_metr": 0, "dicecoeffici": [0, 5], "iouscor": [0, 5], "softmax_metr": 0, "softmaxaccuraci": [0, 5], "softmaxaccuracytopk": [0, 5], "softmaxcohenkappascor": [0, 5], "softmax_metrics_func": 0, "softmax_accuraci": [0, 5], "softmax_accuracy_topk": [0, 5], "softmax_cohen_kappa_scor": [0, 5], "model": [0, 3, 17, 18], "backbon": [0, 6, 8, 9, 14, 17], "backbone_detect": [0, 6], "backbone_fpn": [0, 6], "backbone_unet": [0, 6], "backbone_vgg_cfg": [0, 6], "classif": [0, 2, 6, 9, 10, 11, 12, 16], "classification_bas": [0, 6], "detect": [0, 2, 6], "anchors_retinanet": [0, 6], "anchors_yolo": [0, 6], "box": [0, 2, 4, 6, 14], "detection_bas": [0, 6], "retinanet": [0, 6], "yolonet": [0, 6], "yolov1": [0, 6], "yolov1_util": [0, 6], "head": [0, 6, 8, 9, 14], "classification_head": [0, 6], "neck": [0, 6, 8, 9, 12], "classification_neck": [0, 6], "feature_pyramid_network": [0, 6], "net": [0, 2, 3, 6, 8, 9, 14], "densenet": [0, 6, 7], "efficientnet": [0, 6, 7], "inception_resnet": [0, 6], "mobilenetv2": [0, 6, 7], "nfnet": [0, 6], "resenetr": [0, 6], "resnet": [0, 6, 7, 17], "shufflenetv2": [0, 6], "vgg": [0, 6, 7], "vgg_like": [0, 6], "vgg_se": [0, 6], "op": [0, 6, 7], "bn": [0, 4, 6, 14], "misc": [0, 6, 7], "stochastic_depth": [0, 6], "segment": [0, 2, 4, 6], "decod": [0, 6, 9], "enet": [0, 6], "residualunet": [0, 6], "segmentation_bas": [0, 6], "segmentation_bbox": [0, 6], "simpleunet": [0, 6], "unet": [0, 6, 7], "batch_imag": [0, 8, 9, 14], "batchimag": [0, 6, 8, 9, 14], "forward": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "max_by_axi": [0, 6], "model_bas": 0, "basemodel": [0, 6, 8, 9, 14], "calculate_metr": [0, 6, 8, 9, 14], "forward_train": [0, 6, 8, 9, 14], "test_one_batch": [0, 6, 8, 9, 14], "predict_one_batch": [0, 6, 8, 9, 14], "load_model": [0, 6], "sampler": [0, 3, 18], "distribut": [0, 3, 16], "distributedweightedsampl": [0, 15], "distributedbalancedsampl": [0, 15], "patient_sampl": 0, "id_": [0, 15], "map_": [0, 15], "patientsampl": [0, 15], "balancedsampl": [0, 15], "transform": [0, 4, 8, 9, 12, 14, 18], "augment": [0, 2], "customizedtrivialaug": [0, 16], "horizonmstrivialaug": [0, 16], "sequentialaug": [0, 16], "targetstructur": [0, 2, 16], "compos": [0, 14, 16], "totensor": [0, 16], "batch_transform": [0, 8, 9, 14], "toonehotlabel": [0, 16], "mixup": [0, 16], "softmaxlabelsmooth": [0, 16], "sigmoidlabelsmooth": [0, 16], "imag": [0, 2, 4, 6, 7, 8, 9, 12, 14], "imagebas": [0, 16], "calcul": [0, 4, 16, 17], "uint8tofloat": [0, 16], "ident": [0, 16], "normal": [0, 9, 12, 16, 17], "bright": [0, 4, 16], "contrast": [0, 4, 16], "satur": [0, 4, 16], "hue": [0, 4, 16], "sharp": [0, 16], "poster": [0, 16], "solar": [0, 16], "autocontrast": [0, 16], "equal": [0, 4, 15, 16], "invert": [0, 12, 16], "gaussianblur": [0, 16], "gaussiannois": [0, 16], "light": [0, 16], "randombright": [0, 16], "randomcontrast": [0, 16], "randomsatur": [0, 16], "randomhu": [0, 16], "randomsharp": [0, 16], "randomposter": [0, 16], "randomsolar": [0, 16], "randomautocontrast": [0, 16], "randomequ": [0, 16], "randominvert": [0, 16], "randomgaussianblur": [0, 16], "randomgaussiannois": [0, 16], "randomlight": [0, 16], "image_cv": 0, "cvimagebas": [0, 16], "cvuint8tofloat": [0, 16], "cvident": [0, 16], "cvcvtcolor": [0, 16], "cvnormal": [0, 16], "cvbright": [0, 16], "cvcontrast": [0, 16], "cvsatur": [0, 16], "cvhue": [0, 16], "cvsharp": [0, 16], "cvposter": [0, 16], "cvsolar": [0, 16], "cvautocontrast": [0, 16], "cvequal": [0, 16], "cvinvert": [0, 16], "cvgaussianblur": [0, 16], "cvgaussiannois": [0, 16], "cvlight": [0, 16], "cvrandombright": [0, 16], "cvrandomcontrast": [0, 16], "cvrandomsatur": [0, 16], "cvrandomhu": [0, 16], "cvrandomsharp": [0, 16], "cvrandomposter": [0, 16], "cvrandomsolar": [0, 16], "cvrandomautocontrast": [0, 16], "cvrandomequ": [0, 16], "cvrandominvert": [0, 16], "cvrandomgaussianblur": [0, 16], "cvrandomgaussiannois": [0, 16], "cvrandomlight": [0, 16], "cvrandomblur": [0, 16], "spatial": 0, "spatialbas": [0, 16], "calculate_imag": [0, 16], "calculate_target": [0, 16], "shearx": [0, 16], "sheari": [0, 16], "translatex": [0, 16], "translatei": [0, 16], "cropx": [0, 16], "cropi": [0, 16], "fliplr": [0, 16], "flipud": [0, 16], "scale": [0, 3, 4, 12, 16], "resizewidth": [0, 16], "torch_choic": [0, 16], "randomresizedcrop": [0, 16], "get_param": [0, 16], "randomcrop": [0, 16], "crop_region": [0, 16], "imagepad": [0, 16], "imageheightpaddingorcrop": [0, 16], "randomshearx": [0, 16], "randomsheari": [0, 16], "randomtranslatex": [0, 16], "randomtranslatei": [0, 16], "randomcropx": [0, 16], "randomcropi": [0, 16], "randomfliplr": [0, 16], "randomflipud": [0, 16], "randomrot": [0, 16], "randomscal": [0, 16], "spatial_cv": 0, "cvshearx": [0, 16], "cvsheari": [0, 16], "cvtranslatex": [0, 16], "cvtranslatei": [0, 16], "cvcropx": [0, 16], "cvcropi": [0, 16], "cvfliplr": [0, 16], "cvflipud": [0, 16], "cvrotat": [0, 16], "cvscale": [0, 16], "cvresiz": [0, 16], "cvresizewidth": [0, 16], "cvrandomresizedcrop": [0, 16], "cvrandomcrop": [0, 16], "cvimagepad": [0, 16], "cvrandomshift": [0, 16], "cvrandomshearx": [0, 16], "cvrandomsheari": [0, 16], "cvrandomtranslatex": [0, 16], "cvrandomtranslatei": [0, 16], "cvrandomcropx": [0, 16], "cvrandomcropi": [0, 16], "cvrandomfliplr": [0, 16], "cvrandomflipud": [0, 16], "cvrandomrot": [0, 16], "cvrandomscal": [0, 16], "setup_s": [0, 16], "get_image_s": [0, 16], "cv_image_shift": [0, 16], "is_seq_of": [0, 17], "deprecated_api_warn": [0, 17], "pd_util": 0, "append_df_to_excel": [0, 17], "registri": 0, "build_from_cfg": [0, 17], "infer_scop": [0, 17], "split_scope_kei": [0, 17], "name": [0, 1, 2, 3, 4, 7, 12, 13, 17], "scope": [0, 17], "module_dict": [0, 17], "children": [0, 17], "get": [0, 2, 4, 14, 15, 16, 17], "build": [0, 17], "deprecated_register_modul": [0, 17], "register_modul": [0, 17], "summari": 0, "summary_upd": [0, 17], "build_net": 0, "cfg": [0, 7, 8, 9, 12, 14, 17], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "build_backbon": 0, "build_neck": 0, "build_head": 0, "build_loss": 0, "build_metr": 0, "build_transform": 0, "build_losses_list": [], "cfg_list": [], "build_metrics_list": [], "file_nam": [1, 17], "str": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17], "read": [1, 2], "configur": [1, 8, 9, 12, 14, 17], "file": [1, 2, 3, 12, 17], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data_dict": [1, 17], "dict": [1, 2, 3, 4, 6, 8, 9, 14, 16, 17], "save": [1, 2, 3, 7, 17], "config_new": [1, 17], "updat": [0, 1, 3], "dictionari": [1, 2, 3, 4, 9, 17], "return": [1, 2, 3, 4, 7, 9, 12, 13, 17], "configr": 1, "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17], "config_out": 1, "class": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "transforms_pt": 2, "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "transforms_cv": 2, "to_tensor": 2, "true": [2, 3, 4, 5, 12, 13, 14, 15, 16], "abc": [2, 4, 6, 8, 9, 14, 16], "callabl": [2, 3, 12, 13], "option": [2, 3, 4, 16, 17], "data": [2, 3, 4, 15, 16, 17], "object": [2, 3, 4, 5, 9, 16, 17], "i": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17], "implement": [2, 3, 12, 13], "pytorch": [2, 3, 12, 16], "opencv": 2, "bool": [2, 3, 4, 5, 7, 12, 13, 15, 16, 17], "convert": [2, 3, 4, 5, 6, 8, 9, 14, 16], "sampl": [2, 4, 5, 15], "tensor": [2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 16], "abstract": [2, 4, 6, 8, 9, 14, 16], "properti": [2, 3, 17], "int": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "number": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16], "index": [2, 3, 9, 16, 18], "tupl": [2, 3, 4, 6, 16, 17], "ani": [2, 3, 4, 12, 16, 17], "target": [2, 4, 6, 8, 9, 14, 16], "singl": [2, 4], "kei": [2, 3, 4, 17], "valu": [0, 2, 3, 4, 7, 9, 16, 17], "format": [2, 4, 6, 8, 9, 14, 17], "item": [2, 17], "predefin": [2, 15], "t": [2, 3, 4, 9, 17], "mode": [2, 3, 4, 13, 14, 16], "checkpoint": [3, 12], "three": 3, "can": [3, 4, 6, 7, 9, 16, 17], "set": [3, 4, 9], "each": [2, 3, 4, 7, 9, 10, 11, 12, 14, 15, 16], "min": 3, "max": [0, 3, 11], "all": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "Its": [3, 14], "float": [2, 3, 4, 5, 9, 10, 12, 13, 14, 15, 16], "current": 3, "save_checkpoint": [3, 17], "val_metric_logg": [3, 17], "missing_valu": 4, "fals": [0, 2, 3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17], "epsilon": [4, 5, 9, 16], "1e": [4, 5, 9, 13, 16], "06": [4, 5, 9], "softmax": [4, 5, 6, 8, 10, 13, 14], "whether": [2, 3, 4, 5, 7, 15, 17], "handl": 4, "miss": 4, "small": [3, 4, 5], "stabil": [4, 5], "ytrue": [4, 5], "ypred": [4, 5, 6, 8, 9, 14], "kwarg": [2, 3, 4, 7, 12, 14, 15, 16, 17], "sigmoid": [4, 5, 6, 8, 10, 13, 14], "mask": [4, 16], "gt_boxes_xxyi": 4, "loss_mod": 4, "ce_al": 4, "focal_param": 4, "alpha": [4, 12, 13, 16], "0": [0, 2, 3, 4, 5, 9, 10, 12, 13, 16], "25": [4, 12], "gamma": 4, "2": [2, 4, 7, 9, 12, 14, 16], "comput": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "mil": 4, "baselin": 4, "unari": 4, "predict": [4, 5, 9], "from": [2, 3, 4, 7, 9, 12, 13, 14, 15, 16, 17], "network": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16], "shape": [4, 9, 16], "b": [4, 9, 12], "c": [4, 17], "w": [4, 9, 16], "h": [4, 9, 16], "bound": [2, 4, 9, 14, 16], "region": [4, 16], "1": [3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17], "otherwis": [2, 3, 4, 16], "n": [3, 4, 9, 13], "6": [4, 7, 11, 12, 16], "where": [2, 3, 4, 9, 16, 17], "boud": 4, "batch": [3, 4, 6, 8, 9, 12, 13, 14], "element": [2, 4, 9, 15, 17], "row": [4, 13, 17], "ar": [2, 3, 4, 7, 9, 14, 16, 17], "nb_img": 4, "x1": [4, 9, 14], "y1": [4, 9], "x2": [4, 9, 14], "y2": [4, 9], "categori": [4, 5], "refer": [3, 4, 9, 17], "wang": [4, 14], "j": [4, 9], "xia": 4, "2021": 4, "septemb": 4, "tight": 4, "prior": [4, 9, 10, 12, 14], "weakli": [4, 14], "supervis": [4, 14], "In": [4, 9, 14], "intern": [4, 9], "confer": [4, 9], "medic": [4, 14], "assist": 4, "intervent": 4, "pp": [4, 9], "526": 4, "536": 4, "springer": 4, "cham": 4, "approx_method": 4, "approx_alpha": 4, "4": [3, 4, 7, 9, 11, 12, 13], "while": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "appli": [4, 6, 8, 9, 13, 14, 16], "smooth": [3, 4, 5, 16], "maximum": [2, 3, 4, 16], "function": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "which": [3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17], "gener": [2, 3, 4, 9, 16], "neg": [4, 9, 16], "bag": 4, "us": [2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 17], "gt_boxes_cr": 4, "angle_param": 4, "60": 4, "61": 4, "30": 4, "sampling_prob": 4, "5": [3, 4, 5, 7, 9, 11, 12, 14, 16], "center_x": 4, "center_r": 4, "radiu": 4, "focal": [4, 9], "weight_min": 4, "center_mod": 4, "fix": [2, 4], "pt_param": 4, "output_shap": 4, "90": 4, "linear": [3, 4, 12, 16], "polar": 4, "2022": 4, "multipl": [4, 12, 14], "instanc": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "learn": [3, 4, 6, 8, 9, 12, 14], "With": 4, "loos": 4, "annot": [4, 9], "arxiv": [3, 4, 12, 14, 16], "preprint": [4, 14], "2203": 4, "06000": 4, "A": [4, 9, 12, 14, 16, 17], "posit": [4, 9, 16], "defin": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "pixel": [4, 16], "exp_coef": 4, "pair": [4, 9], "wise": 4, "As": [4, 12], "It": [2, 3, 4, 7, 8, 11, 15, 16, 17], "cross": 4, "entropi": 4, "ce_bal": 4, "calcualt": 4, "quasimax": 4, "degre": [4, 16], "parallel": 4, "line": [3, 4], "start": [3, 4, 7], "stop": [3, 4], "step": [0, 3, 4], "minimum": 4, "weight": [4, 5, 7, 12, 15], "center": 4, "estim": [4, 14], "If": [2, 3, 4, 9, 12, 16, 17], "output": [3, 4, 5, 6, 7, 8, 11, 12, 14, 16], "probabl": [4, 13, 16], "coeffici": [4, 5], "exponenti": [3, 4], "should": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "denot": 4, "default": [2, 3, 4, 5, 9, 12, 13, 15, 16, 17], "code": [3, 4, 12, 16, 17], "borrow": 4, "torchvis": [4, 7, 16], "dtype": [3, 4, 9, 13, 16], "torch": [3, 4, 12, 13, 14, 16], "float32": 4, "privat": 4, "method": [2, 3, 4], "given": [2, 3, 4, 16, 17], "accordingli": 4, "user": [4, 17], "applic": 4, "pleas": [4, 17], "consid": [4, 16], "instead": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "desir": [4, 16], "when": [3, 4, 6, 7, 8, 9, 14, 16, 17], "smaller": 4, "larger": [3, 4, 8, 9, 12, 14], "integ": 4, "map": [4, 7, 11, 16, 17], "exactli": 4, "back": [4, 16], "forth": 4, "thi": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "mismatch": 4, "ha": [2, 4, 7, 9, 12, 16], "effect": 4, "rais": 4, "runtimeerror": 4, "try": [4, 17], "cast": 4, "int32": 4, "int64": 4, "well": [3, 4], "float64": 4, "These": [4, 9], "convers": 4, "might": 4, "lead": [4, 16], "overflow": 4, "error": 4, "sinc": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "point": [3, 4, 16], "cannot": 4, "store": [0, 3, 4], "consecut": 4, "over": [3, 4, 5, 9], "whole": 4, "rang": [3, 4, 16], "img": [4, 16], "vertic": [3, 4], "flip": [4, 16], "form": 4, "horizont": 4, "top": [4, 5, 7], "left": [4, 16, 17], "height": [4, 9, 16], "width": [4, 9, 12, 16], "corner": 4, "compon": 4, "num_output_channel": 4, "rgb": [4, 16], "grayscal": [4, 16], "For": [4, 12, 16], "itu": 4, "r": [4, 9], "601": 4, "luma": 4, "perform": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "l": [4, 16], "2989": 4, "g": [2, 3, 4, 12, 17], "5870": 4, "1140": 4, "channel": [4, 7, 11, 12, 14, 16], "3": [2, 4, 7, 9, 10, 11, 12, 13, 14, 16], "version": 4, "brightness_factor": [4, 16], "adjust": [3, 4, 16], "an": [3, 4, 9, 16, 17], "how": [3, 4, 12, 16, 17], "much": [4, 12, 16], "non": [3, 4, 16], "give": [4, 16], "black": [4, 16], "origin": [2, 4, 16], "increas": [3, 4, 16], "factor": [3, 4, 9, 12, 16], "contrast_factor": [4, 16], "solid": [4, 16], "grai": [4, 16], "hue_factor": [4, 16], "The": [2, 3, 4, 9, 12, 13, 16, 17], "hsv": [4, 16], "cyclic": [3, 4, 16], "shift": [4, 16], "intens": [4, 16], "amount": [4, 16], "must": [4, 16], "interv": [3, 4, 16], "see": [4, 12, 13, 16], "more": [3, 4, 12, 16], "detail": [4, 16], "either": 4, "uint8": [4, 16], "complet": [4, 16], "revers": [4, 16], "space": [4, 16], "direct": [4, 16], "respect": [4, 9, 16], "mean": [4, 7, 9, 16], "therefor": [4, 16], "both": [4, 5, 9, 16], "complementari": [4, 16], "color": [4, 16], "saturation_factor": [4, 16], "white": [4, 16], "enhanc": [4, 16], "gain": 4, "also": 4, "known": 4, "power": 4, "law": 4, "follow": 4, "equat": 4, "i_": 4, "text": [4, 15], "out": [4, 16], "255": 4, "time": [4, 9, 14], "frac": 4, "right": [4, 16], "correct": 4, "rbg": 4, "real": [4, 9, 14], "same": [3, 4, 7, 9, 12, 16, 17], "than": [4, 8, 9, 14, 16], "make": 4, "shadow": 4, "darker": 4, "dark": 4, "lighter": 4, "constant": 4, "multipli": 4, "output_s": 4, "deprec": [4, 17], "size": [3, 4, 6, 8, 9, 14, 16], "remov": [4, 9, 17], "futur": 4, "releas": 4, "f": 4, "sequenc": [4, 16, 17], "list": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16], "four": 4, "central": 4, "mai": 4, "input": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "your": [3, 4], "like": [4, 16], "squar": [4, 16], "made": [4, 16], "tl": 4, "tr": 4, "bl": 4, "br": 4, "correspond": [4, 16, 17], "bottom": 4, "vertical_flip": 4, "plu": 4, "tl_flip": 4, "tr_flip": 4, "bl_flip": 4, "br_flip": 4, "center_flip": 4, "": [3, 4, 5, 9, 12], "fill": [4, 16], "padding_mod": 4, "side": [4, 16], "specifi": [3, 4, 7, 12, 16, 17], "border": 4, "provid": [3, 4, 8, 16], "length": [4, 16], "torchscript": 4, "support": [3, 4, 16], "onli": [2, 3, 4, 7, 9, 16], "edg": [4, 16], "reflect": 4, "symmetr": 4, "yet": [4, 16], "last": [3, 4, 7, 9, 10, 12, 14, 17], "without": [4, 17], "repeat": 4, "result": [2, 3, 4, 9, 17], "interpol": [0, 4, 6, 14, 16], "match": [2, 4], "maintain": [4, 16], "aspect": [4, 16], "ratio": [2, 4, 10, 12, 16], "e": [2, 3, 4, 12, 13, 17], "rescal": 4, "bilinear": [4, 16], "other": [3, 4, 16], "nearest": [4, 14], "bicub": 4, "matrix": [4, 9], "resampl": 4, "fillcolor": 4, "keep": [2, 4, 16], "invari": 4, "repres": [3, 4], "invers": 4, "filter": [4, 12], "area": [4, 16], "outsid": [4, 16], "alwai": 4, "expand": 4, "angl": [4, 16], "translat": [4, 16], "part": [4, 9], "coordin": 4, "expans": [4, 9], "flag": [3, 4, 9], "larg": [4, 12], "enough": 4, "hold": 4, "entir": [4, 13], "omit": 4, "note": [3, 4], "assum": [3, 4], "around": 4, "perspective_coeff": 4, "pil": [4, 16], "kernel_s": [4, 12, 13, 14, 16], "sigma": [4, 16], "gaussian": [4, 16], "blur": [4, 16], "kernel": [4, 16], "kx": 4, "ky": 4, "standard": [3, 4, 9, 16], "deviat": [4, 9, 16], "sx": 4, "sy": 4, "w_alpha": 4, "toppk": 4, "calculate_ratio": 4, "size_averag": 4, "10": [3, 4, 5, 7, 9, 16], "soft": 4, "threshold": [3, 4, 5, 16], "pred": [4, 9], "l1": 4, "y_pred": 4, "y_true": 4, "argument": [4, 17], "chang": 4, "l2": 4, "gt_box": [4, 9], "is_tru": 4, "bboxes1": 4, "bboxes2": 4, "iou": [4, 9], "is_align": 4, "ep": [4, 6, 13], "overlap": [4, 9], "between": [3, 4, 7, 9, 16], "two": [3, 4, 9, 16], "bbox": [4, 9, 16], "align": 4, "m": [4, 7, 9], "empti": 4, "indic": [4, 9], "dim": 4, "b1": [4, 12], "b2": [4, 12], "intersect": [4, 5, 9], "union": [4, 5, 9, 15, 16], "iof": 4, "foreground": [4, 16], "giou": 4, "ad": [2, 4, 17], "denomin": 4, "numer": 4, "els": 4, "exampl": [3, 4, 16, 17], "floattensor": 4, "20": [3, 4], "32": [3, 4, 6, 9, 12, 14], "38": 4, "42": 4, "19": [4, 12], "assert": 4, "nonempti": 4, "9": [4, 7], "counter": [4, 16], "clockwis": [4, 16], "p": [4, 9, 13], "upper": [4, 16, 17], "band": [4, 16], "box_height": 4, "box_width": 4, "is_mask": 4, "paper": [4, 12, 14], "2023": 4, "beyond": 4, "2301": 4, "12053": 4, "360": 4, "dimens": [2, 4, 7, 10, 12, 13, 14, 16], "rule": [4, 15], "averag": [3, 4, 5, 11], "among": [4, 5], "argv": [4, 15, 16], "balanc": [4, 15], "differ": [3, 4, 15], "individu": 4, "its": [4, 13, 14, 16], "cutoff": 4, "v": 4, "ignor": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "expon": 4, "easi": 4, "hard": 4, "determin": [3, 4, 8, 9, 14, 15], "ground": [2, 4, 5], "truth": [2, 4, 5], "dice": [4, 5], "quadrat": 4, "cohen": [4, 5], "kappa": [4, 5], "similar": 4, "return_averag": 5, "accuraci": 5, "k": [5, 9, 12, 16], "one": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "hot": [5, 16], "topk": 5, "vgg_backbon": [0, 6, 7], "resnet_backbon": [0, 6, 7], "efficientnet_backbon": [0, 6, 7], "vgg_fpn_det_v1": [0, 6, 7], "vgg_fpn_det_v2": [0, 6, 7], "vgg_fpn_backbon": [0, 6, 7], "resnet_fpn_backbon": [0, 6, 7], "vgg_unet_backbon": [0, 6, 7], "resnet_unet_backbon": [0, 6, 7], "densenet_unet_backbon": [0, 6, 7], "mobilenetv2_unet_backbon": [0, 6, 7], "vggcfg": [0, 6, 7], "backbonevggcfg": [0, 6, 7], "vgg_cfg_backbone_v1": [0, 6, 7], "vgg_cfg_backbone_v2": [0, 6, 7], "intermediatelayergett": [0, 6, 7], "out_channel": [6, 7, 9, 11, 13], "backbonewithfpn": [0, 6, 7], "baseclassif": [0, 6, 8], "preprocessing_input": [6, 8, 9, 14], "classificationnetfrommodul": [0, 6, 8], "get_classification_net": [0, 6, 8], "anchorgener": [0, 6, 9], "cell_anchor": [6, 9], "generate_anchor": [6, 9], "set_cell_anchor": [6, 9], "num_anchors_per_loc": [6, 9], "grid_anchor": [6, 9], "cached_grid_anchor": [6, 9], "bbox_transform": [0, 6, 9], "bbox_transform_batch": [0, 6, 9], "bbox_transform_inv_batch": [0, 6, 9], "bboxcod": [0, 6, 9], "encod": [6, 9, 14, 16], "encode_singl": [6, 9], "clip_box": [0, 6, 9], "anchor_targets_bbox": [0, 6, 9], "compute_gt_annot": [0, 6, 9], "encode_box": [0, 6, 9], "decode_box": [0, 6, 9], "create_grid": [0, 6, 9], "generate_target_yolov2": [0, 6, 9], "generate_strid": [0, 6, 9], "generate_feature_shap": [0, 6, 9], "generate_target_yolov1": [0, 6, 9], "boxcoderyolov1": [0, 6, 9], "decode_singl": [6, 9], "box_area": [0, 6, 9], "box_iou": [0, 6, 9], "paired_box_i": [0, 6, 9], "basedetect": [0, 6, 9], "get_gt": [6, 9], "pred_postprocessing_for_loss_calcul": [6, 9], "postprocess_detect": [6, 9], "retinanethead": [0, 6, 9], "yolodetect": [0, 6, 9], "initialize_weight": [6, 9], "get_strid": [6, 9], "get_feature_shap": [6, 9], "nms_postprocess": [6, 9], "yolov1loss": [0, 6, 9], "yolov1metr": [0, 6, 9], "defaultdarknet": [0, 6, 9], "defaultyolov1head": [0, 6, 9], "detneckblock": [0, 6, 9], "bottlenetneck": [0, 6, 9], "yolov1head": [0, 6, 9], "classificationmultihead": [0, 6, 10], "classificationpoolingneck": [0, 6, 11], "featurepyramidnetwork": [0, 6, 11], "densenet121": [0, 6, 12], "densenet169": [0, 6, 12], "densenet201": [0, 6, 12], "densenet161": [0, 6, 12], "efficientnet_b0": [0, 6, 12], "efficientnet_b1": [0, 6, 12], "efficientnet_b2": [0, 6, 12], "efficientnet_b3": [0, 6, 12], "efficientnet_b4": [0, 6, 12], "efficientnet_b5": [0, 6, 12], "efficientnet_b6": [0, 6, 12], "efficientnet_b7": [0, 6, 12], "efficientnet_b8": [0, 6, 12], "efficientnet_l2": [0, 6, 12], "inceptionresnetv2": [0, 6, 12], "inception_resnet_v2": [0, 6, 12], "ens_adv_inception_resnet_v2": [0, 6, 12], "mobilenet_v2": [0, 6, 12], "exclude_from_weight_decai": [6, 12], "exclude_from_clip": [6, 12], "nfnet_f0": [0, 6, 12], "nfnet_f1": [0, 6, 12], "nfnet_f2": [0, 6, 12], "nfnet_f3": [0, 6, 12], "nfnet_f4": [0, 6, 12], "nfnet_f5": [0, 6, 12], "resnetr": [0, 6, 12], "make_lay": [0, 6, 12, 14], "init_weight": [6, 12, 14], "resnetrs50": [0, 6, 12], "resnetrs101": [0, 6, 12], "resnetrs152": [0, 6, 12], "resnetrs200": [0, 6, 12], "resnet18": [0, 6, 12], "resnet34": [0, 6, 12], "resnet50": [0, 6, 12, 17], "resnet101": [0, 6, 12], "resnet152": [0, 6, 12], "resnext50_32x4d": [0, 6, 12], "resnext101_32x8d": [0, 6, 12], "wide_resnet50_2": [0, 6, 12], "wide_resnet101_2": [0, 6, 12], "shufflenet_v2_x0_5": [0, 6, 12], "shufflenet_v2_x1_0": [0, 6, 12], "shufflenet_v2_x1_5": [0, 6, 12], "shufflenet_v2_x2_0": [0, 6, 12], "vgg11": [0, 6, 12], "vgg11_bn": [0, 6, 12], "vgg13": [0, 6, 12], "vgg13_bn": [0, 6, 12], "vgg13_bn_narrow": [0, 6, 12], "vgg16": [0, 6, 12], "vgg16_bn": [0, 6, 12], "vgg19": [0, 6, 12], "vgg19_bn": [0, 6, 12], "vgglike": [0, 6, 12], "vgg_like_v1": [0, 6, 12], "vgg_like_v2": [0, 6, 12], "vgg_like_v3": [0, 6, 12], "batchnormbas": [0, 6, 13], "num_featur": [6, 13], "momentum": [6, 13], "track_running_stat": [6, 13], "reset_running_stat": [6, 13], "reset_paramet": [6, 13], "batchnorm2d": [0, 6, 12, 13], "expectedbatchnorm2d": [0, 6, 13], "sampleexpectedbatchnorm2d": [0, 6, 13], "samplegexpectedbatchnorm2d": [0, 6, 13], "pseudomaxpooling2d": [0, 6, 13], "convnormactiv": [0, 6, 13], "squeezeexcit": [0, 6, 13], "stochasticdepth": [0, 6, 13], "unetsimpledecod": [0, 6, 14], "up_light": [0, 6, 14], "conv_block_1": [0, 6, 14], "conv_block_3_3": [0, 6, 14], "conv_block_asym": [0, 6, 14], "convbatch": [0, 6, 14], "upsampleconv": [0, 6, 14], "bottleneckdownsampl": [0, 6, 14], "bottlenecknorm": [0, 6, 14], "bottleneckdownsamplingdilatedconv": [0, 6, 14], "bottlenecknormal_asym": [0, 6, 14], "bottleneckdownsamplingdilatedconvlast": [0, 6, 14], "bottleneckupsampl": [0, 6, 14], "maxpool": [0, 6, 14], "conv_block": [0, 6, 14], "conv_block_3": [0, 6, 14], "conv_decod_block": [0, 6, 14], "conv_residual_conv": [0, 6, 14], "basesegment": [0, 6, 14], "get_segmentation_net": [0, 6, 14], "bboxsegment": [0, 6, 14], "calculate_sigmoid_loss": [6, 14], "calculate_softmax_loss": [6, 14], "simpleencondermodul": [0, 6, 14], "unet_v1": [0, 6, 14], "unet_v2": [0, 6, 14], "pred_upsampl": [6, 14], "size_divis": 6, "ceil": 6, "divis": [6, 8, 9, 14], "everi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "call": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "overridden": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "subclass": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "although": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "recip": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "pass": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "need": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "within": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "afterward": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "former": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "take": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "care": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "run": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "regist": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "hook": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "latter": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "silent": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "them": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "the_list": 6, "final_activ": [6, 8, 14], "nn": [3, 6, 7, 8, 9, 12, 13, 14], "deep": [6, 8, 9, 12, 13, 14], "decid": [6, 8, 14], "oper": [6, 8, 14, 16], "model_fil": 6, "data_parallel": 6, "backbone_nam": 7, "return_stag": 7, "input_dim": [7, 10, 12, 14], "pretrain": [7, 12], "model_dir": [7, 12], "trainable_stag": 7, "extract": 7, "stage": [2, 7], "directori": [2, 3, 7, 12], "trainabl": 7, "frozen": 7, "final": [3, 7, 16], "backbone_cfg": 7, "backbone_vers": 7, "fpn_out_channel": 7, "256": [7, 9, 11], "pyramid_level": [7, 11], "7": [7, 9, 11, 12], "add": [3, 7, 12], "fpn": [7, 11], "level": [7, 11, 14], "valid": [2, 3, 7, 8, 9, 14, 16, 17], "layer": [7, 12, 14], "trainable_lay": 7, "norm_lay": [7, 12, 13], "frozenbatchnorm2d": 7, "64": [7, 9, 12, 14], "128": [7, 9, 14], "512": [7, 9, 12], "1024": [7, 9, 12], "x": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "return_lay": 7, "in_channels_list": [7, 11], "moduledict": 7, "wrapper": 7, "intermedi": 7, "strong": 7, "assumpt": 7, "have": [3, 7, 16], "been": 7, "order": [7, 9, 16], "thei": [3, 7, 9], "reus": 7, "twice": [7, 12], "you": [3, 7, 9], "want": 7, "work": 7, "addition": 7, "abl": 7, "queri": 7, "directli": [2, 7], "assign": 7, "so": [3, 7, 16], "feature1": 7, "layer2": 7, "we": 7, "featur": [7, 11, 12, 14], "submodel": 7, "pyramid": [7, 11], "net_param": [8, 9, 14], "loss_param": [8, 9, 14], "metric_param": [8, 9, 14], "task": [8, 9, 10, 11, 14, 16], "train": [0, 2, 3, 8, 9, 12, 13, 14, 16], "test": [2, 3, 8, 9, 14], "kwargs_opt": [8, 9, 14], "loss_func": [8, 9, 14], "loss_w": [8, 9, 14], "index_head": [8, 9, 14], "metric_func": [8, 9, 14], "construct": [8, 12, 17], "anchor_s": 9, "anchor_aspect_ratio": 9, "anchor_scal": 9, "2599210498948732": 9, "5874010519681994": 9, "devic": [3, 9, 13, 16, 17], "grid_siz": 9, "stride": [9, 13, 14], "feature_map": 9, "batch_image_s": 9, "org_image_s": 9, "anchor": 9, "std": [9, 16], "regress": 9, "anchors_batch": 9, "gt_boxes_batch": 9, "deltas_batch": 9, "delta": 9, "usual": 9, "befor": [9, 16, 17], "wa": 9, "previous": 9, "unnorm": 9, "np": 9, "arrai": 9, "d_x1": 9, "d_y1": 9, "d_x2": 9, "d_y2": 9, "dure": [2, 3, 9], "love": 9, "bbox_xform_clip": 9, "135166556742356": 9, "represent": 9, "regressor": 9, "anchors_group": 9, "gt_boxes_group": 9, "propos": 9, "some": [9, 17], "reference_box": 9, "deltas_group": 9, "image_s": 9, "annotations_group": 9, "num_class": [9, 12, 14, 16], "image_size_group": 9, "negative_overlap": 9, "positive_overlap": 9, "contain": [2, 3, 9, 12, 17], "label": [3, 9, 16], "mask_shap": 9, "zero": [9, 13], "mark": 9, "relev": 9, "state": [3, 9, 16], "batch_siz": [3, 9, 17], "column": 9, "bg": 9, "fg": 9, "regression_batch": 9, "first": [3, 9, 12, 13, 14, 16, 17], "labels_batch": 9, "obtain": [9, 14], "gt": 9, "greatest": 9, "ignore_indic": 9, "argmax_overlaps_ind": 9, "positive_indic": 9, "input_s": [9, 17], "txtytwth": 9, "grid": 9, "input_shap": 9, "num_box": 9, "feature_shap": 9, "boxes1": 9, "boxes2": 9, "jaccard": 9, "expect": [9, 16, 17], "second": [9, 16], "nxm": 9, "pairwis": 9, "n1": 9, "n2": 9, "n3": 9, "n1xn2xn3x": 9, "bbox_threshold": 9, "bbox_high_iou_thresh": 9, "bbox_low_iou_thresh": 9, "bbox_stat": 9, "bbox_stat_mean": 9, "bbox_stat_std": 9, "statist": 9, "return_dense_result": 9, "anchor_param": 9, "nms_param": 9, "detections_per_class": 9, "nms_iou_threshold": 9, "05": [3, 9, 13], "nms_score_threshold": 9, "005": 9, "y": [9, 16], "lin": 9, "goyal": 9, "girshick": 9, "he": 9, "doll\u00e1r": 9, "dens": [9, 12], "proceed": 9, "ieee": 9, "vision": 9, "2980": 9, "2988": 9, "2017": 9, "nm": 9, "image_sizes_list": 9, "original_image_s": 9, "box_cod": 9, "box_pr": 9, "image_shap": [9, 14], "in_channel": [9, 13, 14], "num_anchor": 9, "num_conv": 9, "feature_s": 9, "81": 9, "num_fpn": 9, "01": 9, "yolo": 9, "redmon": 9, "divvala": 9, "farhadi": 9, "look": 9, "onc": 9, "unifi": 9, "pattern": [9, 15], "recognit": [9, 12], "779": 9, "788": 9, "2016": [9, 14], "confid": 9, "pred_box": 9, "pred_scor": 9, "pred_cls_ind": 9, "image_shapes_list": 9, "lambda_coord": 9, "lambda_obj": 9, "lambda_noobj": 9, "192": 9, "in_plan": 9, "plane": 9, "block_typ": 9, "02": 9, "dropout": [10, 12], "num_softmax_classes_list": 10, "11": [10, 12], "53": 10, "num_sigmoid_classes_list": 10, "initi": [3, 10, 17], "conv": [10, 14], "pool": [11, 12, 14], "avg": [0, 3, 11], "consist": 11, "flatten": 11, "growth_rat": 12, "block_config": 12, "12": [2, 12], "24": [12, 14], "16": [12, 14], "num_init_featur": 12, "bn_size": 12, "drop_rat": 12, "1000": 12, "memory_effici": 12, "bc": 12, "connect": 12, "convolut": 12, "mani": 12, "block": [12, 14], "bottl": 12, "bottleneck": 12, "rate": [3, 12], "after": [3, 12], "memori": [2, 3, 12], "effici": 12, "slower": 12, "progress": 12, "121": 12, "displai": 12, "bar": 12, "download": [2, 12], "stderr": 12, "169": 12, "201": 12, "161": 12, "inverted_residual_set": 12, "mbconvconfig": 12, "stochastic_depth_prob": 12, "b0": 12, "architectur": [12, 13, 14], "rethink": 12, "neural": [3, 12, 14], "b3": 12, "b4": 12, "b5": 12, "b6": 12, "b7": 12, "b8": 12, "incept": [12, 16], "v2": [3, 12], "http": [2, 3, 12, 16, 17], "github": [3, 12, 16], "com": [3, 12, 16, 17], "rwightman": 12, "blob": [3, 12, 16], "master": [3, 12], "timm": 12, "py": [3, 12, 16, 17], "caden": 12, "tensorflow": [3, 12], "zoo": 12, "mit": 12, "licens": 12, "upon": 12, "googl": [2, 12], "apach": 12, "inceptionv4": 12, "org": [2, 3, 12, 16], "ab": [3, 12, 16], "1602": 12, "07261": 12, "ensembl": 12, "adversari": 12, "per": [12, 16, 17], "1705": 12, "07204": 12, "tree": 12, "research": 12, "adv_imagenet_model": 12, "width_mult": 12, "round_nearest": 12, "8": [12, 16], "residu": [12, 13], "arch": 12, "f0": 12, "stochdepth_r": 12, "se_ratio": 12, "activ": [12, 13], "gelu": 12, "train_ims": 12, "test_ims": 12, "nenet": 12, "stocast": 12, "depth": [12, 13], "se": 12, "f1": 12, "f2": 12, "f3": 12, "f4": 12, "f5": 12, "resnet_r": 12, "revisit": 12, "improv": 12, "strategi": 12, "pdf": 12, "2103": [12, 16], "07579": 12, "nachiket273": [3, 12], "pytorch_resnet_r": [3, 12], "stem_width": 12, "down_kernel_s": 12, "actn": 12, "functool": 12, "partial": [3, 12], "relu": [12, 13, 14], "inplac": [12, 13], "batchnorm": [12, 13], "seblock": 12, "reduction_ratio": 12, "dropout_ratio": 12, "stochastic_depth_ratio": 12, "zero_init_last_bn": 12, "nlayer": 12, "inplan": 12, "zero_init_residu": 12, "group": [12, 13], "width_per_group": 12, "replace_stride_with_dil": 12, "18": 12, "34": 12, "50": [3, 12], "101": 12, "152": 12, "resnext": 12, "32x4d": 12, "aggreg": 12, "32x8d": 12, "pre": [3, 12], "wide": [3, 12], "except": 12, "outer": 12, "1x1": 12, "2048": 12, "stages_repeat": 12, "stages_out_channel": 12, "inverted_residu": 12, "invertedresidu": 12, "5x": 12, "describ": [12, 16], "shufflenet": 12, "practic": [3, 12], "guidelin": 12, "cnn": 12, "design": 12, "0x": 12, "veri": 12, "13": 12, "d": 12, "featuremap": 12, "batch_norm": [12, 14], "sample_momentum": 13, "activation_lay": 13, "dilat": [13, 14], "sequenti": [13, 16], "input_channel": 13, "squeeze_channel": 13, "scale_activ": 13, "stochast": 13, "randomli": [2, 13, 16], "drop": 13, "branch": 13, "arbitrari": [3, 13, 16], "being": [13, 16], "select": [13, 16], "in_dim": 14, "out_dim": 14, "kernels": 14, "nin": 14, "nout": 14, "bia": 14, "conv2d": 14, "upscal": 14, "scale_factor": 14, "cin": 14, "projectionfactor": 14, "dropoutr": 14, "channels_in": 14, "adam": 14, "paszk": 14, "abhishek": 14, "chaurasia": 14, "sangpil": 14, "kim": 14, "eugenio": 14, "culurciello": 14, "semant": 14, "1606": 14, "02147": 14, "arg": [2, 3, 14, 17], "act_fn": 14, "hoel": 14, "kervadec": 14, "jose": 14, "dolz": 14, "shanshan": 14, "eric": 14, "granger": 14, "ismail": 14, "ben": 14, "ai": 14, "global": [3, 14], "constraint": 14, "close": 14, "full": 14, "page": [14, 18], "365": 14, "381": 14, "pmlr": 14, "2020": 14, "seg_pr": 14, "num_block": 14, "simpl": 14, "cascad": 14, "associ": 14, "downsampl": 14, "initil": 14, "cfg_up": 14, "cfg_seg": 14, "nb_featur": 14, "nb_output": 14, "resolut": 14, "square_root_invers": 15, "replac": [15, 17], "sampling_class": 15, "distributedsampl": 15, "restrict": 15, "load": [2, 15], "subset": [2, 3, 15], "square_root": 15, "samples_per_class": 15, "fn": 15, "iter": [2, 3, 15], "grp_regex": 15, "shuffl": [3, 15], "quiet": [2, 15], "patient": 15, "grep": 15, "regular": 15, "express": 15, "search": [15, 17, 18], "print": [2, 3, 15], "inform": [2, 3, 15], "augment_oper": 16, "num_magnitude_bin": 16, "31": 16, "independ": 16, "trivialaug": 16, "custom": 16, "tune": 16, "free": 16, "art": 16, "10158": 16, "magnitud": 16, "modifi": 16, "modif": 16, "done": 16, "random": [2, 16], "divid": 16, "bin": 16, "definit": 16, "structur": 16, "achiev": [3, 16], "multi": [3, 16], "zscore": 16, "image_bas": 16, "ndarrai": 16, "chosen": 16, "sharpness_factor": 16, "posterize_bin": 16, "reduc": [3, 16], "bit": 16, "solarize_threshold": 16, "abov": 16, "maxim": 16, "remap": 16, "lowest": [2, 16], "becom": 16, "lightest": 16, "histogram": 16, "creat": [3, 16, 17], "uniform": 16, "nois": 16, "alphastd": 16, "eigval": 16, "eigvec": 16, "alexnet": 16, "style": 16, "pca": 16, "automl": 16, "3bfd06552336244b23b357b2c973859500328fbb": 16, "prob": 16, "contrast_prob": 16, "param": [2, 16], "blur_prob": 16, "noise_prob": 16, "shear_degre": 16, "shear": 16, "along": 16, "axi": 16, "180": 16, "translate_ratio": 16, "positv": 16, "move": [3, 16], "down": 16, "up": 16, "crop_ratio": 16, "min_ratio": 16, "max_ratio": 16, "portion": 16, "kept": 16, "lower": [3, 16], "rotate_degre": 16, "scale_rang": 16, "scale_width": 16, "scale_height": 16, "scale_sam": 16, "interpolationmod": 16, "accord": 16, "boolean": [3, 16], "scale_width_factor": 16, "scale_height_factor": 16, "separ": 16, "share": 16, "enum": 16, "max_siz": 16, "antialia": 16, "short": 16, "224": 16, "224x224": 16, "allow": [2, 16], "longer": [3, 16], "min_size_list": 16, "shorter": 16, "less": 16, "neither": [16, 17], "long": 16, "pick": 16, "behavior": 16, "08": 16, "75": 16, "3333333333333333": 16, "popularli": 16, "tule": 16, "interpret": 16, "static": [2, 16, 17], "crop_siz": 16, "mask_typ": 16, "obj_label": 16, "background": 16, "unchang": 16, "translate_prob": 16, "crop_prob": 16, "cvspatialbas": 16, "cv2": 16, "inter_linear": 16, "shift_limit": 16, "error_msg": 16, "shift_xi": 16, "seq": 17, "expected_typ": 17, "seq_typ": 17, "check": [2, 17], "name_dict": 17, "cls_name": 17, "decor": 17, "src_arg_nam": 17, "dst_arg_nam": 17, "val": [2, 17], "new": 17, "func": 17, "filenam": [2, 17], "df": 17, "sheet_nam": 17, "sheet1": 17, "startrow": 17, "truncate_sheet": 17, "to_excel_kwarg": 17, "append": 17, "datafram": 17, "exist": 17, "excel": 17, "sheet": 17, "doesn": 17, "path": [2, 3, 17], "excelwrit": 17, "xlsx": 17, "workbook": 17, "cell": 17, "dump": 17, "frame": 17, "write": 17, "next": 17, "truncat": 17, "recreat": 17, "to_excel": 17, "maxu": 17, "stackoverflow": 17, "5741205": 17, "tab": 17, "profil": 17, "question": 17, "20219254": 17, "overwrit": 17, "panda": 17, "default_arg": 17, "rubric": 17, "instanti": 17, "def": [3, 17], "least": 17, "build_func": 17, "parent": 17, "string": [3, 17], "could": 17, "built": 17, "meanwhil": 17, "mmcv": 17, "readthedoc": 17, "io": 17, "en": 17, "latest": 17, "understand_mmcv": 17, "html": 17, "advanc": 17, "usag": [2, 17], "inherit": [3, 17], "mmdet": 17, "mmcl": 17, "mmseg": 17, "infer": 17, "split": [2, 17], "remain": 17, "record": 17, "cl": 17, "forc": 17, "self": [3, 17], "_module_dict": 17, "whose": [2, 17], "itself": 17, "mnet": 17, "mobilenet": 17, "overrid": 17, "cuda": [3, 17], "epoch": [3, 17], "nb_save": 17, "metric_logg": 17, "packag": 17, "subpackag": [], "submodul": 7, "modul": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18], "content": 1, "training_util": 18, "builder": 18, "testing_util": 18, "running_mean": [], "running_var": [], "num_batches_track": [], "atlassegment": [0, 2], "load_imag": [0, 2], "eyepacsclassif": [0, 2], "test_valid_split": [0, 2], "eyepacsclassificationpng": [0, 2], "eyepacs_preprocess": [0, 2], "imagenetclassif": [0, 2], "class_to_idx": [0, 2], "wnid": [0, 2], "wnid_to_idx": [0, 2], "build_dataset_info": [0, 2], "parse_arch": [0, 2], "data_fold": [0, 2], "load_meta_fil": [0, 2], "parse_devkit_arch": [0, 2], "parse_train_arch": [0, 2], "parse_val_arch": [0, 2], "promisesegment": [0, 2], "gen_bar_updat": [0, 2], "calculate_md5": [0, 2], "check_md5": [0, 2], "check_integr": [0, 2], "download_url": [0, 2], "list_dir": [0, 2], "list_fil": [0, 2], "download_file_from_google_dr": [0, 2], "extract_arch": [0, 2], "download_and_extract_arch": [0, 2], "iterable_to_str": [0, 2], "verify_str_arg": [0, 2], "vocbas": [0, 2], "vocsegment": [0, 2], "vocdetect": [0, 2], "parse_voc_xml": [0, 2], "get_bbox_target": [0, 2], "earlystop": [0, 3], "copi": [0, 3], "copy_back": [0, 3], "state_dict": [0, 3], "load_state_dict": [0, 3], "lrfinder": [0, 3], "range_test": [0, 3], "plot": [0, 3], "linearlr": [0, 3], "get_lr": [0, 3], "exponentiallr": [0, 3], "statecach": [0, 3], "retriev": [0, 3], "set_lr_schedul": [0, 3], "get_warmup_lr_schedul": [0, 3], "train_one_epoch": [0, 3], "evaluate_one_epoch": [0, 3], "smoothedvalu": [0, 3], "synchronize_between_process": [0, 3], "median": [0, 3], "global_avg": [0, 3], "all_gath": [0, 3], "reduce_dict": [0, 3], "metriclogg": [0, 3], "add_met": [0, 3], "log_everi": [0, 3], "collate_fn": [0, 3], "warmup_lr_schedul": [0, 3], "mkdir": [0, 3], "setup_for_distribut": [0, 3], "is_dist_avail_and_initi": [0, 3], "get_world_s": [0, 3], "get_rank": [0, 3], "is_main_process": [0, 3], "save_on_mast": [0, 3], "init_distributed_mod": [0, 3], "init_distributed_mode_wj": [0, 3], "create_testing_dataload": 0, "dataset_class": 0, "dataset_param": 0, "test_batch_s": 0, "worker": 0, "root": 2, "image_fold": 2, "gt_folder": 2, "margin": 2, "folder": 2, "in_memori": [2, 3], "do": [2, 3], "log": 2, "info": 2, "use_valid": 2, "valid_se": 2, "valid_ratio": 2, "ey": 2, "pac": 2, "diabet": 2, "retinopathi": 2, "seed": 2, "1200": 2, "png": 2, "emploi": 2, "num_work": 2, "2012": 2, "link": 2, "challeng": 2, "lsvrc": 2, "php": 2, "class_nam": 2, "class_index": 2, "wordnet": 2, "id": 2, "wordnet_id": 2, "pars": 2, "devkit": 2, "archiv": 2, "imagenet2012": 2, "meta": 2, "binari": 2, "ilsvrc2012_devkit_t12": 2, "tar": 2, "gz": 2, "prepar": [2, 3], "ilsvrc2012_img_train": 2, "ilsvrc2012_img_v": 2, "fpath": 2, "chunk_siz": 2, "1048576": 2, "md5": 2, "url": 2, "max_redirect_hop": 2, "place": [2, 3], "under": [2, 3], "basenam": 2, "checksum": 2, "redirect": 2, "hop": 2, "prefix": 2, "prepend": 2, "found": 2, "suffix": 2, "end": 2, "jpg": 2, "python": [2, 3], "endswith": 2, "file_id": 2, "drive": 2, "from_path": 2, "to_path": 2, "remove_finish": 2, "download_root": 2, "extract_root": 2, "valid_valu": 2, "custom_msg": 2, "year": 2, "2007": 2, "image_set": 2, "keep_difficult": 2, "trainval": 2, "difficult": 2, "node": 2, "min_delta": 3, "patienc": 3, "percentag": 3, "decay_r": 3, "num_upd": 3, "moving_averag": 3, "decai": 3, "parmet": 3, "cpu": 3, "memory_cach": 3, "cache_dir": 3, "boundari": 3, "manner": 3, "valuabl": 3, "what": 3, "davidtv": 3, "lr": 3, "finder": 3, "wrap": 3, "criterion": 3, "ordin": 3, "altern": 3, "cach": 3, "temporari": 3, "system": 3, "notic": 3, "dataload": 3, "end_lr": 3, "100": 3, "num_it": 3, "inspect": 3, "graph": 3, "reset": 3, "1506": 3, "01186": 3, "fastai": 3, "lr_find": 3, "train_load": 3, "val_load": 3, "start_lr": 3, "step_mod": 3, "exp": 3, "smooth_f": 3, "diverge_th": 3, "accumulation_step": 3, "non_blocking_transf": 3, "child": 3, "traindataloaderit": 3, "loader": 3, "howev": 3, "redefin": 3, "inputs_labels_from_batch": 3, "validdataloaderit": 3, "evalu": 3, "significantli": 3, "produc": 3, "precis": 3, "similarli": 3, "occur": 3, "avail": 3, "polici": 3, "disabl": 3, "surpass": 3, "best_loss": 3, "gradient": 3, "accumul": 3, "tri": 3, "asynchron": 3, "possibl": 3, "pin": 3, "approach": 3, "lesli": 3, "smith": 3, "trainload": 3, "train_data": 3, "desired_b": 3, "real_b": 3, "requir": 3, "acc_lr_find": 3, "intehit": 3, "labl": 3, "import": 3, "torch_lr_find": 3, "trainit": 3, "batch_data": 3, "user_featur": 3, "user_histori": 3, "y_label": 3, "train_data_it": 3, "train_dl": 3, "_train_loss": 3, "need_one_hot": 3, "300": 3, "tip": 3, "gpu": 3, "setup": 3, "medium": 3, "huggingfac": 3, "ec88c3e51255": 3, "thomwolf": 3, "gradient_accumul": 3, "gist": 3, "ac7a7da6b1888c2eeac8ac8b9b05d3d3": 3, "skip_start": 3, "skip_end": 3, "log_lr": 3, "show_lr": 3, "ax": 3, "suggest_lr": 3, "trim": 3, "logarithm": 3, "visual": 3, "matplotlib": 3, "figur": 3, "shown": 3, "suggest": 3, "steepest": 3, "minim": 3, "guess": 3, "last_epoch": 3, "_lrschedul": 3, "linearli": 3, "valid_load": 3, "lr_schedul": 3, "lr_scheduler_mod": 3, "lr_scheduler_metr": 3, "warmup_epoch": 3, "train_sampl": 3, "80": 3, "non_block": 3, "early_stop_pati": 3, "output_dir": 3, "trane": 3, "schedul": 3, "warmup": 3, "conduct": 3, "total": 3, "transfer": 3, "epcoh": 3, "earli": 3, "sub_epoch": 3, "epoch_per_sav": 3, "epoch_save_start": 3, "clipnorm": 3, "001": 3, "print_freq": 3, "equival": 3, "unit": 3, "especi": 3, "save_al": 3, "clip": 3, "norm": 3, "window_s": 3, "fmt": 3, "track": 3, "seri": 3, "access": 3, "window": 3, "warn": 3, "doe": 3, "synchron": 3, "dequ": 3, "picklabl": 3, "necessarili": 3, "gather": 3, "rank": 3, "input_dict": 3, "sum": 3, "process": 3, "field": 3, "reduct": 3, "delimit": 3, "meter": 3, "header": 3, "warmup_it": 3, "warmup_factor": 3, "is_mast": 3}, "objects": {"horizonms": [[0, 0, 0, "-", "builder"], [0, 0, 0, "-", "testing_utils"]], "horizonms.builder": [[0, 1, 1, "", "build_backbone"], [0, 1, 1, "", "build_head"], [0, 1, 1, "", "build_loss"], [0, 1, 1, "", "build_metric"], [0, 1, 1, "", "build_neck"], [0, 1, 1, "", "build_net"], [0, 1, 1, "", "build_transforms"]], "horizonms.configs": [[1, 0, 0, "-", "config"]], "horizonms.configs.config": [[1, 1, 1, "", "config_updates"], [1, 1, 1, "", "read_config_file"], [1, 1, 1, "", "save_config_file"]], "horizonms.datasets": [[2, 0, 0, "-", "atlas"], [2, 0, 0, "-", "base"], [2, 0, 0, "-", "eyepacs"], [2, 0, 0, "-", "imagenet"], [2, 0, 0, "-", "promise"], [2, 0, 0, "-", "utils"], [2, 0, 0, "-", "voc"]], "horizonms.datasets.atlas": [[2, 2, 1, "", "AtlasSegmentation"]], "horizonms.datasets.atlas.AtlasSegmentation": [[2, 3, 1, "", "get_images"], [2, 3, 1, "", "getitem"], [2, 3, 1, "", "load_images"]], "horizonms.datasets.base": [[2, 2, 1, "", "BaseDataset"]], "horizonms.datasets.base.BaseDataset": [[2, 3, 1, "", "format_target"], [2, 3, 1, "", "get_images"], [2, 3, 1, "", "get_target_single_item"], [2, 3, 1, "", "getitem"], [2, 4, 1, "", "len"]], "horizonms.datasets.eyepacs": [[2, 2, 1, "", "EyePACSClassification"], [2, 2, 1, "", "EyePACSClassificationPng"], [2, 1, 1, "", "eyepacs_preprocessing"]], "horizonms.datasets.eyepacs.EyePACSClassification": [[2, 3, 1, "", "get_images"], [2, 3, 1, "", "getitem"], [2, 3, 1, "", "test_valid_split"]], "horizonms.datasets.eyepacs.EyePACSClassificationPng": [[2, 3, 1, "", "getitem"]], "horizonms.datasets.imagenet": [[2, 2, 1, "", "ImageNetClassification"], [2, 1, 1, "", "load_meta_file"], [2, 1, 1, "", "parse_devkit_archive"], [2, 1, 1, "", "parse_train_archive"], [2, 1, 1, "", "parse_val_archive"]], "horizonms.datasets.imagenet.ImageNetClassification": [[2, 3, 1, "", "build_dataset_info"], [2, 5, 1, "", "class_to_idx"], [2, 5, 1, "", "classes"], [2, 4, 1, "", "data_folder"], [2, 3, 1, "", "get_images"], [2, 3, 1, "", "getitem"], [2, 3, 1, "", "parse_archives"], [2, 5, 1, "", "wnid_to_idx"], [2, 5, 1, "", "wnids"]], "horizonms.datasets.promise": [[2, 2, 1, "", "PromiseSegmentation"]], "horizonms.datasets.promise.PromiseSegmentation": [[2, 3, 1, "", "get_images"], [2, 3, 1, "", "getitem"], [2, 3, 1, "", "load_images"]], "horizonms.datasets.utils": [[2, 1, 1, "", "calculate_md5"], [2, 1, 1, "", "check_integrity"], [2, 1, 1, "", "check_md5"], [2, 1, 1, "", "download_and_extract_archive"], [2, 1, 1, "", "download_file_from_google_drive"], [2, 1, 1, "", "download_url"], [2, 1, 1, "", "extract_archive"], [2, 1, 1, "", "gen_bar_updater"], [2, 1, 1, "", "iterable_to_str"], [2, 1, 1, "", "list_dir"], [2, 1, 1, "", "list_files"], [2, 1, 1, "", "verify_str_arg"]], "horizonms.datasets.voc": [[2, 2, 1, "", "VOCBase"], [2, 2, 1, "", "VOCDetection"], [2, 2, 1, "", "VOCSegmentation"]], "horizonms.datasets.voc.VOCBase": [[2, 3, 1, "", "get_images"]], "horizonms.datasets.voc.VOCDetection": [[2, 3, 1, "", "get_bbox_target"], [2, 3, 1, "", "getitem"], [2, 3, 1, "", "parse_voc_xml"]], "horizonms.datasets.voc.VOCSegmentation": [[2, 3, 1, "", "getitem"]], "horizonms.engine": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "early_stop"], [3, 0, 0, "-", "ema"], [3, 0, 0, "-", "lr_finder"], [3, 0, 0, "-", "trainer"], [3, 0, 0, "-", "utils"]], "horizonms.engine.base": [[3, 2, 1, "", "CheckpointMetric"], [3, 1, 1, "", "save_checkpoints_update"]], "horizonms.engine.base.CheckpointMetric": [[3, 3, 1, "", "value_update"]], "horizonms.engine.early_stop": [[3, 2, 1, "", "EarlyStopping"]], "horizonms.engine.early_stop.EarlyStopping": [[3, 3, 1, "", "step"]], "horizonms.engine.ema": [[3, 2, 1, "", "EMA"]], "horizonms.engine.ema.EMA": [[3, 3, 1, "", "copy"], [3, 3, 1, "", "copy_back"], [3, 3, 1, "", "load_state_dict"], [3, 3, 1, "", "state_dict"], [3, 3, 1, "", "store"], [3, 3, 1, "", "to"], [3, 3, 1, "", "update"]], "horizonms.engine.lr_finder": [[3, 2, 1, "", "ExponentialLR"], [3, 2, 1, "", "LRFinder"], [3, 2, 1, "", "LinearLR"], [3, 2, 1, "", "StateCacher"]], "horizonms.engine.lr_finder.ExponentialLR": [[3, 3, 1, "", "get_lr"]], "horizonms.engine.lr_finder.LRFinder": [[3, 3, 1, "", "plot"], [3, 3, 1, "", "range_test"]], "horizonms.engine.lr_finder.LinearLR": [[3, 3, 1, "", "get_lr"]], "horizonms.engine.lr_finder.StateCacher": [[3, 3, 1, "", "retrieve"], [3, 3, 1, "", "store"]], "horizonms.engine.trainer": [[3, 2, 1, "", "Trainer"]], "horizonms.engine.trainer.Trainer": [[3, 3, 1, "", "evaluate_one_epoch"], [3, 3, 1, "", "get_warmup_lr_scheduler"], [3, 3, 1, "", "lr_finder"], [3, 3, 1, "", "set_lr_scheduler"], [3, 3, 1, "", "train"], [3, 3, 1, "", "train_one_epoch"]], "horizonms.engine.utils": [[3, 2, 1, "", "MetricLogger"], [3, 2, 1, "", "SmoothedValue"], [3, 1, 1, "", "all_gather"], [3, 1, 1, "", "collate_fn"], [3, 1, 1, "", "get_rank"], [3, 1, 1, "", "get_world_size"], [3, 1, 1, "", "init_distributed_mode"], [3, 1, 1, "", "init_distributed_mode_wj"], [3, 1, 1, "", "is_dist_avail_and_initialized"], [3, 1, 1, "", "is_main_process"], [3, 1, 1, "", "mkdir"], [3, 1, 1, "", "reduce_dict"], [3, 1, 1, "", "save_on_master"], [3, 1, 1, "", "setup_for_distributed"], [3, 1, 1, "", "warmup_lr_scheduler"]], "horizonms.engine.utils.MetricLogger": [[3, 3, 1, "", "add_meter"], [3, 3, 1, "", "log_every"], [3, 3, 1, "", "synchronize_between_processes"], [3, 3, 1, "", "update"]], "horizonms.engine.utils.SmoothedValue": [[3, 4, 1, "", "avg"], [3, 4, 1, "", "global_avg"], [3, 4, 1, "", "max"], [3, 4, 1, "", "median"], [3, 3, 1, "", "synchronize_between_processes"], [3, 3, 1, "", "update"], [3, 4, 1, "", "value"]], "horizonms.losses": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "bbox_sigmoid_func"], [4, 0, 0, "-", "bbox_sigmoid_losses"], [4, 0, 0, "-", "functional_tensor"], [4, 0, 0, "-", "losses"], [4, 0, 0, "-", "losses_func"], [4, 0, 0, "-", "parallel_transform"], [4, 0, 0, "-", "polar_transform"], [4, 0, 0, "-", "regression_losses"], [4, 0, 0, "-", "sigmoid_losses"], [4, 0, 0, "-", "sigmoid_softmax_losses"], [4, 0, 0, "-", "softmax_losses"]], "horizonms.losses.base": [[4, 2, 1, "", "SigmoidBaseLoss"], [4, 2, 1, "", "SoftmaxBaseLoss"]], "horizonms.losses.base.SigmoidBaseLoss": [[4, 3, 1, "", "calculate_loss"], [4, 3, 1, "", "detect_existing_values"], [4, 3, 1, "", "preprocess"]], "horizonms.losses.base.SoftmaxBaseLoss": [[4, 3, 1, "", "calculate_loss"], [4, 3, 1, "", "preprocess"], [4, 3, 1, "", "remove_missing_values"]], "horizonms.losses.bbox_sigmoid_func": [[4, 1, 1, "", "mil_approx_polar_sigmoid_loss"], [4, 1, 1, "", "mil_approx_unary_baseline_pos_generalized_neg_sigmoid_loss"], [4, 1, 1, "", "mil_approx_unary_baseline_sigmoid_loss"], [4, 1, 1, "", "mil_approx_unary_bbox_pos_generalized_neg_sigmoid_loss"], [4, 1, 1, "", "mil_approx_unary_parallel_sigmoid_loss"], [4, 1, 1, "", "mil_pairwise_loss"], [4, 1, 1, "", "mil_unary_baseline_pos_generalized_neg_sigmoid_loss"], [4, 1, 1, "", "mil_unary_baseline_sigmoid_loss"], [4, 1, 1, "", "mil_unary_bbox_pos_generalized_neg_sigmoid_loss"], [4, 1, 1, "", "mil_unary_parallel_sigmoid_loss"]], "horizonms.losses.bbox_sigmoid_losses": [[4, 2, 1, "", "MILApproxUnaryBaselinePosGeneralizedNegSigmoidLoss"], [4, 2, 1, "", "MILApproxUnaryBaselineSigmoidLoss"], [4, 2, 1, "", "MILApproxUnaryBboxPosGeneralizedNegSigmoidLoss"], [4, 2, 1, "", "MILApproxUnaryParallelSigmoidLoss"], [4, 2, 1, "", "MILApproxUnaryPolarSigmoidLoss"], [4, 2, 1, "", "MILPairwiseLoss"], [4, 2, 1, "", "MILUnaryBaselinePosGeneralizedNegSigmoidLoss"], [4, 2, 1, "", "MILUnaryBaselineSigmoidLoss"], [4, 2, 1, "", "MILUnaryBboxPosGeneralizedNegSigmoidLoss"], [4, 2, 1, "", "MILUnaryParallelSigmoidLoss"]], "horizonms.losses.functional_tensor": [[4, 1, 1, "", "adjust_brightness"], [4, 1, 1, "", "adjust_contrast"], [4, 1, 1, "", "adjust_gamma"], [4, 1, 1, "", "adjust_hue"], [4, 1, 1, "", "adjust_saturation"], [4, 1, 1, "", "affine"], [4, 1, 1, "", "center_crop"], [4, 1, 1, "", "convert_image_dtype"], [4, 1, 1, "", "crop"], [4, 1, 1, "", "five_crop"], [4, 1, 1, "", "gaussian_blur"], [4, 1, 1, "", "hflip"], [4, 1, 1, "", "pad"], [4, 1, 1, "", "perspective"], [4, 1, 1, "", "resize"], [4, 1, 1, "", "rgb_to_grayscale"], [4, 1, 1, "", "rotate"], [4, 1, 1, "", "ten_crop"], [4, 1, 1, "", "vflip"]], "horizonms.losses.losses": [[4, 2, 1, "", "CDRSmoothL1Loss"], [4, 2, 1, "", "PseudoCrossEntropyLoss"], [4, 2, 1, "", "PseudoPositiveCrossEntropyLoss"], [4, 2, 1, "", "WeakCrossEntropyLoss"]], "horizonms.losses.losses_func": [[4, 1, 1, "", "bbox_overlaps"], [4, 1, 1, "", "size_constraint_loss"], [4, 1, 1, "", "smooth_l1_loss"], [4, 1, 1, "", "weak_bce_sigmoid_loss"], [4, 1, 1, "", "weak_cross_entropy"]], "horizonms.losses.parallel_transform": [[4, 1, 1, "", "parallel_transform"], [4, 1, 1, "", "rotate"]], "horizonms.losses.polar_transform": [[4, 1, 1, "", "polar_transform"]], "horizonms.losses.regression_losses": [[4, 2, 1, "", "RegressionIouLoss"], [4, 2, 1, "", "SmoothL1Loss"]], "horizonms.losses.sigmoid_losses": [[4, 2, 1, "", "SigmoidCrossEntropyLoss"], [4, 2, 1, "", "SigmoidFocalLoss"]], "horizonms.losses.sigmoid_losses.SigmoidCrossEntropyLoss": [[4, 3, 1, "", "calculate_loss"]], "horizonms.losses.sigmoid_losses.SigmoidFocalLoss": [[4, 3, 1, "", "calculate_loss"]], "horizonms.losses.sigmoid_softmax_losses": [[4, 2, 1, "", "DiceLoss"]], "horizonms.losses.softmax_losses": [[4, 2, 1, "", "SoftmaxCohenKappaLoss"], [4, 2, 1, "", "SoftmaxCrossEntropyLoss"], [4, 2, 1, "", "SoftmaxFocalLoss"], [4, 2, 1, "", "SoftmaxMixFocalLoss"]], "horizonms.losses.softmax_losses.SoftmaxCohenKappaLoss": [[4, 3, 1, "", "calculate_loss"]], "horizonms.losses.softmax_losses.SoftmaxCrossEntropyLoss": [[4, 3, 1, "", "calculate_loss"]], "horizonms.losses.softmax_losses.SoftmaxFocalLoss": [[4, 3, 1, "", "calculate_loss"]], "horizonms.losses.softmax_losses.SoftmaxMixFocalLoss": [[4, 3, 1, "", "calculate_loss"]], "horizonms.metrics": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "sigmoid_metrics"], [5, 0, 0, "-", "sigmoid_metrics_func"], [5, 0, 0, "-", "sigmoid_softmax_func"], [5, 0, 0, "-", "sigmoid_softmax_metrics"], [5, 0, 0, "-", "softmax_metrics"], [5, 0, 0, "-", "softmax_metrics_func"]], "horizonms.metrics.sigmoid_metrics": [[5, 2, 1, "", "SigmoidAccuracy"]], "horizonms.metrics.sigmoid_metrics_func": [[5, 1, 1, "", "sigmoid_accuracy"]], "horizonms.metrics.sigmoid_softmax_func": [[5, 1, 1, "", "dice_coefficient"], [5, 1, 1, "", "iou_score"]], "horizonms.metrics.sigmoid_softmax_metrics": [[5, 2, 1, "", "DiceCoefficient"], [5, 2, 1, "", "IouScore"]], "horizonms.metrics.softmax_metrics": [[5, 2, 1, "", "SoftmaxAccuracy"], [5, 2, 1, "", "SoftmaxAccuracyTopk"], [5, 2, 1, "", "SoftmaxCohenKappaScore"]], "horizonms.metrics.softmax_metrics_func": [[5, 1, 1, "", "softmax_accuracy"], [5, 1, 1, "", "softmax_accuracy_topk"], [5, 1, 1, "", "softmax_cohen_kappa_score"]], "horizonms.models.backbones": [[7, 0, 0, "-", "backbone"], [7, 0, 0, "-", "backbone_detection"], [7, 0, 0, "-", "backbone_fpn"], [7, 0, 0, "-", "backbone_unet"], [7, 0, 0, "-", "backbone_vgg_cfg"], [7, 0, 0, "-", "base"]], "horizonms.models.backbones.backbone": [[7, 1, 1, "", "efficientnet_backbone"], [7, 1, 1, "", "resnet_backbone"], [7, 1, 1, "", "vgg_backbone"]], "horizonms.models.backbones.backbone_detection": [[7, 1, 1, "", "vgg_fpn_det_v1"], [7, 1, 1, "", "vgg_fpn_det_v2"]], "horizonms.models.backbones.backbone_fpn": [[7, 1, 1, "", "resnet_fpn_backbone"], [7, 1, 1, "", "vgg_fpn_backbone"]], "horizonms.models.backbones.backbone_unet": [[7, 1, 1, "", "densenet_unet_backbone"], [7, 1, 1, "", "mobilenetv2_unet_backbone"], [7, 1, 1, "", "resnet_unet_backbone"], [7, 1, 1, "", "vgg_unet_backbone"]], "horizonms.models.backbones.backbone_vgg_cfg": [[7, 2, 1, "", "BackboneVGGCfg"], [7, 2, 1, "", "VGGCfg"], [7, 1, 1, "", "vgg_cfg_backbone_v1"], [7, 1, 1, "", "vgg_cfg_backbone_v2"]], "horizonms.models.backbones.backbone_vgg_cfg.BackboneVGGCfg": [[7, 3, 1, "", "forward"]], "horizonms.models.backbones.backbone_vgg_cfg.VGGCfg": [[7, 3, 1, "", "forward"]], "horizonms.models.backbones.base": [[7, 2, 1, "", "Backbone"], [7, 2, 1, "", "BackboneWithFPN"], [7, 2, 1, "", "IntermediateLayerGetter"]], "horizonms.models.backbones.base.Backbone": [[7, 3, 1, "", "forward"], [7, 5, 1, "", "out_channels"]], "horizonms.models.backbones.base.BackboneWithFPN": [[7, 3, 1, "", "forward"]], "horizonms.models.backbones.base.IntermediateLayerGetter": [[7, 3, 1, "", "forward"]], "horizonms.models": [[6, 0, 0, "-", "batch_image"], [6, 0, 0, "-", "model_base"]], "horizonms.models.batch_image": [[6, 2, 1, "", "BatchImage"]], "horizonms.models.batch_image.BatchImage": [[6, 3, 1, "", "batch_images"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "max_by_axis"]], "horizonms.models.classification": [[8, 0, 0, "-", "classification"], [8, 0, 0, "-", "classification_base"]], "horizonms.models.classification.classification": [[8, 2, 1, "", "Classification"]], "horizonms.models.classification.classification.Classification": [[8, 3, 1, "", "calculate_loss"], [8, 3, 1, "", "calculate_losses"], [8, 3, 1, "", "calculate_metric"], [8, 3, 1, "", "calculate_metrics"]], "horizonms.models.classification.classification_base": [[8, 2, 1, "", "BaseClassification"], [8, 2, 1, "", "ClassificationNetFromModules"], [8, 1, 1, "", "get_classification_net"]], "horizonms.models.classification.classification_base.BaseClassification": [[8, 3, 1, "", "calculate_losses"], [8, 3, 1, "", "calculate_metrics"], [8, 3, 1, "", "forward_train"], [8, 3, 1, "", "predict_one_batch"], [8, 3, 1, "", "preprocessing_input"], [8, 3, 1, "", "test_one_batch"]], "horizonms.models.classification.classification_base.ClassificationNetFromModules": [[8, 3, 1, "", "forward"]], "horizonms.models.detection": [[9, 0, 0, "-", "anchors_retinanet"], [9, 0, 0, "-", "anchors_yolo"], [9, 0, 0, "-", "boxes"], [9, 0, 0, "-", "detection"], [9, 0, 0, "-", "detection_base"], [9, 0, 0, "-", "retinanet"], [9, 0, 0, "-", "yolonet"], [9, 0, 0, "-", "yolov1"], [9, 0, 0, "-", "yolov1_utils"]], "horizonms.models.detection.anchors_retinanet": [[9, 2, 1, "", "AnchorGenerator"], [9, 2, 1, "", "BBoxCoder"], [9, 1, 1, "", "anchor_targets_bbox"], [9, 1, 1, "", "bbox_transform"], [9, 1, 1, "", "bbox_transform_batch"], [9, 1, 1, "", "bbox_transform_inv_batch"], [9, 1, 1, "", "clip_boxes"], [9, 1, 1, "", "compute_gt_annotations"]], "horizonms.models.detection.anchors_retinanet.AnchorGenerator": [[9, 3, 1, "", "cached_grid_anchors"], [9, 5, 1, "", "cell_anchors"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "generate_anchors"], [9, 3, 1, "", "grid_anchors"], [9, 3, 1, "", "num_anchors_per_location"], [9, 3, 1, "", "set_cell_anchors"]], "horizonms.models.detection.anchors_retinanet.BBoxCoder": [[9, 3, 1, "", "decode"], [9, 3, 1, "", "encode"], [9, 3, 1, "", "encode_single"]], "horizonms.models.detection.anchors_yolo": [[9, 2, 1, "", "BoxCoderYoloV1"], [9, 1, 1, "", "create_grid"], [9, 1, 1, "", "decode_box"], [9, 1, 1, "", "encode_box"], [9, 1, 1, "", "generate_feature_shape"], [9, 1, 1, "", "generate_stride"], [9, 1, 1, "", "generate_target_yolov1"], [9, 1, 1, "", "generate_target_yolov2"]], "horizonms.models.detection.anchors_yolo.BoxCoderYoloV1": [[9, 3, 1, "", "decode"], [9, 3, 1, "", "decode_single"], [9, 3, 1, "", "encode_single"]], "horizonms.models.detection.boxes": [[9, 1, 1, "", "box_area"], [9, 1, 1, "", "box_iou"], [9, 1, 1, "", "paired_box_iou"]], "horizonms.models.detection.detection": [[9, 2, 1, "", "Detection"]], "horizonms.models.detection.detection.Detection": [[9, 3, 1, "", "calculate_loss"], [9, 3, 1, "", "calculate_losses"], [9, 3, 1, "", "calculate_metric"], [9, 3, 1, "", "calculate_metrics"], [9, 3, 1, "", "forward_train"], [9, 3, 1, "", "predict_one_batch"], [9, 3, 1, "", "test_one_batch"]], "horizonms.models.detection.detection_base": [[9, 2, 1, "", "BaseDetection"]], "horizonms.models.detection.detection_base.BaseDetection": [[9, 3, 1, "", "calculate_losses"], [9, 3, 1, "", "calculate_metrics"], [9, 3, 1, "", "forward_train"], [9, 3, 1, "", "predict_one_batch"], [9, 3, 1, "", "preprocessing_input"], [9, 3, 1, "", "test_one_batch"]], "horizonms.models.detection.retinanet": [[9, 2, 1, "", "Retinanet"], [9, 2, 1, "", "RetinanetHead"]], "horizonms.models.detection.retinanet.Retinanet": [[9, 3, 1, "", "forward"], [9, 3, 1, "", "get_gts"], [9, 3, 1, "", "postprocess_detections"], [9, 3, 1, "", "pred_postprocessing_for_loss_calculation"]], "horizonms.models.detection.retinanet.RetinanetHead": [[9, 3, 1, "", "forward"]], "horizonms.models.detection.yolonet": [[9, 2, 1, "", "YOLODetection"]], "horizonms.models.detection.yolonet.YOLODetection": [[9, 3, 1, "", "calculate_losses"], [9, 3, 1, "", "calculate_metrics"], [9, 3, 1, "", "forward_train"], [9, 3, 1, "", "predict_one_batch"], [9, 3, 1, "", "test_one_batch"]], "horizonms.models.detection.yolov1": [[9, 2, 1, "", "YOLOv1"], [9, 2, 1, "", "YOLOv1Losses"], [9, 2, 1, "", "YOLOv1Metrics"]], "horizonms.models.detection.yolov1.YOLOv1": [[9, 3, 1, "", "forward"], [9, 3, 1, "", "get_feature_shape"], [9, 3, 1, "", "get_gts"], [9, 3, 1, "", "get_stride"], [9, 3, 1, "", "initialize_weights"], [9, 3, 1, "", "nms_postprocessing"]], "horizonms.models.detection.yolov1_utils": [[9, 2, 1, "", "BottlenetNeck"], [9, 2, 1, "", "DefaultDarknet"], [9, 2, 1, "", "DefaultYolov1Head"], [9, 2, 1, "", "DetNeckBlock"], [9, 2, 1, "", "Yolov1Head"]], "horizonms.models.detection.yolov1_utils.BottlenetNeck": [[9, 3, 1, "", "forward"]], "horizonms.models.detection.yolov1_utils.DefaultDarknet": [[9, 3, 1, "", "forward"]], "horizonms.models.detection.yolov1_utils.DefaultYolov1Head": [[9, 3, 1, "", "forward"]], "horizonms.models.detection.yolov1_utils.DetNeckBlock": [[9, 3, 1, "", "forward"]], "horizonms.models.detection.yolov1_utils.Yolov1Head": [[9, 3, 1, "", "forward"]], "horizonms.models.heads": [[10, 0, 0, "-", "classification_heads"]], "horizonms.models.heads.classification_heads": [[10, 2, 1, "", "ClassificationMultiHeads"]], "horizonms.models.heads.classification_heads.ClassificationMultiHeads": [[10, 3, 1, "", "forward"]], "horizonms.models.model_base": [[6, 2, 1, "", "BaseModel"]], "horizonms.models.model_base.BaseModel": [[6, 3, 1, "", "calculate_losses"], [6, 3, 1, "", "calculate_metrics"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "forward_train"], [6, 3, 1, "", "load_model"], [6, 3, 1, "", "predict_one_batch"], [6, 3, 1, "", "test_one_batch"]], "horizonms.models.necks": [[11, 0, 0, "-", "classification_necks"], [11, 0, 0, "-", "feature_pyramid_network"]], "horizonms.models.necks.classification_necks": [[11, 2, 1, "", "ClassificationPoolingNecks"]], "horizonms.models.necks.classification_necks.ClassificationPoolingNecks": [[11, 3, 1, "", "forward"]], "horizonms.models.necks.feature_pyramid_network": [[11, 2, 1, "", "FeaturePyramidNetwork"]], "horizonms.models.necks.feature_pyramid_network.FeaturePyramidNetwork": [[11, 3, 1, "", "forward"]], "horizonms.models.nets": [[12, 0, 0, "-", "densenet"], [12, 0, 0, "-", "efficientnet"], [12, 0, 0, "-", "inception_resnet"], [12, 0, 0, "-", "mobilenetv2"], [12, 0, 0, "-", "nfnet"], [12, 0, 0, "-", "resenetrs"], [12, 0, 0, "-", "resnet"], [12, 0, 0, "-", "shufflenetv2"], [12, 0, 0, "-", "utils"], [12, 0, 0, "-", "vgg"], [12, 0, 0, "-", "vgg_like"], [12, 0, 0, "-", "vgg_se"]], "horizonms.models.nets.densenet": [[12, 2, 1, "", "DenseNet"], [12, 1, 1, "", "densenet121"], [12, 1, 1, "", "densenet161"], [12, 1, 1, "", "densenet169"], [12, 1, 1, "", "densenet201"]], "horizonms.models.nets.densenet.DenseNet": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.efficientnet": [[12, 2, 1, "", "EfficientNet"], [12, 1, 1, "", "efficientnet_b0"], [12, 1, 1, "", "efficientnet_b1"], [12, 1, 1, "", "efficientnet_b2"], [12, 1, 1, "", "efficientnet_b3"], [12, 1, 1, "", "efficientnet_b4"], [12, 1, 1, "", "efficientnet_b5"], [12, 1, 1, "", "efficientnet_b6"], [12, 1, 1, "", "efficientnet_b7"], [12, 1, 1, "", "efficientnet_b8"], [12, 1, 1, "", "efficientnet_l2"]], "horizonms.models.nets.efficientnet.EfficientNet": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.inception_resnet": [[12, 2, 1, "", "InceptionResnetV2"], [12, 1, 1, "", "ens_adv_inception_resnet_v2"], [12, 1, 1, "", "inception_resnet_v2"]], "horizonms.models.nets.inception_resnet.InceptionResnetV2": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.mobilenetv2": [[12, 2, 1, "", "MobileNetV2"], [12, 1, 1, "", "mobilenet_v2"]], "horizonms.models.nets.mobilenetv2.MobileNetV2": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.nfnet": [[12, 2, 1, "", "NFNet"], [12, 1, 1, "", "nfnet_f0"], [12, 1, 1, "", "nfnet_f1"], [12, 1, 1, "", "nfnet_f2"], [12, 1, 1, "", "nfnet_f3"], [12, 1, 1, "", "nfnet_f4"], [12, 1, 1, "", "nfnet_f5"]], "horizonms.models.nets.nfnet.NFNet": [[12, 3, 1, "", "exclude_from_clipping"], [12, 3, 1, "", "exclude_from_weight_decay"], [12, 3, 1, "", "forward"]], "horizonms.models.nets.resenetrs": [[12, 2, 1, "", "ResnetRS"], [12, 1, 1, "", "resnetrs101"], [12, 1, 1, "", "resnetrs152"], [12, 1, 1, "", "resnetrs200"], [12, 1, 1, "", "resnetrs50"]], "horizonms.models.nets.resenetrs.ResnetRS": [[12, 3, 1, "", "forward"], [12, 3, 1, "", "init_weights"], [12, 3, 1, "", "make_layers"]], "horizonms.models.nets.resnet": [[12, 2, 1, "", "ResNet"], [12, 1, 1, "", "resnet101"], [12, 1, 1, "", "resnet152"], [12, 1, 1, "", "resnet18"], [12, 1, 1, "", "resnet34"], [12, 1, 1, "", "resnet50"], [12, 1, 1, "", "resnext101_32x8d"], [12, 1, 1, "", "resnext50_32x4d"], [12, 1, 1, "", "wide_resnet101_2"], [12, 1, 1, "", "wide_resnet50_2"]], "horizonms.models.nets.resnet.ResNet": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.shufflenetv2": [[12, 2, 1, "", "ShuffleNetV2"], [12, 1, 1, "", "shufflenet_v2_x0_5"], [12, 1, 1, "", "shufflenet_v2_x1_0"], [12, 1, 1, "", "shufflenet_v2_x1_5"], [12, 1, 1, "", "shufflenet_v2_x2_0"]], "horizonms.models.nets.shufflenetv2.ShuffleNetV2": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.vgg": [[12, 2, 1, "", "VGG"], [12, 1, 1, "", "vgg11"], [12, 1, 1, "", "vgg11_bn"], [12, 1, 1, "", "vgg13"], [12, 1, 1, "", "vgg13_bn"], [12, 1, 1, "", "vgg13_bn_narrow"], [12, 1, 1, "", "vgg16"], [12, 1, 1, "", "vgg16_bn"], [12, 1, 1, "", "vgg19"], [12, 1, 1, "", "vgg19_bn"]], "horizonms.models.nets.vgg.VGG": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.vgg_like": [[12, 2, 1, "", "VGGLike"], [12, 1, 1, "", "vgg_like_v1"], [12, 1, 1, "", "vgg_like_v2"], [12, 1, 1, "", "vgg_like_v3"]], "horizonms.models.nets.vgg_like.VGGLike": [[12, 3, 1, "", "forward"]], "horizonms.models.nets.vgg_se": [[12, 2, 1, "", "VGG_SE"], [12, 1, 1, "", "make_layers"]], "horizonms.models.nets.vgg_se.VGG_SE": [[12, 3, 1, "", "forward"]], "horizonms.models.ops": [[13, 0, 0, "-", "bn"], [13, 0, 0, "-", "misc"], [13, 0, 0, "-", "stochastic_depth"]], "horizonms.models.ops.bn": [[13, 2, 1, "", "BatchNorm2d"], [13, 2, 1, "", "BatchNormBase"], [13, 2, 1, "", "ExpectedBatchNorm2d"], [13, 2, 1, "", "SampleExpectedBatchNorm2d"], [13, 2, 1, "", "SampleGExpectedBatchNorm2d"]], "horizonms.models.ops.bn.BatchNorm2d": [[13, 3, 1, "", "forward"]], "horizonms.models.ops.bn.BatchNormBase": [[13, 5, 1, "", "affine"], [13, 5, 1, "", "eps"], [13, 5, 1, "", "momentum"], [13, 5, 1, "", "num_features"], [13, 3, 1, "", "reset_parameters"], [13, 3, 1, "", "reset_running_stats"], [13, 5, 1, "", "track_running_stats"]], "horizonms.models.ops.bn.ExpectedBatchNorm2d": [[13, 3, 1, "", "forward"]], "horizonms.models.ops.bn.SampleExpectedBatchNorm2d": [[13, 3, 1, "", "forward"]], "horizonms.models.ops.bn.SampleGExpectedBatchNorm2d": [[13, 3, 1, "", "forward"]], "horizonms.models.ops.misc": [[13, 2, 1, "", "ConvNormActivation"], [13, 2, 1, "", "PseudomaxPooling2D"], [13, 2, 1, "", "SqueezeExcitation"]], "horizonms.models.ops.misc.PseudomaxPooling2D": [[13, 3, 1, "", "forward"]], "horizonms.models.ops.misc.SqueezeExcitation": [[13, 3, 1, "", "forward"]], "horizonms.models.ops.stochastic_depth": [[13, 2, 1, "", "StochasticDepth"], [13, 1, 1, "", "stochastic_depth"]], "horizonms.models.ops.stochastic_depth.StochasticDepth": [[13, 3, 1, "", "forward"]], "horizonms.models.segmentation": [[14, 0, 0, "-", "decoder"], [14, 0, 0, "-", "enet"], [14, 0, 0, "-", "residualunet"], [14, 0, 0, "-", "segmentation"], [14, 0, 0, "-", "segmentation_base"], [14, 0, 0, "-", "segmentation_bbox"], [14, 0, 0, "-", "simpleunet"], [14, 0, 0, "-", "unet"]], "horizonms.models.segmentation.decoder": [[14, 2, 1, "", "UnetSimpleDecoder"], [14, 2, 1, "", "Up_Light"]], "horizonms.models.segmentation.decoder.UnetSimpleDecoder": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "make_layers"]], "horizonms.models.segmentation.decoder.Up_Light": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "make_layers"]], "horizonms.models.segmentation.enet": [[14, 2, 1, "", "BottleNeckDownSampling"], [14, 2, 1, "", "BottleNeckDownSamplingDilatedConv"], [14, 2, 1, "", "BottleNeckDownSamplingDilatedConvLast"], [14, 2, 1, "", "BottleNeckNormal"], [14, 2, 1, "", "BottleNeckNormal_Asym"], [14, 2, 1, "", "BottleNeckUpSampling"], [14, 2, 1, "", "ENet"], [14, 1, 1, "", "convBatch"], [14, 1, 1, "", "conv_block_1"], [14, 1, 1, "", "conv_block_3_3"], [14, 1, 1, "", "conv_block_Asym"], [14, 2, 1, "", "interpolate"], [14, 1, 1, "", "upSampleConv"]], "horizonms.models.segmentation.enet.BottleNeckDownSampling": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.enet.BottleNeckDownSamplingDilatedConv": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.enet.BottleNeckDownSamplingDilatedConvLast": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.enet.BottleNeckNormal": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.enet.BottleNeckNormal_Asym": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.enet.BottleNeckUpSampling": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.enet.ENet": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "init_weights"]], "horizonms.models.segmentation.enet.interpolate": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.residualunet": [[14, 2, 1, "", "Conv_residual_conv"], [14, 2, 1, "", "ResidualUNet"], [14, 1, 1, "", "conv_block"], [14, 1, 1, "", "conv_block_3"], [14, 1, 1, "", "conv_decod_block"], [14, 1, 1, "", "maxpool"]], "horizonms.models.segmentation.residualunet.Conv_residual_conv": [[14, 3, 1, "", "forward"]], "horizonms.models.segmentation.residualunet.ResidualUNet": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "init_weights"]], "horizonms.models.segmentation.segmentation": [[14, 2, 1, "", "Segmentation"]], "horizonms.models.segmentation.segmentation.Segmentation": [[14, 3, 1, "", "calculate_loss"], [14, 3, 1, "", "calculate_losses"], [14, 3, 1, "", "calculate_metric"], [14, 3, 1, "", "calculate_metrics"]], "horizonms.models.segmentation.segmentation_base": [[14, 2, 1, "", "BaseSegmentation"], [14, 1, 1, "", "get_segmentation_net"]], "horizonms.models.segmentation.segmentation_base.BaseSegmentation": [[14, 3, 1, "", "calculate_losses"], [14, 3, 1, "", "calculate_metrics"], [14, 3, 1, "", "forward_train"], [14, 3, 1, "", "predict_one_batch"], [14, 3, 1, "", "preprocessing_input"], [14, 3, 1, "", "test_one_batch"]], "horizonms.models.segmentation.segmentation_bbox": [[14, 2, 1, "", "BboxSegmentation"]], "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation": [[14, 3, 1, "", "calculate_loss"], [14, 3, 1, "", "calculate_losses"], [14, 3, 1, "", "calculate_metric"], [14, 3, 1, "", "calculate_metrics"], [14, 3, 1, "", "calculate_sigmoid_losses"], [14, 3, 1, "", "calculate_softmax_losses"], [14, 3, 1, "", "preprocessing_input"]], "horizonms.models.segmentation.simpleunet": [[14, 2, 1, "", "SimpleEnconderModule"], [14, 2, 1, "", "SimpleUNet"]], "horizonms.models.segmentation.simpleunet.SimpleEnconderModule": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "make_layers"]], "horizonms.models.segmentation.simpleunet.SimpleUNet": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "init_weights"]], "horizonms.models.segmentation.unet": [[14, 2, 1, "", "UNet_V1"], [14, 2, 1, "", "UNet_V2"]], "horizonms.models.segmentation.unet.UNet_V1": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "make_layers"]], "horizonms.models.segmentation.unet.UNet_V2": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "pred_upsampling"]], "horizonms.samplers": [[15, 0, 0, "-", "distributed"], [15, 0, 0, "-", "patient_sampler"], [15, 0, 0, "-", "sampler"]], "horizonms.samplers.distributed": [[15, 2, 1, "", "DistributedBalancedSampler"], [15, 2, 1, "", "DistributedWeightedSampler"]], "horizonms.samplers.patient_sampler": [[15, 2, 1, "", "PatientSampler"], [15, 1, 1, "", "id_"], [15, 1, 1, "", "map_"]], "horizonms.samplers.sampler": [[15, 2, 1, "", "BalancedSampler"]], "horizonms.testing_utils": [[0, 1, 1, "", "create_testing_dataloader"]], "horizonms.transforms": [[16, 0, 0, "-", "augment"], [16, 0, 0, "-", "base"], [16, 0, 0, "-", "batch_transforms"], [16, 0, 0, "-", "image"], [16, 0, 0, "-", "image_cv"], [16, 0, 0, "-", "spatial"], [16, 0, 0, "-", "spatial_cv"], [16, 0, 0, "-", "utils"]], "horizonms.transforms.augment": [[16, 2, 1, "", "CustomizedTrivialAugment"], [16, 2, 1, "", "HorizonmsTrivialAugment"], [16, 2, 1, "", "SequentialAugment"]], "horizonms.transforms.augment.CustomizedTrivialAugment": [[16, 3, 1, "", "forward"]], "horizonms.transforms.augment.HorizonmsTrivialAugment": [[16, 3, 1, "", "forward"]], "horizonms.transforms.augment.SequentialAugment": [[16, 3, 1, "", "forward"]], "horizonms.transforms.base": [[16, 2, 1, "", "Compose"], [16, 2, 1, "", "TargetStructure"], [16, 2, 1, "", "ToTensor"]], "horizonms.transforms.base.TargetStructure": [[16, 3, 1, "", "to"]], "horizonms.transforms.batch_transforms": [[16, 2, 1, "", "Mixup"], [16, 2, 1, "", "SigmoidLabelSmoothing"], [16, 2, 1, "", "SoftmaxLabelSmoothing"], [16, 2, 1, "", "ToOnehotLabels"]], "horizonms.transforms.batch_transforms.Mixup": [[16, 3, 1, "", "forward"]], "horizonms.transforms.batch_transforms.SoftmaxLabelSmoothing": [[16, 3, 1, "", "forward"]], "horizonms.transforms.batch_transforms.ToOnehotLabels": [[16, 3, 1, "", "forward"]], "horizonms.transforms.image": [[16, 2, 1, "", "AutoContrast"], [16, 2, 1, "", "Brightness"], [16, 2, 1, "", "Contrast"], [16, 2, 1, "", "Equalize"], [16, 2, 1, "", "GaussianBlur"], [16, 2, 1, "", "GaussianNoise"], [16, 2, 1, "", "Hue"], [16, 2, 1, "", "Identity"], [16, 2, 1, "", "ImageBase"], [16, 2, 1, "", "Invert"], [16, 2, 1, "", "Lighting"], [16, 2, 1, "", "Normalizer"], [16, 2, 1, "", "Posterize"], [16, 2, 1, "", "RandomAutoContrast"], [16, 2, 1, "", "RandomBrightness"], [16, 2, 1, "", "RandomContrast"], [16, 2, 1, "", "RandomEqualize"], [16, 2, 1, "", "RandomGaussianBlur"], [16, 2, 1, "", "RandomGaussianNoise"], [16, 2, 1, "", "RandomHue"], [16, 2, 1, "", "RandomInvert"], [16, 2, 1, "", "RandomLighting"], [16, 2, 1, "", "RandomPosterize"], [16, 2, 1, "", "RandomSaturation"], [16, 2, 1, "", "RandomSharpness"], [16, 2, 1, "", "RandomSolarize"], [16, 2, 1, "", "Saturation"], [16, 2, 1, "", "Sharpness"], [16, 2, 1, "", "Solarize"], [16, 2, 1, "", "Uint8ToFloat"]], "horizonms.transforms.image.AutoContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Brightness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Contrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Equalize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.GaussianBlur": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.GaussianNoise": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Hue": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Identity": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.ImageBase": [[16, 3, 1, "", "calculate"], [16, 3, 1, "", "forward"]], "horizonms.transforms.image.Invert": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Lighting": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Normalizer": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Posterize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomAutoContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomBrightness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomEqualize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomGaussianBlur": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomGaussianNoise": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomHue": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomInvert": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomLighting": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomPosterize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomSaturation": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomSharpness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.RandomSolarize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Saturation": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Sharpness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Solarize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image.Uint8ToFloat": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv": [[16, 2, 1, "", "CVAutoContrast"], [16, 2, 1, "", "CVBrightness"], [16, 2, 1, "", "CVContrast"], [16, 2, 1, "", "CVCvtColor"], [16, 2, 1, "", "CVEqualize"], [16, 2, 1, "", "CVGaussianBlur"], [16, 2, 1, "", "CVGaussianNoise"], [16, 2, 1, "", "CVHue"], [16, 2, 1, "", "CVIdentity"], [16, 2, 1, "", "CVImageBase"], [16, 2, 1, "", "CVInvert"], [16, 2, 1, "", "CVLighting"], [16, 2, 1, "", "CVNormalizer"], [16, 2, 1, "", "CVPosterize"], [16, 2, 1, "", "CVRandomAutoContrast"], [16, 2, 1, "", "CVRandomBlur"], [16, 2, 1, "", "CVRandomBrightness"], [16, 2, 1, "", "CVRandomContrast"], [16, 2, 1, "", "CVRandomEqualize"], [16, 2, 1, "", "CVRandomGaussianBlur"], [16, 2, 1, "", "CVRandomGaussianNoise"], [16, 2, 1, "", "CVRandomHue"], [16, 2, 1, "", "CVRandomInvert"], [16, 2, 1, "", "CVRandomLighting"], [16, 2, 1, "", "CVRandomPosterize"], [16, 2, 1, "", "CVRandomSaturation"], [16, 2, 1, "", "CVRandomSharpness"], [16, 2, 1, "", "CVRandomSolarize"], [16, 2, 1, "", "CVSaturation"], [16, 2, 1, "", "CVSharpness"], [16, 2, 1, "", "CVSolarize"], [16, 2, 1, "", "CVUint8ToFloat"]], "horizonms.transforms.image_cv.CVAutoContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVBrightness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVCvtColor": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVEqualize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVGaussianBlur": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVGaussianNoise": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVHue": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVIdentity": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVImageBase": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVInvert": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVLighting": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVNormalizer": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVPosterize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomAutoContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomBlur": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomBrightness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomContrast": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomEqualize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomGaussianBlur": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomGaussianNoise": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomHue": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomInvert": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomLighting": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomPosterize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomSaturation": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomSharpness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVRandomSolarize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVSaturation": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVSharpness": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVSolarize": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.image_cv.CVUint8ToFloat": [[16, 3, 1, "", "calculate"]], "horizonms.transforms.spatial": [[16, 2, 1, "", "CropX"], [16, 2, 1, "", "CropY"], [16, 2, 1, "", "Fliplr"], [16, 2, 1, "", "Flipud"], [16, 2, 1, "", "ImageHeightPaddingOrCrop"], [16, 2, 1, "", "ImagePadding"], [16, 2, 1, "", "RandomCrop"], [16, 2, 1, "", "RandomCropX"], [16, 2, 1, "", "RandomCropY"], [16, 2, 1, "", "RandomFliplr"], [16, 2, 1, "", "RandomFlipud"], [16, 2, 1, "", "RandomResizedCrop"], [16, 2, 1, "", "RandomRotate"], [16, 2, 1, "", "RandomScale"], [16, 2, 1, "", "RandomShearX"], [16, 2, 1, "", "RandomShearY"], [16, 2, 1, "", "RandomTranslateX"], [16, 2, 1, "", "RandomTranslateY"], [16, 2, 1, "", "Resize"], [16, 2, 1, "", "ResizeWidth"], [16, 2, 1, "", "Rotate"], [16, 2, 1, "", "Scale"], [16, 2, 1, "", "ShearX"], [16, 2, 1, "", "ShearY"], [16, 2, 1, "", "SpatialBase"], [16, 2, 1, "", "TranslateX"], [16, 2, 1, "", "TranslateY"]], "horizonms.transforms.spatial.CropX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.CropY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.Fliplr": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.Flipud": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.ImageHeightPaddingOrCrop": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.ImagePadding": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomCrop": [[16, 3, 1, "", "crop_region"], [16, 3, 1, "", "forward"]], "horizonms.transforms.spatial.RandomCropX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomCropY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomFliplr": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomFlipud": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomResizedCrop": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"], [16, 3, 1, "", "get_params"]], "horizonms.transforms.spatial.RandomRotate": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomScale": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomShearX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomShearY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomTranslateX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.RandomTranslateY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.Resize": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.ResizeWidth": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"], [16, 3, 1, "", "torch_choice"]], "horizonms.transforms.spatial.Rotate": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.Scale": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.ShearX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.ShearY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.SpatialBase": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"], [16, 3, 1, "", "forward"]], "horizonms.transforms.spatial.TranslateX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial.TranslateY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv": [[16, 2, 1, "", "CVCropX"], [16, 2, 1, "", "CVCropY"], [16, 2, 1, "", "CVFliplr"], [16, 2, 1, "", "CVFlipud"], [16, 2, 1, "", "CVImagePadding"], [16, 2, 1, "", "CVRandomCrop"], [16, 2, 1, "", "CVRandomCropX"], [16, 2, 1, "", "CVRandomCropY"], [16, 2, 1, "", "CVRandomFliplr"], [16, 2, 1, "", "CVRandomFlipud"], [16, 2, 1, "", "CVRandomResizedCrop"], [16, 2, 1, "", "CVRandomRotate"], [16, 2, 1, "", "CVRandomScale"], [16, 2, 1, "", "CVRandomShearX"], [16, 2, 1, "", "CVRandomShearY"], [16, 2, 1, "", "CVRandomShift"], [16, 2, 1, "", "CVRandomTranslateX"], [16, 2, 1, "", "CVRandomTranslateY"], [16, 2, 1, "", "CVResize"], [16, 2, 1, "", "CVResizeWidth"], [16, 2, 1, "", "CVRotate"], [16, 2, 1, "", "CVScale"], [16, 2, 1, "", "CVShearX"], [16, 2, 1, "", "CVShearY"], [16, 2, 1, "", "CVTranslateX"], [16, 2, 1, "", "CVTranslateY"]], "horizonms.transforms.spatial_cv.CVCropX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVCropY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVFliplr": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVFlipud": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVImagePadding": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomCrop": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomCropX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomCropY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomFliplr": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomFlipud": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomResizedCrop": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"], [16, 3, 1, "", "get_params"]], "horizonms.transforms.spatial_cv.CVRandomRotate": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomScale": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomShearX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomShearY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomShift": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomTranslateX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRandomTranslateY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVResize": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVResizeWidth": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVRotate": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVScale": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVShearX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVShearY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVTranslateX": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.spatial_cv.CVTranslateY": [[16, 3, 1, "", "calculate_image"], [16, 3, 1, "", "calculate_target"]], "horizonms.transforms.utils": [[16, 1, 1, "", "cv_image_shift"], [16, 1, 1, "", "get_image_size"], [16, 1, 1, "", "setup_size"]], "horizonms.utils": [[17, 0, 0, "-", "config"], [17, 0, 0, "-", "misc"], [17, 0, 0, "-", "pd_utils"], [17, 0, 0, "-", "registry"], [17, 0, 0, "-", "summary"], [17, 0, 0, "-", "training_utils"]], "horizonms.utils.config": [[17, 1, 1, "", "config_updates"], [17, 1, 1, "", "read_config_file"], [17, 1, 1, "", "save_config_file"]], "horizonms.utils.misc": [[17, 1, 1, "", "deprecated_api_warning"], [17, 1, 1, "", "is_seq_of"]], "horizonms.utils.pd_utils": [[17, 1, 1, "", "append_df_to_excel"]], "horizonms.utils.registry": [[17, 2, 1, "", "Registry"], [17, 1, 1, "", "build_from_cfg"]], "horizonms.utils.registry.Registry": [[17, 3, 1, "", "build"], [17, 4, 1, "", "children"], [17, 3, 1, "", "deprecated_register_module"], [17, 3, 1, "", "get"], [17, 3, 1, "", "infer_scope"], [17, 4, 1, "", "module_dict"], [17, 4, 1, "", "name"], [17, 3, 1, "", "register_module"], [17, 4, 1, "", "scope"], [17, 3, 1, "", "split_scope_key"]], "horizonms.utils.summary": [[17, 1, 1, "", "summary"]], "horizonms.utils.training_utils": [[17, 1, 1, "", "save_checkpoints_update"], [17, 1, 1, "", "summary_update"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"horizonm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "packag": [], "subpackag": [], "submodul": [], "builder": 0, "modul": [], "testing_util": 0, "training_util": [0, 17], "content": [], "config": [1, 17], "dataset": 2, "atla": 2, "base": [2, 3, 4, 5, 7, 16], "eyepac": 2, "imagenet": 2, "promis": 2, "util": [2, 3, 12, 16, 17], "voc": 2, "engin": 3, "early_stop": 3, "ema": 3, "lr_finder": 3, "optim": 3, "trainer": 3, "loss": 4, "bbox_sigmoid_func": 4, "bbox_sigmoid_loss": 4, "functional_tensor": 4, "losses_func": 4, "parallel_transform": 4, "polar_transform": 4, "regression_loss": 4, "sigmoid_loss": 4, "sigmoid_softmax_loss": 4, "softmax_loss": 4, "metric": 5, "sigmoid_metr": 5, "sigmoid_metrics_func": 5, "sigmoid_softmax_func": 5, "sigmoid_softmax_metr": 5, "softmax_metr": 5, "softmax_metrics_func": 5, "model": [6, 7, 8, 9, 10, 11, 12, 13, 14], "batch_imag": 6, "model_bas": 6, "backbon": 7, "backbone_detect": 7, "backbone_fpn": 7, "backbone_unet": 7, "backbone_vgg_cfg": 7, "classif": 8, "classification_bas": 8, "detect": 9, "anchors_retinanet": 9, "anchors_yolo": 9, "box": 9, "detection_bas": 9, "retinanet": 9, "yolonet": 9, "yolov1": 9, "yolov1_util": 9, "head": 10, "classification_head": 10, "neck": 11, "classification_neck": 11, "feature_pyramid_network": 11, "net": 12, "densenet": 12, "efficientnet": 12, "inception_resnet": 12, "mobilenetv2": 12, "nfnet": 12, "resenetr": 12, "resnet": 12, "shufflenetv2": 12, "vgg": 12, "vgg_like": 12, "vgg_se": 12, "op": 13, "bn": 13, "misc": [13, 17], "stochastic_depth": 13, "segment": 14, "decod": 14, "enet": 14, "residualunet": 14, "segmentation_bas": 14, "segmentation_bbox": 14, "simpleunet": 14, "unet": 14, "sampler": 15, "distribut": 15, "patient_sampl": 15, "transform": 16, "augment": 16, "batch_transform": 16, "imag": 16, "image_cv": 16, "spatial": 16, "spatial_cv": 16, "pd_util": 17, "registri": 17, "summari": 17, "welcom": 18, "": 18, "document": 18, "indic": 18, "tabl": 18, "python": 18, "api": 18}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"horizonms.configs": [[1, "horizonms-configs"]], "horizonms.configs.config": [[1, "module-horizonms.configs.config"]], "horizonms.losses": [[4, "horizonms-losses"]], "horizonms.losses.base": [[4, "module-horizonms.losses.base"]], "horizonms.losses.bbox_sigmoid_func": [[4, "module-horizonms.losses.bbox_sigmoid_func"]], "horizonms.losses.bbox_sigmoid_losses": [[4, "module-horizonms.losses.bbox_sigmoid_losses"]], "horizonms.losses.functional_tensor": [[4, "module-horizonms.losses.functional_tensor"]], "horizonms.losses.losses": [[4, "module-horizonms.losses.losses"]], "horizonms.losses.losses_func": [[4, "module-horizonms.losses.losses_func"]], "horizonms.losses.parallel_transform": [[4, "module-horizonms.losses.parallel_transform"]], "horizonms.losses.polar_transform": [[4, "module-horizonms.losses.polar_transform"]], "horizonms.losses.regression_losses": [[4, "module-horizonms.losses.regression_losses"]], "horizonms.losses.sigmoid_losses": [[4, "module-horizonms.losses.sigmoid_losses"]], "horizonms.losses.sigmoid_softmax_losses": [[4, "module-horizonms.losses.sigmoid_softmax_losses"]], "horizonms.losses.softmax_losses": [[4, "module-horizonms.losses.softmax_losses"]], "horizonms.metrics": [[5, "horizonms-metrics"]], "horizonms.metrics.base": [[5, "module-horizonms.metrics.base"]], "horizonms.metrics.sigmoid_metrics": [[5, "module-horizonms.metrics.sigmoid_metrics"]], "horizonms.metrics.sigmoid_metrics_func": [[5, "module-horizonms.metrics.sigmoid_metrics_func"]], "horizonms.metrics.sigmoid_softmax_func": [[5, "module-horizonms.metrics.sigmoid_softmax_func"]], "horizonms.metrics.sigmoid_softmax_metrics": [[5, "module-horizonms.metrics.sigmoid_softmax_metrics"]], "horizonms.metrics.softmax_metrics": [[5, "module-horizonms.metrics.softmax_metrics"]], "horizonms.metrics.softmax_metrics_func": [[5, "module-horizonms.metrics.softmax_metrics_func"]], "horizonms.models": [[6, "horizonms-models"]], "horizonms.models.batch_image": [[6, "module-horizonms.models.batch_image"]], "horizonms.models.model_base": [[6, "module-horizonms.models.model_base"]], "horizonms.models.backbones": [[7, "horizonms-models-backbones"]], "horizonms.models.backbones.backbone": [[7, "module-horizonms.models.backbones.backbone"]], "horizonms.models.backbones.backbone_detection": [[7, "module-horizonms.models.backbones.backbone_detection"]], "horizonms.models.backbones.backbone_fpn": [[7, "module-horizonms.models.backbones.backbone_fpn"]], "horizonms.models.backbones.backbone_unet": [[7, "module-horizonms.models.backbones.backbone_unet"]], "horizonms.models.backbones.backbone_vgg_cfg": [[7, "module-horizonms.models.backbones.backbone_vgg_cfg"]], "horizonms.models.backbones.base": [[7, "module-horizonms.models.backbones.base"]], "horizonms.models.classification": [[8, "horizonms-models-classification"]], "horizonms.models.classification.classification": [[8, "module-horizonms.models.classification.classification"]], "horizonms.models.classification.classification_base": [[8, "module-horizonms.models.classification.classification_base"]], "horizonms.models.detection": [[9, "horizonms-models-detection"]], "horizonms.models.detection.anchors_retinanet": [[9, "module-horizonms.models.detection.anchors_retinanet"]], "horizonms.models.detection.anchors_yolo": [[9, "module-horizonms.models.detection.anchors_yolo"]], "horizonms.models.detection.boxes": [[9, "module-horizonms.models.detection.boxes"]], "horizonms.models.detection.detection": [[9, "module-horizonms.models.detection.detection"]], "horizonms.models.detection.detection_base": [[9, "module-horizonms.models.detection.detection_base"]], "horizonms.models.detection.retinanet": [[9, "module-horizonms.models.detection.retinanet"]], "horizonms.models.detection.yolonet": [[9, "module-horizonms.models.detection.yolonet"]], "horizonms.models.detection.yolov1": [[9, "module-horizonms.models.detection.yolov1"]], "horizonms.models.detection.yolov1_utils": [[9, "module-horizonms.models.detection.yolov1_utils"]], "horizonms.models.heads": [[10, "horizonms-models-heads"]], "horizonms.models.heads.classification_heads": [[10, "module-horizonms.models.heads.classification_heads"]], "horizonms.models.necks": [[11, "horizonms-models-necks"]], "horizonms.models.necks.classification_necks": [[11, "module-horizonms.models.necks.classification_necks"]], "horizonms.models.necks.feature_pyramid_network": [[11, "module-horizonms.models.necks.feature_pyramid_network"]], "horizonms.models.nets": [[12, "horizonms-models-nets"]], "horizonms.models.nets.densenet": [[12, "module-horizonms.models.nets.densenet"]], "horizonms.models.nets.efficientnet": [[12, "module-horizonms.models.nets.efficientnet"]], "horizonms.models.nets.inception_resnet": [[12, "module-horizonms.models.nets.inception_resnet"]], "horizonms.models.nets.mobilenetv2": [[12, "module-horizonms.models.nets.mobilenetv2"]], "horizonms.models.nets.nfnet": [[12, "module-horizonms.models.nets.nfnet"]], "horizonms.models.nets.resenetrs": [[12, "module-horizonms.models.nets.resenetrs"]], "horizonms.models.nets.resnet": [[12, "module-horizonms.models.nets.resnet"]], "horizonms.models.nets.shufflenetv2": [[12, "module-horizonms.models.nets.shufflenetv2"]], "horizonms.models.nets.utils": [[12, "module-horizonms.models.nets.utils"]], "horizonms.models.nets.vgg": [[12, "module-horizonms.models.nets.vgg"]], "horizonms.models.nets.vgg_like": [[12, "module-horizonms.models.nets.vgg_like"]], "horizonms.models.nets.vgg_se": [[12, "module-horizonms.models.nets.vgg_se"]], "horizonms.models.ops": [[13, "horizonms-models-ops"]], "horizonms.models.ops.bn": [[13, "module-horizonms.models.ops.bn"]], "horizonms.models.ops.misc": [[13, "module-horizonms.models.ops.misc"]], "horizonms.models.ops.stochastic_depth": [[13, "module-horizonms.models.ops.stochastic_depth"]], "horizonms.models.segmentation": [[14, "horizonms-models-segmentation"]], "horizonms.models.segmentation.decoder": [[14, "module-horizonms.models.segmentation.decoder"]], "horizonms.models.segmentation.enet": [[14, "module-horizonms.models.segmentation.enet"]], "horizonms.models.segmentation.residualunet": [[14, "module-horizonms.models.segmentation.residualunet"]], "horizonms.models.segmentation.segmentation": [[14, "module-horizonms.models.segmentation.segmentation"]], "horizonms.models.segmentation.segmentation_base": [[14, "module-horizonms.models.segmentation.segmentation_base"]], "horizonms.models.segmentation.segmentation_bbox": [[14, "module-horizonms.models.segmentation.segmentation_bbox"]], "horizonms.models.segmentation.simpleunet": [[14, "module-horizonms.models.segmentation.simpleunet"]], "horizonms.models.segmentation.unet": [[14, "module-horizonms.models.segmentation.unet"]], "horizonms.samplers": [[15, "horizonms-samplers"]], "horizonms.samplers.distributed": [[15, "module-horizonms.samplers.distributed"]], "horizonms.samplers.patient_sampler": [[15, "module-horizonms.samplers.patient_sampler"]], "horizonms.samplers.sampler": [[15, "module-horizonms.samplers.sampler"]], "horizonms.utils": [[17, "horizonms-utils"]], "horizonms.utils.config": [[17, "module-horizonms.utils.config"]], "horizonms.utils.misc": [[17, "module-horizonms.utils.misc"]], "horizonms.utils.pd_utils": [[17, "module-horizonms.utils.pd_utils"]], "horizonms.utils.registry": [[17, "module-horizonms.utils.registry"]], "horizonms.utils.summary": [[17, "module-horizonms.utils.summary"]], "horizonms.utils.training_utils": [[17, "module-horizonms.utils.training_utils"]], "Welcome to HorizonMS\u2019s documentation!": [[18, "welcome-to-horizonms-s-documentation"]], "Python API:": [[18, null]], "Indices and tables": [[18, "indices-and-tables"]], "horizonms.transforms": [[16, "horizonms-transforms"]], "horizonms.transforms.augment": [[16, "module-horizonms.transforms.augment"]], "horizonms.transforms.base": [[16, "module-horizonms.transforms.base"]], "horizonms.transforms.batch_transforms": [[16, "module-horizonms.transforms.batch_transforms"]], "horizonms.transforms.image": [[16, "module-horizonms.transforms.image"]], "horizonms.transforms.image_cv": [[16, "module-horizonms.transforms.image_cv"]], "horizonms.transforms.spatial": [[16, "module-horizonms.transforms.spatial"]], "horizonms.transforms.spatial_cv": [[16, "module-horizonms.transforms.spatial_cv"]], "horizonms.transforms.utils": [[16, "module-horizonms.transforms.utils"]], "horizonms.datasets": [[2, "horizonms-datasets"]], "horizonms.datasets.atlas": [[2, "module-horizonms.datasets.atlas"]], "horizonms.datasets.base": [[2, "module-horizonms.datasets.base"]], "horizonms.datasets.eyepacs": [[2, "module-horizonms.datasets.eyepacs"]], "horizonms.datasets.imagenet": [[2, "module-horizonms.datasets.imagenet"]], "horizonms.datasets.promise": [[2, "module-horizonms.datasets.promise"]], "horizonms.datasets.utils": [[2, "module-horizonms.datasets.utils"]], "horizonms.datasets.voc": [[2, "module-horizonms.datasets.voc"]], "horizonms": [[0, "horizonms"]], "horizonms.builder": [[0, "module-horizonms.builder"]], "horizonms.testing_utils": [[0, "module-horizonms.testing_utils"]], "horizonms.training_utils": [[0, "horizonms-training-utils"]], "horizonms.engine": [[3, "horizonms-engine"]], "horizonms.engine.base": [[3, "module-horizonms.engine.base"]], "horizonms.engine.early_stop": [[3, "module-horizonms.engine.early_stop"]], "horizonms.engine.ema": [[3, "module-horizonms.engine.ema"]], "horizonms.engine.lr_finder": [[3, "module-horizonms.engine.lr_finder"]], "horizonms.engine.optimizer": [[3, "horizonms-engine-optimizer"]], "horizonms.engine.trainer": [[3, "module-horizonms.engine.trainer"]], "horizonms.engine.utils": [[3, "module-horizonms.engine.utils"]]}, "indexentries": {"build_backbone() (in module horizonms.builder)": [[0, "horizonms.builder.build_backbone"]], "build_head() (in module horizonms.builder)": [[0, "horizonms.builder.build_head"]], "build_loss() (in module horizonms.builder)": [[0, "horizonms.builder.build_loss"]], "build_metric() (in module horizonms.builder)": [[0, "horizonms.builder.build_metric"]], "build_neck() (in module horizonms.builder)": [[0, "horizonms.builder.build_neck"]], "build_net() (in module horizonms.builder)": [[0, "horizonms.builder.build_net"]], "build_transforms() (in module horizonms.builder)": [[0, "horizonms.builder.build_transforms"]], "create_testing_dataloader() (in module horizonms.testing_utils)": [[0, "horizonms.testing_utils.create_testing_dataloader"]], "horizonms.builder": [[0, "module-horizonms.builder"]], "horizonms.testing_utils": [[0, "module-horizonms.testing_utils"]], "module": [[0, "module-horizonms.builder"], [0, "module-horizonms.testing_utils"], [1, "module-horizonms.configs.config"], [2, "module-horizonms.datasets.atlas"], [2, "module-horizonms.datasets.base"], [2, "module-horizonms.datasets.eyepacs"], [2, "module-horizonms.datasets.imagenet"], [2, "module-horizonms.datasets.promise"], [2, "module-horizonms.datasets.utils"], [2, "module-horizonms.datasets.voc"], [3, "module-horizonms.engine.base"], [3, "module-horizonms.engine.early_stop"], [3, "module-horizonms.engine.ema"], [3, "module-horizonms.engine.lr_finder"], [3, "module-horizonms.engine.trainer"], [3, "module-horizonms.engine.utils"], [4, "module-horizonms.losses.base"], [4, "module-horizonms.losses.bbox_sigmoid_func"], [4, "module-horizonms.losses.bbox_sigmoid_losses"], [4, "module-horizonms.losses.functional_tensor"], [4, "module-horizonms.losses.losses"], [4, "module-horizonms.losses.losses_func"], [4, "module-horizonms.losses.parallel_transform"], [4, "module-horizonms.losses.polar_transform"], [4, "module-horizonms.losses.regression_losses"], [4, "module-horizonms.losses.sigmoid_losses"], [4, "module-horizonms.losses.sigmoid_softmax_losses"], [4, "module-horizonms.losses.softmax_losses"], [5, "module-horizonms.metrics.base"], [5, "module-horizonms.metrics.sigmoid_metrics"], [5, "module-horizonms.metrics.sigmoid_metrics_func"], [5, "module-horizonms.metrics.sigmoid_softmax_func"], [5, "module-horizonms.metrics.sigmoid_softmax_metrics"], [5, "module-horizonms.metrics.softmax_metrics"], [5, "module-horizonms.metrics.softmax_metrics_func"], [6, "module-horizonms.models.batch_image"], [6, "module-horizonms.models.model_base"], [7, "module-horizonms.models.backbones.backbone"], [7, "module-horizonms.models.backbones.backbone_detection"], [7, "module-horizonms.models.backbones.backbone_fpn"], [7, "module-horizonms.models.backbones.backbone_unet"], [7, "module-horizonms.models.backbones.backbone_vgg_cfg"], [7, "module-horizonms.models.backbones.base"], [8, "module-horizonms.models.classification.classification"], [8, "module-horizonms.models.classification.classification_base"], [9, "module-horizonms.models.detection.anchors_retinanet"], [9, "module-horizonms.models.detection.anchors_yolo"], [9, "module-horizonms.models.detection.boxes"], [9, "module-horizonms.models.detection.detection"], [9, "module-horizonms.models.detection.detection_base"], [9, "module-horizonms.models.detection.retinanet"], [9, "module-horizonms.models.detection.yolonet"], [9, "module-horizonms.models.detection.yolov1"], [9, "module-horizonms.models.detection.yolov1_utils"], [10, "module-horizonms.models.heads.classification_heads"], [11, "module-horizonms.models.necks.classification_necks"], [11, "module-horizonms.models.necks.feature_pyramid_network"], [12, "module-horizonms.models.nets.densenet"], [12, "module-horizonms.models.nets.efficientnet"], [12, "module-horizonms.models.nets.inception_resnet"], [12, "module-horizonms.models.nets.mobilenetv2"], [12, "module-horizonms.models.nets.nfnet"], [12, "module-horizonms.models.nets.resenetrs"], [12, "module-horizonms.models.nets.resnet"], [12, "module-horizonms.models.nets.shufflenetv2"], [12, "module-horizonms.models.nets.utils"], [12, "module-horizonms.models.nets.vgg"], [12, "module-horizonms.models.nets.vgg_like"], [12, "module-horizonms.models.nets.vgg_se"], [13, "module-horizonms.models.ops.bn"], [13, "module-horizonms.models.ops.misc"], [13, "module-horizonms.models.ops.stochastic_depth"], [14, "module-horizonms.models.segmentation.decoder"], [14, "module-horizonms.models.segmentation.enet"], [14, "module-horizonms.models.segmentation.residualunet"], [14, "module-horizonms.models.segmentation.segmentation"], [14, "module-horizonms.models.segmentation.segmentation_base"], [14, "module-horizonms.models.segmentation.segmentation_bbox"], [14, "module-horizonms.models.segmentation.simpleunet"], [14, "module-horizonms.models.segmentation.unet"], [15, "module-horizonms.samplers.distributed"], [15, "module-horizonms.samplers.patient_sampler"], [15, "module-horizonms.samplers.sampler"], [16, "module-horizonms.transforms.augment"], [16, "module-horizonms.transforms.base"], [16, "module-horizonms.transforms.batch_transforms"], [16, "module-horizonms.transforms.image"], [16, "module-horizonms.transforms.image_cv"], [16, "module-horizonms.transforms.spatial"], [16, "module-horizonms.transforms.spatial_cv"], [16, "module-horizonms.transforms.utils"], [17, "module-horizonms.utils.config"], [17, "module-horizonms.utils.misc"], [17, "module-horizonms.utils.pd_utils"], [17, "module-horizonms.utils.registry"], [17, "module-horizonms.utils.summary"], [17, "module-horizonms.utils.training_utils"]], "config_updates() (in module horizonms.configs.config)": [[1, "horizonms.configs.config.config_updates"]], "horizonms.configs.config": [[1, "module-horizonms.configs.config"]], "read_config_file() (in module horizonms.configs.config)": [[1, "horizonms.configs.config.read_config_file"]], "save_config_file() (in module horizonms.configs.config)": [[1, "horizonms.configs.config.save_config_file"]], "atlassegmentation (class in horizonms.datasets.atlas)": [[2, "horizonms.datasets.atlas.AtlasSegmentation"]], "basedataset (class in horizonms.datasets.base)": [[2, "horizonms.datasets.base.BaseDataset"]], "eyepacsclassification (class in horizonms.datasets.eyepacs)": [[2, "horizonms.datasets.eyepacs.EyePACSClassification"]], "eyepacsclassificationpng (class in horizonms.datasets.eyepacs)": [[2, "horizonms.datasets.eyepacs.EyePACSClassificationPng"]], "imagenetclassification (class in horizonms.datasets.imagenet)": [[2, "horizonms.datasets.imagenet.ImageNetClassification"]], "promisesegmentation (class in horizonms.datasets.promise)": [[2, "horizonms.datasets.promise.PromiseSegmentation"]], "vocbase (class in horizonms.datasets.voc)": [[2, "horizonms.datasets.voc.VOCBase"]], "vocdetection (class in horizonms.datasets.voc)": [[2, "horizonms.datasets.voc.VOCDetection"]], "vocsegmentation (class in horizonms.datasets.voc)": [[2, "horizonms.datasets.voc.VOCSegmentation"]], "build_dataset_info() (horizonms.datasets.imagenet.imagenetclassification method)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.build_dataset_info"]], "calculate_md5() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.calculate_md5"]], "check_integrity() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.check_integrity"]], "check_md5() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.check_md5"]], "class_to_idx (horizonms.datasets.imagenet.imagenetclassification attribute)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.class_to_idx"]], "classes (horizonms.datasets.imagenet.imagenetclassification attribute)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.classes"]], "data_folder (horizonms.datasets.imagenet.imagenetclassification property)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.data_folder"]], "download_and_extract_archive() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.download_and_extract_archive"]], "download_file_from_google_drive() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.download_file_from_google_drive"]], "download_url() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.download_url"]], "extract_archive() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.extract_archive"]], "eyepacs_preprocessing() (in module horizonms.datasets.eyepacs)": [[2, "horizonms.datasets.eyepacs.eyepacs_preprocessing"]], "format_target() (horizonms.datasets.base.basedataset method)": [[2, "horizonms.datasets.base.BaseDataset.format_target"]], "gen_bar_updater() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.gen_bar_updater"]], "get_bbox_target() (horizonms.datasets.voc.vocdetection method)": [[2, "horizonms.datasets.voc.VOCDetection.get_bbox_target"]], "get_images() (horizonms.datasets.atlas.atlassegmentation method)": [[2, "horizonms.datasets.atlas.AtlasSegmentation.get_images"]], "get_images() (horizonms.datasets.base.basedataset method)": [[2, "horizonms.datasets.base.BaseDataset.get_images"]], "get_images() (horizonms.datasets.eyepacs.eyepacsclassification method)": [[2, "horizonms.datasets.eyepacs.EyePACSClassification.get_images"]], "get_images() (horizonms.datasets.imagenet.imagenetclassification method)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.get_images"]], "get_images() (horizonms.datasets.promise.promisesegmentation method)": [[2, "horizonms.datasets.promise.PromiseSegmentation.get_images"]], "get_images() (horizonms.datasets.voc.vocbase method)": [[2, "horizonms.datasets.voc.VOCBase.get_images"]], "get_target_single_item() (horizonms.datasets.base.basedataset method)": [[2, "horizonms.datasets.base.BaseDataset.get_target_single_item"]], "getitem() (horizonms.datasets.atlas.atlassegmentation method)": [[2, "horizonms.datasets.atlas.AtlasSegmentation.getitem"]], "getitem() (horizonms.datasets.base.basedataset method)": [[2, "horizonms.datasets.base.BaseDataset.getitem"]], "getitem() (horizonms.datasets.eyepacs.eyepacsclassification method)": [[2, "horizonms.datasets.eyepacs.EyePACSClassification.getitem"]], "getitem() (horizonms.datasets.eyepacs.eyepacsclassificationpng method)": [[2, "horizonms.datasets.eyepacs.EyePACSClassificationPng.getitem"]], "getitem() (horizonms.datasets.imagenet.imagenetclassification method)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.getitem"]], "getitem() (horizonms.datasets.promise.promisesegmentation method)": [[2, "horizonms.datasets.promise.PromiseSegmentation.getitem"]], "getitem() (horizonms.datasets.voc.vocdetection method)": [[2, "horizonms.datasets.voc.VOCDetection.getitem"]], "getitem() (horizonms.datasets.voc.vocsegmentation method)": [[2, "horizonms.datasets.voc.VOCSegmentation.getitem"]], "horizonms.datasets.atlas": [[2, "module-horizonms.datasets.atlas"]], "horizonms.datasets.base": [[2, "module-horizonms.datasets.base"]], "horizonms.datasets.eyepacs": [[2, "module-horizonms.datasets.eyepacs"]], "horizonms.datasets.imagenet": [[2, "module-horizonms.datasets.imagenet"]], "horizonms.datasets.promise": [[2, "module-horizonms.datasets.promise"]], "horizonms.datasets.utils": [[2, "module-horizonms.datasets.utils"]], "horizonms.datasets.voc": [[2, "module-horizonms.datasets.voc"]], "iterable_to_str() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.iterable_to_str"]], "len (horizonms.datasets.base.basedataset property)": [[2, "horizonms.datasets.base.BaseDataset.len"]], "list_dir() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.list_dir"]], "list_files() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.list_files"]], "load_images() (horizonms.datasets.atlas.atlassegmentation method)": [[2, "horizonms.datasets.atlas.AtlasSegmentation.load_images"]], "load_images() (horizonms.datasets.promise.promisesegmentation method)": [[2, "horizonms.datasets.promise.PromiseSegmentation.load_images"]], "load_meta_file() (in module horizonms.datasets.imagenet)": [[2, "horizonms.datasets.imagenet.load_meta_file"]], "parse_archives() (horizonms.datasets.imagenet.imagenetclassification method)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.parse_archives"]], "parse_devkit_archive() (in module horizonms.datasets.imagenet)": [[2, "horizonms.datasets.imagenet.parse_devkit_archive"]], "parse_train_archive() (in module horizonms.datasets.imagenet)": [[2, "horizonms.datasets.imagenet.parse_train_archive"]], "parse_val_archive() (in module horizonms.datasets.imagenet)": [[2, "horizonms.datasets.imagenet.parse_val_archive"]], "parse_voc_xml() (horizonms.datasets.voc.vocdetection static method)": [[2, "horizonms.datasets.voc.VOCDetection.parse_voc_xml"]], "test_valid_split() (horizonms.datasets.eyepacs.eyepacsclassification method)": [[2, "horizonms.datasets.eyepacs.EyePACSClassification.test_valid_split"]], "verify_str_arg() (in module horizonms.datasets.utils)": [[2, "horizonms.datasets.utils.verify_str_arg"]], "wnid_to_idx (horizonms.datasets.imagenet.imagenetclassification attribute)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.wnid_to_idx"]], "wnids (horizonms.datasets.imagenet.imagenetclassification attribute)": [[2, "horizonms.datasets.imagenet.ImageNetClassification.wnids"]], "checkpointmetric (class in horizonms.engine.base)": [[3, "horizonms.engine.base.CheckpointMetric"]], "ema (class in horizonms.engine.ema)": [[3, "horizonms.engine.ema.EMA"]], "earlystopping (class in horizonms.engine.early_stop)": [[3, "horizonms.engine.early_stop.EarlyStopping"]], "exponentiallr (class in horizonms.engine.lr_finder)": [[3, "horizonms.engine.lr_finder.ExponentialLR"]], "lrfinder (class in horizonms.engine.lr_finder)": [[3, "horizonms.engine.lr_finder.LRFinder"]], "linearlr (class in horizonms.engine.lr_finder)": [[3, "horizonms.engine.lr_finder.LinearLR"]], "metriclogger (class in horizonms.engine.utils)": [[3, "horizonms.engine.utils.MetricLogger"]], "smoothedvalue (class in horizonms.engine.utils)": [[3, "horizonms.engine.utils.SmoothedValue"]], "statecacher (class in horizonms.engine.lr_finder)": [[3, "horizonms.engine.lr_finder.StateCacher"]], "trainer (class in horizonms.engine.trainer)": [[3, "horizonms.engine.trainer.Trainer"]], "add_meter() (horizonms.engine.utils.metriclogger method)": [[3, "horizonms.engine.utils.MetricLogger.add_meter"]], "all_gather() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.all_gather"]], "avg (horizonms.engine.utils.smoothedvalue property)": [[3, "horizonms.engine.utils.SmoothedValue.avg"]], "collate_fn() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.collate_fn"]], "copy() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.copy"]], "copy_back() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.copy_back"]], "evaluate_one_epoch() (horizonms.engine.trainer.trainer method)": [[3, "horizonms.engine.trainer.Trainer.evaluate_one_epoch"]], "get_lr() (horizonms.engine.lr_finder.exponentiallr method)": [[3, "horizonms.engine.lr_finder.ExponentialLR.get_lr"]], "get_lr() (horizonms.engine.lr_finder.linearlr method)": [[3, "horizonms.engine.lr_finder.LinearLR.get_lr"]], "get_rank() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.get_rank"]], "get_warmup_lr_scheduler() (horizonms.engine.trainer.trainer method)": [[3, "horizonms.engine.trainer.Trainer.get_warmup_lr_scheduler"]], "get_world_size() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.get_world_size"]], "global_avg (horizonms.engine.utils.smoothedvalue property)": [[3, "horizonms.engine.utils.SmoothedValue.global_avg"]], "horizonms.engine.base": [[3, "module-horizonms.engine.base"]], "horizonms.engine.early_stop": [[3, "module-horizonms.engine.early_stop"]], "horizonms.engine.ema": [[3, "module-horizonms.engine.ema"]], "horizonms.engine.lr_finder": [[3, "module-horizonms.engine.lr_finder"]], "horizonms.engine.trainer": [[3, "module-horizonms.engine.trainer"]], "horizonms.engine.utils": [[3, "module-horizonms.engine.utils"]], "init_distributed_mode() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.init_distributed_mode"]], "init_distributed_mode_wj() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.init_distributed_mode_wj"]], "is_dist_avail_and_initialized() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.is_dist_avail_and_initialized"]], "is_main_process() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.is_main_process"]], "load_state_dict() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.load_state_dict"]], "log_every() (horizonms.engine.utils.metriclogger method)": [[3, "horizonms.engine.utils.MetricLogger.log_every"]], "lr_finder() (horizonms.engine.trainer.trainer method)": [[3, "horizonms.engine.trainer.Trainer.lr_finder"]], "max (horizonms.engine.utils.smoothedvalue property)": [[3, "horizonms.engine.utils.SmoothedValue.max"]], "median (horizonms.engine.utils.smoothedvalue property)": [[3, "horizonms.engine.utils.SmoothedValue.median"]], "mkdir() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.mkdir"]], "plot() (horizonms.engine.lr_finder.lrfinder method)": [[3, "horizonms.engine.lr_finder.LRFinder.plot"]], "range_test() (horizonms.engine.lr_finder.lrfinder method)": [[3, "horizonms.engine.lr_finder.LRFinder.range_test"]], "reduce_dict() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.reduce_dict"]], "retrieve() (horizonms.engine.lr_finder.statecacher method)": [[3, "horizonms.engine.lr_finder.StateCacher.retrieve"]], "save_checkpoints_update() (in module horizonms.engine.base)": [[3, "horizonms.engine.base.save_checkpoints_update"]], "save_on_master() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.save_on_master"]], "set_lr_scheduler() (horizonms.engine.trainer.trainer method)": [[3, "horizonms.engine.trainer.Trainer.set_lr_scheduler"]], "setup_for_distributed() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.setup_for_distributed"]], "state_dict() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.state_dict"]], "step() (horizonms.engine.early_stop.earlystopping method)": [[3, "horizonms.engine.early_stop.EarlyStopping.step"]], "store() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.store"]], "store() (horizonms.engine.lr_finder.statecacher method)": [[3, "horizonms.engine.lr_finder.StateCacher.store"]], "synchronize_between_processes() (horizonms.engine.utils.metriclogger method)": [[3, "horizonms.engine.utils.MetricLogger.synchronize_between_processes"]], "synchronize_between_processes() (horizonms.engine.utils.smoothedvalue method)": [[3, "horizonms.engine.utils.SmoothedValue.synchronize_between_processes"]], "to() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.to"]], "train() (horizonms.engine.trainer.trainer method)": [[3, "horizonms.engine.trainer.Trainer.train"]], "train_one_epoch() (horizonms.engine.trainer.trainer method)": [[3, "horizonms.engine.trainer.Trainer.train_one_epoch"]], "update() (horizonms.engine.ema.ema method)": [[3, "horizonms.engine.ema.EMA.update"]], "update() (horizonms.engine.utils.metriclogger method)": [[3, "horizonms.engine.utils.MetricLogger.update"]], "update() (horizonms.engine.utils.smoothedvalue method)": [[3, "horizonms.engine.utils.SmoothedValue.update"]], "value (horizonms.engine.utils.smoothedvalue property)": [[3, "horizonms.engine.utils.SmoothedValue.value"]], "value_update() (horizonms.engine.base.checkpointmetric method)": [[3, "horizonms.engine.base.CheckpointMetric.value_update"]], "warmup_lr_scheduler() (in module horizonms.engine.utils)": [[3, "horizonms.engine.utils.warmup_lr_scheduler"]], "cdrsmoothl1loss (class in horizonms.losses.losses)": [[4, "horizonms.losses.losses.CDRSmoothL1Loss"]], "diceloss (class in horizonms.losses.sigmoid_softmax_losses)": [[4, "horizonms.losses.sigmoid_softmax_losses.DiceLoss"]], "milapproxunarybaselineposgeneralizednegsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILApproxUnaryBaselinePosGeneralizedNegSigmoidLoss"]], "milapproxunarybaselinesigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILApproxUnaryBaselineSigmoidLoss"]], "milapproxunarybboxposgeneralizednegsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILApproxUnaryBboxPosGeneralizedNegSigmoidLoss"]], "milapproxunaryparallelsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILApproxUnaryParallelSigmoidLoss"]], "milapproxunarypolarsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILApproxUnaryPolarSigmoidLoss"]], "milpairwiseloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILPairwiseLoss"]], "milunarybaselineposgeneralizednegsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILUnaryBaselinePosGeneralizedNegSigmoidLoss"]], "milunarybaselinesigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILUnaryBaselineSigmoidLoss"]], "milunarybboxposgeneralizednegsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILUnaryBboxPosGeneralizedNegSigmoidLoss"]], "milunaryparallelsigmoidloss (class in horizonms.losses.bbox_sigmoid_losses)": [[4, "horizonms.losses.bbox_sigmoid_losses.MILUnaryParallelSigmoidLoss"]], "pseudocrossentropyloss (class in horizonms.losses.losses)": [[4, "horizonms.losses.losses.PseudoCrossEntropyLoss"]], "pseudopositivecrossentropyloss (class in horizonms.losses.losses)": [[4, "horizonms.losses.losses.PseudoPositiveCrossEntropyLoss"]], "regressioniouloss (class in horizonms.losses.regression_losses)": [[4, "horizonms.losses.regression_losses.RegressionIouLoss"]], "sigmoidbaseloss (class in horizonms.losses.base)": [[4, "horizonms.losses.base.SigmoidBaseLoss"]], "sigmoidcrossentropyloss (class in horizonms.losses.sigmoid_losses)": [[4, "horizonms.losses.sigmoid_losses.SigmoidCrossEntropyLoss"]], "sigmoidfocalloss (class in horizonms.losses.sigmoid_losses)": [[4, "horizonms.losses.sigmoid_losses.SigmoidFocalLoss"]], "smoothl1loss (class in horizonms.losses.regression_losses)": [[4, "horizonms.losses.regression_losses.SmoothL1Loss"]], "softmaxbaseloss (class in horizonms.losses.base)": [[4, "horizonms.losses.base.SoftmaxBaseLoss"]], "softmaxcohenkappaloss (class in horizonms.losses.softmax_losses)": [[4, "horizonms.losses.softmax_losses.SoftmaxCohenKappaLoss"]], "softmaxcrossentropyloss (class in horizonms.losses.softmax_losses)": [[4, "horizonms.losses.softmax_losses.SoftmaxCrossEntropyLoss"]], "softmaxfocalloss (class in horizonms.losses.softmax_losses)": [[4, "horizonms.losses.softmax_losses.SoftmaxFocalLoss"]], "softmaxmixfocalloss (class in horizonms.losses.softmax_losses)": [[4, "horizonms.losses.softmax_losses.SoftmaxMixFocalLoss"]], "weakcrossentropyloss (class in horizonms.losses.losses)": [[4, "horizonms.losses.losses.WeakCrossEntropyLoss"]], "adjust_brightness() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.adjust_brightness"]], "adjust_contrast() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.adjust_contrast"]], "adjust_gamma() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.adjust_gamma"]], "adjust_hue() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.adjust_hue"]], "adjust_saturation() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.adjust_saturation"]], "affine() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.affine"]], "bbox_overlaps() (in module horizonms.losses.losses_func)": [[4, "horizonms.losses.losses_func.bbox_overlaps"]], "calculate_loss() (horizonms.losses.base.sigmoidbaseloss method)": [[4, "horizonms.losses.base.SigmoidBaseLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.base.softmaxbaseloss method)": [[4, "horizonms.losses.base.SoftmaxBaseLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.sigmoid_losses.sigmoidcrossentropyloss method)": [[4, "horizonms.losses.sigmoid_losses.SigmoidCrossEntropyLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.sigmoid_losses.sigmoidfocalloss method)": [[4, "horizonms.losses.sigmoid_losses.SigmoidFocalLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.softmax_losses.softmaxcohenkappaloss method)": [[4, "horizonms.losses.softmax_losses.SoftmaxCohenKappaLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.softmax_losses.softmaxcrossentropyloss method)": [[4, "horizonms.losses.softmax_losses.SoftmaxCrossEntropyLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.softmax_losses.softmaxfocalloss method)": [[4, "horizonms.losses.softmax_losses.SoftmaxFocalLoss.calculate_loss"]], "calculate_loss() (horizonms.losses.softmax_losses.softmaxmixfocalloss method)": [[4, "horizonms.losses.softmax_losses.SoftmaxMixFocalLoss.calculate_loss"]], "center_crop() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.center_crop"]], "convert_image_dtype() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.convert_image_dtype"]], "crop() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.crop"]], "detect_existing_values() (horizonms.losses.base.sigmoidbaseloss method)": [[4, "horizonms.losses.base.SigmoidBaseLoss.detect_existing_values"]], "five_crop() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.five_crop"]], "gaussian_blur() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.gaussian_blur"]], "hflip() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.hflip"]], "horizonms.losses.base": [[4, "module-horizonms.losses.base"]], "horizonms.losses.bbox_sigmoid_func": [[4, "module-horizonms.losses.bbox_sigmoid_func"]], "horizonms.losses.bbox_sigmoid_losses": [[4, "module-horizonms.losses.bbox_sigmoid_losses"]], "horizonms.losses.functional_tensor": [[4, "module-horizonms.losses.functional_tensor"]], "horizonms.losses.losses": [[4, "module-horizonms.losses.losses"]], "horizonms.losses.losses_func": [[4, "module-horizonms.losses.losses_func"]], "horizonms.losses.parallel_transform": [[4, "module-horizonms.losses.parallel_transform"]], "horizonms.losses.polar_transform": [[4, "module-horizonms.losses.polar_transform"]], "horizonms.losses.regression_losses": [[4, "module-horizonms.losses.regression_losses"]], "horizonms.losses.sigmoid_losses": [[4, "module-horizonms.losses.sigmoid_losses"]], "horizonms.losses.sigmoid_softmax_losses": [[4, "module-horizonms.losses.sigmoid_softmax_losses"]], "horizonms.losses.softmax_losses": [[4, "module-horizonms.losses.softmax_losses"]], "mil_approx_polar_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_approx_polar_sigmoid_loss"]], "mil_approx_unary_baseline_pos_generalized_neg_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_approx_unary_baseline_pos_generalized_neg_sigmoid_loss"]], "mil_approx_unary_baseline_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_approx_unary_baseline_sigmoid_loss"]], "mil_approx_unary_bbox_pos_generalized_neg_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_approx_unary_bbox_pos_generalized_neg_sigmoid_loss"]], "mil_approx_unary_parallel_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_approx_unary_parallel_sigmoid_loss"]], "mil_pairwise_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_pairwise_loss"]], "mil_unary_baseline_pos_generalized_neg_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_unary_baseline_pos_generalized_neg_sigmoid_loss"]], "mil_unary_baseline_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_unary_baseline_sigmoid_loss"]], "mil_unary_bbox_pos_generalized_neg_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_unary_bbox_pos_generalized_neg_sigmoid_loss"]], "mil_unary_parallel_sigmoid_loss() (in module horizonms.losses.bbox_sigmoid_func)": [[4, "horizonms.losses.bbox_sigmoid_func.mil_unary_parallel_sigmoid_loss"]], "pad() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.pad"]], "parallel_transform() (in module horizonms.losses.parallel_transform)": [[4, "horizonms.losses.parallel_transform.parallel_transform"]], "perspective() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.perspective"]], "polar_transform() (in module horizonms.losses.polar_transform)": [[4, "horizonms.losses.polar_transform.polar_transform"]], "preprocess() (horizonms.losses.base.sigmoidbaseloss method)": [[4, "horizonms.losses.base.SigmoidBaseLoss.preprocess"]], "preprocess() (horizonms.losses.base.softmaxbaseloss method)": [[4, "horizonms.losses.base.SoftmaxBaseLoss.preprocess"]], "remove_missing_values() (horizonms.losses.base.softmaxbaseloss method)": [[4, "horizonms.losses.base.SoftmaxBaseLoss.remove_missing_values"]], "resize() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.resize"]], "rgb_to_grayscale() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.rgb_to_grayscale"]], "rotate() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.rotate"]], "rotate() (in module horizonms.losses.parallel_transform)": [[4, "horizonms.losses.parallel_transform.rotate"]], "size_constraint_loss() (in module horizonms.losses.losses_func)": [[4, "horizonms.losses.losses_func.size_constraint_loss"]], "smooth_l1_loss() (in module horizonms.losses.losses_func)": [[4, "horizonms.losses.losses_func.smooth_l1_loss"]], "ten_crop() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.ten_crop"]], "vflip() (in module horizonms.losses.functional_tensor)": [[4, "horizonms.losses.functional_tensor.vflip"]], "weak_bce_sigmoid_loss() (in module horizonms.losses.losses_func)": [[4, "horizonms.losses.losses_func.weak_bce_sigmoid_loss"]], "weak_cross_entropy() (in module horizonms.losses.losses_func)": [[4, "horizonms.losses.losses_func.weak_cross_entropy"]], "dicecoefficient (class in horizonms.metrics.sigmoid_softmax_metrics)": [[5, "horizonms.metrics.sigmoid_softmax_metrics.DiceCoefficient"]], "iouscore (class in horizonms.metrics.sigmoid_softmax_metrics)": [[5, "horizonms.metrics.sigmoid_softmax_metrics.IouScore"]], "sigmoidaccuracy (class in horizonms.metrics.sigmoid_metrics)": [[5, "horizonms.metrics.sigmoid_metrics.SigmoidAccuracy"]], "softmaxaccuracy (class in horizonms.metrics.softmax_metrics)": [[5, "horizonms.metrics.softmax_metrics.SoftmaxAccuracy"]], "softmaxaccuracytopk (class in horizonms.metrics.softmax_metrics)": [[5, "horizonms.metrics.softmax_metrics.SoftmaxAccuracyTopk"]], "softmaxcohenkappascore (class in horizonms.metrics.softmax_metrics)": [[5, "horizonms.metrics.softmax_metrics.SoftmaxCohenKappaScore"]], "dice_coefficient() (in module horizonms.metrics.sigmoid_softmax_func)": [[5, "horizonms.metrics.sigmoid_softmax_func.dice_coefficient"]], "horizonms.metrics.base": [[5, "module-horizonms.metrics.base"]], "horizonms.metrics.sigmoid_metrics": [[5, "module-horizonms.metrics.sigmoid_metrics"]], "horizonms.metrics.sigmoid_metrics_func": [[5, "module-horizonms.metrics.sigmoid_metrics_func"]], "horizonms.metrics.sigmoid_softmax_func": [[5, "module-horizonms.metrics.sigmoid_softmax_func"]], "horizonms.metrics.sigmoid_softmax_metrics": [[5, "module-horizonms.metrics.sigmoid_softmax_metrics"]], "horizonms.metrics.softmax_metrics": [[5, "module-horizonms.metrics.softmax_metrics"]], "horizonms.metrics.softmax_metrics_func": [[5, "module-horizonms.metrics.softmax_metrics_func"]], "iou_score() (in module horizonms.metrics.sigmoid_softmax_func)": [[5, "horizonms.metrics.sigmoid_softmax_func.iou_score"]], "sigmoid_accuracy() (in module horizonms.metrics.sigmoid_metrics_func)": [[5, "horizonms.metrics.sigmoid_metrics_func.sigmoid_accuracy"]], "softmax_accuracy() (in module horizonms.metrics.softmax_metrics_func)": [[5, "horizonms.metrics.softmax_metrics_func.softmax_accuracy"]], "softmax_accuracy_topk() (in module horizonms.metrics.softmax_metrics_func)": [[5, "horizonms.metrics.softmax_metrics_func.softmax_accuracy_topk"]], "softmax_cohen_kappa_score() (in module horizonms.metrics.softmax_metrics_func)": [[5, "horizonms.metrics.softmax_metrics_func.softmax_cohen_kappa_score"]], "basemodel (class in horizonms.models.model_base)": [[6, "horizonms.models.model_base.BaseModel"]], "batchimage (class in horizonms.models.batch_image)": [[6, "horizonms.models.batch_image.BatchImage"]], "batch_images() (horizonms.models.batch_image.batchimage method)": [[6, "horizonms.models.batch_image.BatchImage.batch_images"]], "calculate_losses() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.calculate_losses"]], "calculate_metrics() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.calculate_metrics"]], "forward() (horizonms.models.batch_image.batchimage method)": [[6, "horizonms.models.batch_image.BatchImage.forward"]], "forward() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.forward"]], "forward_train() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.forward_train"]], "horizonms.models.batch_image": [[6, "module-horizonms.models.batch_image"]], "horizonms.models.model_base": [[6, "module-horizonms.models.model_base"]], "load_model() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.load_model"]], "max_by_axis() (horizonms.models.batch_image.batchimage method)": [[6, "horizonms.models.batch_image.BatchImage.max_by_axis"]], "predict_one_batch() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.predict_one_batch"]], "test_one_batch() (horizonms.models.model_base.basemodel method)": [[6, "horizonms.models.model_base.BaseModel.test_one_batch"]], "backbone (class in horizonms.models.backbones.base)": [[7, "horizonms.models.backbones.base.Backbone"]], "backbonevggcfg (class in horizonms.models.backbones.backbone_vgg_cfg)": [[7, "horizonms.models.backbones.backbone_vgg_cfg.BackboneVGGCfg"]], "backbonewithfpn (class in horizonms.models.backbones.base)": [[7, "horizonms.models.backbones.base.BackboneWithFPN"]], "intermediatelayergetter (class in horizonms.models.backbones.base)": [[7, "horizonms.models.backbones.base.IntermediateLayerGetter"]], "vggcfg (class in horizonms.models.backbones.backbone_vgg_cfg)": [[7, "horizonms.models.backbones.backbone_vgg_cfg.VGGCfg"]], "densenet_unet_backbone() (in module horizonms.models.backbones.backbone_unet)": [[7, "horizonms.models.backbones.backbone_unet.densenet_unet_backbone"]], "efficientnet_backbone() (in module horizonms.models.backbones.backbone)": [[7, "horizonms.models.backbones.backbone.efficientnet_backbone"]], "forward() (horizonms.models.backbones.backbone_vgg_cfg.backbonevggcfg method)": [[7, "horizonms.models.backbones.backbone_vgg_cfg.BackboneVGGCfg.forward"]], "forward() (horizonms.models.backbones.backbone_vgg_cfg.vggcfg method)": [[7, "horizonms.models.backbones.backbone_vgg_cfg.VGGCfg.forward"]], "forward() (horizonms.models.backbones.base.backbone method)": [[7, "horizonms.models.backbones.base.Backbone.forward"]], "forward() (horizonms.models.backbones.base.backbonewithfpn method)": [[7, "horizonms.models.backbones.base.BackboneWithFPN.forward"]], "forward() (horizonms.models.backbones.base.intermediatelayergetter method)": [[7, "horizonms.models.backbones.base.IntermediateLayerGetter.forward"]], "horizonms.models.backbones.backbone": [[7, "module-horizonms.models.backbones.backbone"]], "horizonms.models.backbones.backbone_detection": [[7, "module-horizonms.models.backbones.backbone_detection"]], "horizonms.models.backbones.backbone_fpn": [[7, "module-horizonms.models.backbones.backbone_fpn"]], "horizonms.models.backbones.backbone_unet": [[7, "module-horizonms.models.backbones.backbone_unet"]], "horizonms.models.backbones.backbone_vgg_cfg": [[7, "module-horizonms.models.backbones.backbone_vgg_cfg"]], "horizonms.models.backbones.base": [[7, "module-horizonms.models.backbones.base"]], "mobilenetv2_unet_backbone() (in module horizonms.models.backbones.backbone_unet)": [[7, "horizonms.models.backbones.backbone_unet.mobilenetv2_unet_backbone"]], "out_channels (horizonms.models.backbones.base.backbone attribute)": [[7, "horizonms.models.backbones.base.Backbone.out_channels"]], "resnet_backbone() (in module horizonms.models.backbones.backbone)": [[7, "horizonms.models.backbones.backbone.resnet_backbone"]], "resnet_fpn_backbone() (in module horizonms.models.backbones.backbone_fpn)": [[7, "horizonms.models.backbones.backbone_fpn.resnet_fpn_backbone"]], "resnet_unet_backbone() (in module horizonms.models.backbones.backbone_unet)": [[7, "horizonms.models.backbones.backbone_unet.resnet_unet_backbone"]], "vgg_backbone() (in module horizonms.models.backbones.backbone)": [[7, "horizonms.models.backbones.backbone.vgg_backbone"]], "vgg_cfg_backbone_v1() (in module horizonms.models.backbones.backbone_vgg_cfg)": [[7, "horizonms.models.backbones.backbone_vgg_cfg.vgg_cfg_backbone_v1"]], "vgg_cfg_backbone_v2() (in module horizonms.models.backbones.backbone_vgg_cfg)": [[7, "horizonms.models.backbones.backbone_vgg_cfg.vgg_cfg_backbone_v2"]], "vgg_fpn_backbone() (in module horizonms.models.backbones.backbone_fpn)": [[7, "horizonms.models.backbones.backbone_fpn.vgg_fpn_backbone"]], "vgg_fpn_det_v1() (in module horizonms.models.backbones.backbone_detection)": [[7, "horizonms.models.backbones.backbone_detection.vgg_fpn_det_v1"]], "vgg_fpn_det_v2() (in module horizonms.models.backbones.backbone_detection)": [[7, "horizonms.models.backbones.backbone_detection.vgg_fpn_det_v2"]], "vgg_unet_backbone() (in module horizonms.models.backbones.backbone_unet)": [[7, "horizonms.models.backbones.backbone_unet.vgg_unet_backbone"]], "baseclassification (class in horizonms.models.classification.classification_base)": [[8, "horizonms.models.classification.classification_base.BaseClassification"]], "classification (class in horizonms.models.classification.classification)": [[8, "horizonms.models.classification.classification.Classification"]], "classificationnetfrommodules (class in horizonms.models.classification.classification_base)": [[8, "horizonms.models.classification.classification_base.ClassificationNetFromModules"]], "calculate_loss() (horizonms.models.classification.classification.classification method)": [[8, "horizonms.models.classification.classification.Classification.calculate_loss"]], "calculate_losses() (horizonms.models.classification.classification.classification method)": [[8, "horizonms.models.classification.classification.Classification.calculate_losses"]], "calculate_losses() (horizonms.models.classification.classification_base.baseclassification method)": [[8, "horizonms.models.classification.classification_base.BaseClassification.calculate_losses"]], "calculate_metric() (horizonms.models.classification.classification.classification method)": [[8, "horizonms.models.classification.classification.Classification.calculate_metric"]], "calculate_metrics() (horizonms.models.classification.classification.classification method)": [[8, "horizonms.models.classification.classification.Classification.calculate_metrics"]], "calculate_metrics() (horizonms.models.classification.classification_base.baseclassification method)": [[8, "horizonms.models.classification.classification_base.BaseClassification.calculate_metrics"]], "forward() (horizonms.models.classification.classification_base.classificationnetfrommodules method)": [[8, "horizonms.models.classification.classification_base.ClassificationNetFromModules.forward"]], "forward_train() (horizonms.models.classification.classification_base.baseclassification method)": [[8, "horizonms.models.classification.classification_base.BaseClassification.forward_train"]], "get_classification_net() (in module horizonms.models.classification.classification_base)": [[8, "horizonms.models.classification.classification_base.get_classification_net"]], "horizonms.models.classification.classification": [[8, "module-horizonms.models.classification.classification"]], "horizonms.models.classification.classification_base": [[8, "module-horizonms.models.classification.classification_base"]], "predict_one_batch() (horizonms.models.classification.classification_base.baseclassification method)": [[8, "horizonms.models.classification.classification_base.BaseClassification.predict_one_batch"]], "preprocessing_input() (horizonms.models.classification.classification_base.baseclassification method)": [[8, "horizonms.models.classification.classification_base.BaseClassification.preprocessing_input"]], "test_one_batch() (horizonms.models.classification.classification_base.baseclassification method)": [[8, "horizonms.models.classification.classification_base.BaseClassification.test_one_batch"]], "anchorgenerator (class in horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator"]], "bboxcoder (class in horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.BBoxCoder"]], "basedetection (class in horizonms.models.detection.detection_base)": [[9, "horizonms.models.detection.detection_base.BaseDetection"]], "bottlenetneck (class in horizonms.models.detection.yolov1_utils)": [[9, "horizonms.models.detection.yolov1_utils.BottlenetNeck"]], "boxcoderyolov1 (class in horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.BoxCoderYoloV1"]], "defaultdarknet (class in horizonms.models.detection.yolov1_utils)": [[9, "horizonms.models.detection.yolov1_utils.DefaultDarknet"]], "defaultyolov1head (class in horizonms.models.detection.yolov1_utils)": [[9, "horizonms.models.detection.yolov1_utils.DefaultYolov1Head"]], "detneckblock (class in horizonms.models.detection.yolov1_utils)": [[9, "horizonms.models.detection.yolov1_utils.DetNeckBlock"]], "detection (class in horizonms.models.detection.detection)": [[9, "horizonms.models.detection.detection.Detection"]], "retinanet (class in horizonms.models.detection.retinanet)": [[9, "horizonms.models.detection.retinanet.Retinanet"]], "retinanethead (class in horizonms.models.detection.retinanet)": [[9, "horizonms.models.detection.retinanet.RetinanetHead"]], "yolodetection (class in horizonms.models.detection.yolonet)": [[9, "horizonms.models.detection.yolonet.YOLODetection"]], "yolov1 (class in horizonms.models.detection.yolov1)": [[9, "horizonms.models.detection.yolov1.YOLOv1"]], "yolov1losses (class in horizonms.models.detection.yolov1)": [[9, "horizonms.models.detection.yolov1.YOLOv1Losses"]], "yolov1metrics (class in horizonms.models.detection.yolov1)": [[9, "horizonms.models.detection.yolov1.YOLOv1Metrics"]], "yolov1head (class in horizonms.models.detection.yolov1_utils)": [[9, "horizonms.models.detection.yolov1_utils.Yolov1Head"]], "anchor_targets_bbox() (in module horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.anchor_targets_bbox"]], "bbox_transform() (in module horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.bbox_transform"]], "bbox_transform_batch() (in module horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.bbox_transform_batch"]], "bbox_transform_inv_batch() (in module horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.bbox_transform_inv_batch"]], "box_area() (in module horizonms.models.detection.boxes)": [[9, "horizonms.models.detection.boxes.box_area"]], "box_iou() (in module horizonms.models.detection.boxes)": [[9, "horizonms.models.detection.boxes.box_iou"]], "cached_grid_anchors() (horizonms.models.detection.anchors_retinanet.anchorgenerator method)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.cached_grid_anchors"]], "calculate_loss() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.calculate_loss"]], "calculate_losses() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.calculate_losses"]], "calculate_losses() (horizonms.models.detection.detection_base.basedetection method)": [[9, "horizonms.models.detection.detection_base.BaseDetection.calculate_losses"]], "calculate_losses() (horizonms.models.detection.yolonet.yolodetection method)": [[9, "horizonms.models.detection.yolonet.YOLODetection.calculate_losses"]], "calculate_metric() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.calculate_metric"]], "calculate_metrics() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.calculate_metrics"]], "calculate_metrics() (horizonms.models.detection.detection_base.basedetection method)": [[9, "horizonms.models.detection.detection_base.BaseDetection.calculate_metrics"]], "calculate_metrics() (horizonms.models.detection.yolonet.yolodetection method)": [[9, "horizonms.models.detection.yolonet.YOLODetection.calculate_metrics"]], "cell_anchors (horizonms.models.detection.anchors_retinanet.anchorgenerator attribute)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.cell_anchors"]], "clip_boxes() (in module horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.clip_boxes"]], "compute_gt_annotations() (in module horizonms.models.detection.anchors_retinanet)": [[9, "horizonms.models.detection.anchors_retinanet.compute_gt_annotations"]], "create_grid() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.create_grid"]], "decode() (horizonms.models.detection.anchors_retinanet.bboxcoder method)": [[9, "horizonms.models.detection.anchors_retinanet.BBoxCoder.decode"]], "decode() (horizonms.models.detection.anchors_yolo.boxcoderyolov1 method)": [[9, "horizonms.models.detection.anchors_yolo.BoxCoderYoloV1.decode"]], "decode_box() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.decode_box"]], "decode_single() (horizonms.models.detection.anchors_yolo.boxcoderyolov1 method)": [[9, "horizonms.models.detection.anchors_yolo.BoxCoderYoloV1.decode_single"]], "encode() (horizonms.models.detection.anchors_retinanet.bboxcoder method)": [[9, "horizonms.models.detection.anchors_retinanet.BBoxCoder.encode"]], "encode_box() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.encode_box"]], "encode_single() (horizonms.models.detection.anchors_retinanet.bboxcoder method)": [[9, "horizonms.models.detection.anchors_retinanet.BBoxCoder.encode_single"]], "encode_single() (horizonms.models.detection.anchors_yolo.boxcoderyolov1 method)": [[9, "horizonms.models.detection.anchors_yolo.BoxCoderYoloV1.encode_single"]], "forward() (horizonms.models.detection.anchors_retinanet.anchorgenerator method)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.forward"]], "forward() (horizonms.models.detection.retinanet.retinanet method)": [[9, "horizonms.models.detection.retinanet.Retinanet.forward"]], "forward() (horizonms.models.detection.retinanet.retinanethead method)": [[9, "horizonms.models.detection.retinanet.RetinanetHead.forward"]], "forward() (horizonms.models.detection.yolov1.yolov1 method)": [[9, "horizonms.models.detection.yolov1.YOLOv1.forward"]], "forward() (horizonms.models.detection.yolov1_utils.bottlenetneck method)": [[9, "horizonms.models.detection.yolov1_utils.BottlenetNeck.forward"]], "forward() (horizonms.models.detection.yolov1_utils.defaultdarknet method)": [[9, "horizonms.models.detection.yolov1_utils.DefaultDarknet.forward"]], "forward() (horizonms.models.detection.yolov1_utils.defaultyolov1head method)": [[9, "horizonms.models.detection.yolov1_utils.DefaultYolov1Head.forward"]], "forward() (horizonms.models.detection.yolov1_utils.detneckblock method)": [[9, "horizonms.models.detection.yolov1_utils.DetNeckBlock.forward"]], "forward() (horizonms.models.detection.yolov1_utils.yolov1head method)": [[9, "horizonms.models.detection.yolov1_utils.Yolov1Head.forward"]], "forward_train() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.forward_train"]], "forward_train() (horizonms.models.detection.detection_base.basedetection method)": [[9, "horizonms.models.detection.detection_base.BaseDetection.forward_train"]], "forward_train() (horizonms.models.detection.yolonet.yolodetection method)": [[9, "horizonms.models.detection.yolonet.YOLODetection.forward_train"]], "generate_anchors() (horizonms.models.detection.anchors_retinanet.anchorgenerator method)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.generate_anchors"]], "generate_feature_shape() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.generate_feature_shape"]], "generate_stride() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.generate_stride"]], "generate_target_yolov1() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.generate_target_yolov1"]], "generate_target_yolov2() (in module horizonms.models.detection.anchors_yolo)": [[9, "horizonms.models.detection.anchors_yolo.generate_target_yolov2"]], "get_feature_shape() (horizonms.models.detection.yolov1.yolov1 method)": [[9, "horizonms.models.detection.yolov1.YOLOv1.get_feature_shape"]], "get_gts() (horizonms.models.detection.retinanet.retinanet method)": [[9, "horizonms.models.detection.retinanet.Retinanet.get_gts"]], "get_gts() (horizonms.models.detection.yolov1.yolov1 method)": [[9, "horizonms.models.detection.yolov1.YOLOv1.get_gts"]], "get_stride() (horizonms.models.detection.yolov1.yolov1 method)": [[9, "horizonms.models.detection.yolov1.YOLOv1.get_stride"]], "grid_anchors() (horizonms.models.detection.anchors_retinanet.anchorgenerator method)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.grid_anchors"]], "horizonms.models.detection.anchors_retinanet": [[9, "module-horizonms.models.detection.anchors_retinanet"]], "horizonms.models.detection.anchors_yolo": [[9, "module-horizonms.models.detection.anchors_yolo"]], "horizonms.models.detection.boxes": [[9, "module-horizonms.models.detection.boxes"]], "horizonms.models.detection.detection": [[9, "module-horizonms.models.detection.detection"]], "horizonms.models.detection.detection_base": [[9, "module-horizonms.models.detection.detection_base"]], "horizonms.models.detection.retinanet": [[9, "module-horizonms.models.detection.retinanet"]], "horizonms.models.detection.yolonet": [[9, "module-horizonms.models.detection.yolonet"]], "horizonms.models.detection.yolov1": [[9, "module-horizonms.models.detection.yolov1"]], "horizonms.models.detection.yolov1_utils": [[9, "module-horizonms.models.detection.yolov1_utils"]], "initialize_weights() (horizonms.models.detection.yolov1.yolov1 method)": [[9, "horizonms.models.detection.yolov1.YOLOv1.initialize_weights"]], "nms_postprocessing() (horizonms.models.detection.yolov1.yolov1 method)": [[9, "horizonms.models.detection.yolov1.YOLOv1.nms_postprocessing"]], "num_anchors_per_location() (horizonms.models.detection.anchors_retinanet.anchorgenerator method)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.num_anchors_per_location"]], "paired_box_iou() (in module horizonms.models.detection.boxes)": [[9, "horizonms.models.detection.boxes.paired_box_iou"]], "postprocess_detections() (horizonms.models.detection.retinanet.retinanet method)": [[9, "horizonms.models.detection.retinanet.Retinanet.postprocess_detections"]], "pred_postprocessing_for_loss_calculation() (horizonms.models.detection.retinanet.retinanet method)": [[9, "horizonms.models.detection.retinanet.Retinanet.pred_postprocessing_for_loss_calculation"]], "predict_one_batch() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.predict_one_batch"]], "predict_one_batch() (horizonms.models.detection.detection_base.basedetection method)": [[9, "horizonms.models.detection.detection_base.BaseDetection.predict_one_batch"]], "predict_one_batch() (horizonms.models.detection.yolonet.yolodetection method)": [[9, "horizonms.models.detection.yolonet.YOLODetection.predict_one_batch"]], "preprocessing_input() (horizonms.models.detection.detection_base.basedetection method)": [[9, "horizonms.models.detection.detection_base.BaseDetection.preprocessing_input"]], "set_cell_anchors() (horizonms.models.detection.anchors_retinanet.anchorgenerator method)": [[9, "horizonms.models.detection.anchors_retinanet.AnchorGenerator.set_cell_anchors"]], "test_one_batch() (horizonms.models.detection.detection.detection method)": [[9, "horizonms.models.detection.detection.Detection.test_one_batch"]], "test_one_batch() (horizonms.models.detection.detection_base.basedetection method)": [[9, "horizonms.models.detection.detection_base.BaseDetection.test_one_batch"]], "test_one_batch() (horizonms.models.detection.yolonet.yolodetection method)": [[9, "horizonms.models.detection.yolonet.YOLODetection.test_one_batch"]], "classificationmultiheads (class in horizonms.models.heads.classification_heads)": [[10, "horizonms.models.heads.classification_heads.ClassificationMultiHeads"]], "forward() (horizonms.models.heads.classification_heads.classificationmultiheads method)": [[10, "horizonms.models.heads.classification_heads.ClassificationMultiHeads.forward"]], "horizonms.models.heads.classification_heads": [[10, "module-horizonms.models.heads.classification_heads"]], "classificationpoolingnecks (class in horizonms.models.necks.classification_necks)": [[11, "horizonms.models.necks.classification_necks.ClassificationPoolingNecks"]], "featurepyramidnetwork (class in horizonms.models.necks.feature_pyramid_network)": [[11, "horizonms.models.necks.feature_pyramid_network.FeaturePyramidNetwork"]], "forward() (horizonms.models.necks.classification_necks.classificationpoolingnecks method)": [[11, "horizonms.models.necks.classification_necks.ClassificationPoolingNecks.forward"]], "forward() (horizonms.models.necks.feature_pyramid_network.featurepyramidnetwork method)": [[11, "horizonms.models.necks.feature_pyramid_network.FeaturePyramidNetwork.forward"]], "horizonms.models.necks.classification_necks": [[11, "module-horizonms.models.necks.classification_necks"]], "horizonms.models.necks.feature_pyramid_network": [[11, "module-horizonms.models.necks.feature_pyramid_network"]], "densenet (class in horizonms.models.nets.densenet)": [[12, "horizonms.models.nets.densenet.DenseNet"]], "efficientnet (class in horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.EfficientNet"]], "inceptionresnetv2 (class in horizonms.models.nets.inception_resnet)": [[12, "horizonms.models.nets.inception_resnet.InceptionResnetV2"]], "mobilenetv2 (class in horizonms.models.nets.mobilenetv2)": [[12, "horizonms.models.nets.mobilenetv2.MobileNetV2"]], "nfnet (class in horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.NFNet"]], "resnet (class in horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.ResNet"]], "resnetrs (class in horizonms.models.nets.resenetrs)": [[12, "horizonms.models.nets.resenetrs.ResnetRS"]], "shufflenetv2 (class in horizonms.models.nets.shufflenetv2)": [[12, "horizonms.models.nets.shufflenetv2.ShuffleNetV2"]], "vgg (class in horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.VGG"]], "vgglike (class in horizonms.models.nets.vgg_like)": [[12, "horizonms.models.nets.vgg_like.VGGLike"]], "vgg_se (class in horizonms.models.nets.vgg_se)": [[12, "horizonms.models.nets.vgg_se.VGG_SE"]], "densenet121() (in module horizonms.models.nets.densenet)": [[12, "horizonms.models.nets.densenet.densenet121"]], "densenet161() (in module horizonms.models.nets.densenet)": [[12, "horizonms.models.nets.densenet.densenet161"]], "densenet169() (in module horizonms.models.nets.densenet)": [[12, "horizonms.models.nets.densenet.densenet169"]], "densenet201() (in module horizonms.models.nets.densenet)": [[12, "horizonms.models.nets.densenet.densenet201"]], "efficientnet_b0() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b0"]], "efficientnet_b1() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b1"]], "efficientnet_b2() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b2"]], "efficientnet_b3() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b3"]], "efficientnet_b4() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b4"]], "efficientnet_b5() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b5"]], "efficientnet_b6() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b6"]], "efficientnet_b7() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b7"]], "efficientnet_b8() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_b8"]], "efficientnet_l2() (in module horizonms.models.nets.efficientnet)": [[12, "horizonms.models.nets.efficientnet.efficientnet_l2"]], "ens_adv_inception_resnet_v2() (in module horizonms.models.nets.inception_resnet)": [[12, "horizonms.models.nets.inception_resnet.ens_adv_inception_resnet_v2"]], "exclude_from_clipping() (horizonms.models.nets.nfnet.nfnet method)": [[12, "horizonms.models.nets.nfnet.NFNet.exclude_from_clipping"]], "exclude_from_weight_decay() (horizonms.models.nets.nfnet.nfnet method)": [[12, "horizonms.models.nets.nfnet.NFNet.exclude_from_weight_decay"]], "forward() (horizonms.models.nets.densenet.densenet method)": [[12, "horizonms.models.nets.densenet.DenseNet.forward"]], "forward() (horizonms.models.nets.efficientnet.efficientnet method)": [[12, "horizonms.models.nets.efficientnet.EfficientNet.forward"]], "forward() (horizonms.models.nets.inception_resnet.inceptionresnetv2 method)": [[12, "horizonms.models.nets.inception_resnet.InceptionResnetV2.forward"]], "forward() (horizonms.models.nets.mobilenetv2.mobilenetv2 method)": [[12, "horizonms.models.nets.mobilenetv2.MobileNetV2.forward"]], "forward() (horizonms.models.nets.nfnet.nfnet method)": [[12, "horizonms.models.nets.nfnet.NFNet.forward"]], "forward() (horizonms.models.nets.resenetrs.resnetrs method)": [[12, "horizonms.models.nets.resenetrs.ResnetRS.forward"]], "forward() (horizonms.models.nets.resnet.resnet method)": [[12, "horizonms.models.nets.resnet.ResNet.forward"]], "forward() (horizonms.models.nets.shufflenetv2.shufflenetv2 method)": [[12, "horizonms.models.nets.shufflenetv2.ShuffleNetV2.forward"]], "forward() (horizonms.models.nets.vgg.vgg method)": [[12, "horizonms.models.nets.vgg.VGG.forward"]], "forward() (horizonms.models.nets.vgg_like.vgglike method)": [[12, "horizonms.models.nets.vgg_like.VGGLike.forward"]], "forward() (horizonms.models.nets.vgg_se.vgg_se method)": [[12, "horizonms.models.nets.vgg_se.VGG_SE.forward"]], "horizonms.models.nets.densenet": [[12, "module-horizonms.models.nets.densenet"]], "horizonms.models.nets.efficientnet": [[12, "module-horizonms.models.nets.efficientnet"]], "horizonms.models.nets.inception_resnet": [[12, "module-horizonms.models.nets.inception_resnet"]], "horizonms.models.nets.mobilenetv2": [[12, "module-horizonms.models.nets.mobilenetv2"]], "horizonms.models.nets.nfnet": [[12, "module-horizonms.models.nets.nfnet"]], "horizonms.models.nets.resenetrs": [[12, "module-horizonms.models.nets.resenetrs"]], "horizonms.models.nets.resnet": [[12, "module-horizonms.models.nets.resnet"]], "horizonms.models.nets.shufflenetv2": [[12, "module-horizonms.models.nets.shufflenetv2"]], "horizonms.models.nets.utils": [[12, "module-horizonms.models.nets.utils"]], "horizonms.models.nets.vgg": [[12, "module-horizonms.models.nets.vgg"]], "horizonms.models.nets.vgg_like": [[12, "module-horizonms.models.nets.vgg_like"]], "horizonms.models.nets.vgg_se": [[12, "module-horizonms.models.nets.vgg_se"]], "inception_resnet_v2() (in module horizonms.models.nets.inception_resnet)": [[12, "horizonms.models.nets.inception_resnet.inception_resnet_v2"]], "init_weights() (horizonms.models.nets.resenetrs.resnetrs method)": [[12, "horizonms.models.nets.resenetrs.ResnetRS.init_weights"]], "make_layers() (horizonms.models.nets.resenetrs.resnetrs method)": [[12, "horizonms.models.nets.resenetrs.ResnetRS.make_layers"]], "make_layers() (in module horizonms.models.nets.vgg_se)": [[12, "horizonms.models.nets.vgg_se.make_layers"]], "mobilenet_v2() (in module horizonms.models.nets.mobilenetv2)": [[12, "horizonms.models.nets.mobilenetv2.mobilenet_v2"]], "nfnet_f0() (in module horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.nfnet_f0"]], "nfnet_f1() (in module horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.nfnet_f1"]], "nfnet_f2() (in module horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.nfnet_f2"]], "nfnet_f3() (in module horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.nfnet_f3"]], "nfnet_f4() (in module horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.nfnet_f4"]], "nfnet_f5() (in module horizonms.models.nets.nfnet)": [[12, "horizonms.models.nets.nfnet.nfnet_f5"]], "resnet101() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnet101"]], "resnet152() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnet152"]], "resnet18() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnet18"]], "resnet34() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnet34"]], "resnet50() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnet50"]], "resnetrs101() (in module horizonms.models.nets.resenetrs)": [[12, "horizonms.models.nets.resenetrs.resnetrs101"]], "resnetrs152() (in module horizonms.models.nets.resenetrs)": [[12, "horizonms.models.nets.resenetrs.resnetrs152"]], "resnetrs200() (in module horizonms.models.nets.resenetrs)": [[12, "horizonms.models.nets.resenetrs.resnetrs200"]], "resnetrs50() (in module horizonms.models.nets.resenetrs)": [[12, "horizonms.models.nets.resenetrs.resnetrs50"]], "resnext101_32x8d() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnext101_32x8d"]], "resnext50_32x4d() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.resnext50_32x4d"]], "shufflenet_v2_x0_5() (in module horizonms.models.nets.shufflenetv2)": [[12, "horizonms.models.nets.shufflenetv2.shufflenet_v2_x0_5"]], "shufflenet_v2_x1_0() (in module horizonms.models.nets.shufflenetv2)": [[12, "horizonms.models.nets.shufflenetv2.shufflenet_v2_x1_0"]], "shufflenet_v2_x1_5() (in module horizonms.models.nets.shufflenetv2)": [[12, "horizonms.models.nets.shufflenetv2.shufflenet_v2_x1_5"]], "shufflenet_v2_x2_0() (in module horizonms.models.nets.shufflenetv2)": [[12, "horizonms.models.nets.shufflenetv2.shufflenet_v2_x2_0"]], "vgg11() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg11"]], "vgg11_bn() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg11_bn"]], "vgg13() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg13"]], "vgg13_bn() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg13_bn"]], "vgg13_bn_narrow() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg13_bn_narrow"]], "vgg16() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg16"]], "vgg16_bn() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg16_bn"]], "vgg19() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg19"]], "vgg19_bn() (in module horizonms.models.nets.vgg)": [[12, "horizonms.models.nets.vgg.vgg19_bn"]], "vgg_like_v1() (in module horizonms.models.nets.vgg_like)": [[12, "horizonms.models.nets.vgg_like.vgg_like_v1"]], "vgg_like_v2() (in module horizonms.models.nets.vgg_like)": [[12, "horizonms.models.nets.vgg_like.vgg_like_v2"]], "vgg_like_v3() (in module horizonms.models.nets.vgg_like)": [[12, "horizonms.models.nets.vgg_like.vgg_like_v3"]], "wide_resnet101_2() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.wide_resnet101_2"]], "wide_resnet50_2() (in module horizonms.models.nets.resnet)": [[12, "horizonms.models.nets.resnet.wide_resnet50_2"]], "batchnorm2d (class in horizonms.models.ops.bn)": [[13, "horizonms.models.ops.bn.BatchNorm2d"]], "batchnormbase (class in horizonms.models.ops.bn)": [[13, "horizonms.models.ops.bn.BatchNormBase"]], "convnormactivation (class in horizonms.models.ops.misc)": [[13, "horizonms.models.ops.misc.ConvNormActivation"]], "expectedbatchnorm2d (class in horizonms.models.ops.bn)": [[13, "horizonms.models.ops.bn.ExpectedBatchNorm2d"]], "pseudomaxpooling2d (class in horizonms.models.ops.misc)": [[13, "horizonms.models.ops.misc.PseudomaxPooling2D"]], "sampleexpectedbatchnorm2d (class in horizonms.models.ops.bn)": [[13, "horizonms.models.ops.bn.SampleExpectedBatchNorm2d"]], "samplegexpectedbatchnorm2d (class in horizonms.models.ops.bn)": [[13, "horizonms.models.ops.bn.SampleGExpectedBatchNorm2d"]], "squeezeexcitation (class in horizonms.models.ops.misc)": [[13, "horizonms.models.ops.misc.SqueezeExcitation"]], "stochasticdepth (class in horizonms.models.ops.stochastic_depth)": [[13, "horizonms.models.ops.stochastic_depth.StochasticDepth"]], "affine (horizonms.models.ops.bn.batchnormbase attribute)": [[13, "horizonms.models.ops.bn.BatchNormBase.affine"]], "eps (horizonms.models.ops.bn.batchnormbase attribute)": [[13, "horizonms.models.ops.bn.BatchNormBase.eps"]], "forward() (horizonms.models.ops.bn.batchnorm2d method)": [[13, "horizonms.models.ops.bn.BatchNorm2d.forward"]], "forward() (horizonms.models.ops.bn.expectedbatchnorm2d method)": [[13, "horizonms.models.ops.bn.ExpectedBatchNorm2d.forward"]], "forward() (horizonms.models.ops.bn.sampleexpectedbatchnorm2d method)": [[13, "horizonms.models.ops.bn.SampleExpectedBatchNorm2d.forward"]], "forward() (horizonms.models.ops.bn.samplegexpectedbatchnorm2d method)": [[13, "horizonms.models.ops.bn.SampleGExpectedBatchNorm2d.forward"]], "forward() (horizonms.models.ops.misc.pseudomaxpooling2d method)": [[13, "horizonms.models.ops.misc.PseudomaxPooling2D.forward"]], "forward() (horizonms.models.ops.misc.squeezeexcitation method)": [[13, "horizonms.models.ops.misc.SqueezeExcitation.forward"]], "forward() (horizonms.models.ops.stochastic_depth.stochasticdepth method)": [[13, "horizonms.models.ops.stochastic_depth.StochasticDepth.forward"]], "horizonms.models.ops.bn": [[13, "module-horizonms.models.ops.bn"]], "horizonms.models.ops.misc": [[13, "module-horizonms.models.ops.misc"]], "horizonms.models.ops.stochastic_depth": [[13, "module-horizonms.models.ops.stochastic_depth"]], "momentum (horizonms.models.ops.bn.batchnormbase attribute)": [[13, "horizonms.models.ops.bn.BatchNormBase.momentum"]], "num_features (horizonms.models.ops.bn.batchnormbase attribute)": [[13, "horizonms.models.ops.bn.BatchNormBase.num_features"]], "reset_parameters() (horizonms.models.ops.bn.batchnormbase method)": [[13, "horizonms.models.ops.bn.BatchNormBase.reset_parameters"]], "reset_running_stats() (horizonms.models.ops.bn.batchnormbase method)": [[13, "horizonms.models.ops.bn.BatchNormBase.reset_running_stats"]], "stochastic_depth() (in module horizonms.models.ops.stochastic_depth)": [[13, "horizonms.models.ops.stochastic_depth.stochastic_depth"]], "track_running_stats (horizonms.models.ops.bn.batchnormbase attribute)": [[13, "horizonms.models.ops.bn.BatchNormBase.track_running_stats"]], "basesegmentation (class in horizonms.models.segmentation.segmentation_base)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation"]], "bboxsegmentation (class in horizonms.models.segmentation.segmentation_bbox)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation"]], "bottleneckdownsampling (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.BottleNeckDownSampling"]], "bottleneckdownsamplingdilatedconv (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.BottleNeckDownSamplingDilatedConv"]], "bottleneckdownsamplingdilatedconvlast (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.BottleNeckDownSamplingDilatedConvLast"]], "bottlenecknormal (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.BottleNeckNormal"]], "bottlenecknormal_asym (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.BottleNeckNormal_Asym"]], "bottleneckupsampling (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.BottleNeckUpSampling"]], "conv_residual_conv (class in horizonms.models.segmentation.residualunet)": [[14, "horizonms.models.segmentation.residualunet.Conv_residual_conv"]], "enet (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.ENet"]], "residualunet (class in horizonms.models.segmentation.residualunet)": [[14, "horizonms.models.segmentation.residualunet.ResidualUNet"]], "segmentation (class in horizonms.models.segmentation.segmentation)": [[14, "horizonms.models.segmentation.segmentation.Segmentation"]], "simpleencondermodule (class in horizonms.models.segmentation.simpleunet)": [[14, "horizonms.models.segmentation.simpleunet.SimpleEnconderModule"]], "simpleunet (class in horizonms.models.segmentation.simpleunet)": [[14, "horizonms.models.segmentation.simpleunet.SimpleUNet"]], "unet_v1 (class in horizonms.models.segmentation.unet)": [[14, "horizonms.models.segmentation.unet.UNet_V1"]], "unet_v2 (class in horizonms.models.segmentation.unet)": [[14, "horizonms.models.segmentation.unet.UNet_V2"]], "unetsimpledecoder (class in horizonms.models.segmentation.decoder)": [[14, "horizonms.models.segmentation.decoder.UnetSimpleDecoder"]], "up_light (class in horizonms.models.segmentation.decoder)": [[14, "horizonms.models.segmentation.decoder.Up_Light"]], "calculate_loss() (horizonms.models.segmentation.segmentation.segmentation method)": [[14, "horizonms.models.segmentation.segmentation.Segmentation.calculate_loss"]], "calculate_loss() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.calculate_loss"]], "calculate_losses() (horizonms.models.segmentation.segmentation.segmentation method)": [[14, "horizonms.models.segmentation.segmentation.Segmentation.calculate_losses"]], "calculate_losses() (horizonms.models.segmentation.segmentation_base.basesegmentation method)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation.calculate_losses"]], "calculate_losses() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.calculate_losses"]], "calculate_metric() (horizonms.models.segmentation.segmentation.segmentation method)": [[14, "horizonms.models.segmentation.segmentation.Segmentation.calculate_metric"]], "calculate_metric() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.calculate_metric"]], "calculate_metrics() (horizonms.models.segmentation.segmentation.segmentation method)": [[14, "horizonms.models.segmentation.segmentation.Segmentation.calculate_metrics"]], "calculate_metrics() (horizonms.models.segmentation.segmentation_base.basesegmentation method)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation.calculate_metrics"]], "calculate_metrics() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.calculate_metrics"]], "calculate_sigmoid_losses() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.calculate_sigmoid_losses"]], "calculate_softmax_losses() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.calculate_softmax_losses"]], "convbatch() (in module horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.convBatch"]], "conv_block() (in module horizonms.models.segmentation.residualunet)": [[14, "horizonms.models.segmentation.residualunet.conv_block"]], "conv_block_1() (in module horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.conv_block_1"]], "conv_block_3() (in module horizonms.models.segmentation.residualunet)": [[14, "horizonms.models.segmentation.residualunet.conv_block_3"]], "conv_block_3_3() (in module horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.conv_block_3_3"]], "conv_block_asym() (in module horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.conv_block_Asym"]], "conv_decod_block() (in module horizonms.models.segmentation.residualunet)": [[14, "horizonms.models.segmentation.residualunet.conv_decod_block"]], "forward() (horizonms.models.segmentation.decoder.unetsimpledecoder method)": [[14, "horizonms.models.segmentation.decoder.UnetSimpleDecoder.forward"]], "forward() (horizonms.models.segmentation.decoder.up_light method)": [[14, "horizonms.models.segmentation.decoder.Up_Light.forward"]], "forward() (horizonms.models.segmentation.enet.bottleneckdownsampling method)": [[14, "horizonms.models.segmentation.enet.BottleNeckDownSampling.forward"]], "forward() (horizonms.models.segmentation.enet.bottleneckdownsamplingdilatedconv method)": [[14, "horizonms.models.segmentation.enet.BottleNeckDownSamplingDilatedConv.forward"]], "forward() (horizonms.models.segmentation.enet.bottleneckdownsamplingdilatedconvlast method)": [[14, "horizonms.models.segmentation.enet.BottleNeckDownSamplingDilatedConvLast.forward"]], "forward() (horizonms.models.segmentation.enet.bottlenecknormal method)": [[14, "horizonms.models.segmentation.enet.BottleNeckNormal.forward"]], "forward() (horizonms.models.segmentation.enet.bottlenecknormal_asym method)": [[14, "horizonms.models.segmentation.enet.BottleNeckNormal_Asym.forward"]], "forward() (horizonms.models.segmentation.enet.bottleneckupsampling method)": [[14, "horizonms.models.segmentation.enet.BottleNeckUpSampling.forward"]], "forward() (horizonms.models.segmentation.enet.enet method)": [[14, "horizonms.models.segmentation.enet.ENet.forward"]], "forward() (horizonms.models.segmentation.enet.interpolate method)": [[14, "horizonms.models.segmentation.enet.interpolate.forward"]], "forward() (horizonms.models.segmentation.residualunet.conv_residual_conv method)": [[14, "horizonms.models.segmentation.residualunet.Conv_residual_conv.forward"]], "forward() (horizonms.models.segmentation.residualunet.residualunet method)": [[14, "horizonms.models.segmentation.residualunet.ResidualUNet.forward"]], "forward() (horizonms.models.segmentation.simpleunet.simpleencondermodule method)": [[14, "horizonms.models.segmentation.simpleunet.SimpleEnconderModule.forward"]], "forward() (horizonms.models.segmentation.simpleunet.simpleunet method)": [[14, "horizonms.models.segmentation.simpleunet.SimpleUNet.forward"]], "forward() (horizonms.models.segmentation.unet.unet_v1 method)": [[14, "horizonms.models.segmentation.unet.UNet_V1.forward"]], "forward() (horizonms.models.segmentation.unet.unet_v2 method)": [[14, "horizonms.models.segmentation.unet.UNet_V2.forward"]], "forward_train() (horizonms.models.segmentation.segmentation_base.basesegmentation method)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation.forward_train"]], "get_segmentation_net() (in module horizonms.models.segmentation.segmentation_base)": [[14, "horizonms.models.segmentation.segmentation_base.get_segmentation_net"]], "horizonms.models.segmentation.decoder": [[14, "module-horizonms.models.segmentation.decoder"]], "horizonms.models.segmentation.enet": [[14, "module-horizonms.models.segmentation.enet"]], "horizonms.models.segmentation.residualunet": [[14, "module-horizonms.models.segmentation.residualunet"]], "horizonms.models.segmentation.segmentation": [[14, "module-horizonms.models.segmentation.segmentation"]], "horizonms.models.segmentation.segmentation_base": [[14, "module-horizonms.models.segmentation.segmentation_base"]], "horizonms.models.segmentation.segmentation_bbox": [[14, "module-horizonms.models.segmentation.segmentation_bbox"]], "horizonms.models.segmentation.simpleunet": [[14, "module-horizonms.models.segmentation.simpleunet"]], "horizonms.models.segmentation.unet": [[14, "module-horizonms.models.segmentation.unet"]], "init_weights() (horizonms.models.segmentation.enet.enet method)": [[14, "horizonms.models.segmentation.enet.ENet.init_weights"]], "init_weights() (horizonms.models.segmentation.residualunet.residualunet method)": [[14, "horizonms.models.segmentation.residualunet.ResidualUNet.init_weights"]], "init_weights() (horizonms.models.segmentation.simpleunet.simpleunet method)": [[14, "horizonms.models.segmentation.simpleunet.SimpleUNet.init_weights"]], "interpolate (class in horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.interpolate"]], "make_layers() (horizonms.models.segmentation.decoder.unetsimpledecoder method)": [[14, "horizonms.models.segmentation.decoder.UnetSimpleDecoder.make_layers"]], "make_layers() (horizonms.models.segmentation.decoder.up_light method)": [[14, "horizonms.models.segmentation.decoder.Up_Light.make_layers"]], "make_layers() (horizonms.models.segmentation.simpleunet.simpleencondermodule method)": [[14, "horizonms.models.segmentation.simpleunet.SimpleEnconderModule.make_layers"]], "make_layers() (horizonms.models.segmentation.unet.unet_v1 method)": [[14, "horizonms.models.segmentation.unet.UNet_V1.make_layers"]], "maxpool() (in module horizonms.models.segmentation.residualunet)": [[14, "horizonms.models.segmentation.residualunet.maxpool"]], "pred_upsampling() (horizonms.models.segmentation.unet.unet_v2 method)": [[14, "horizonms.models.segmentation.unet.UNet_V2.pred_upsampling"]], "predict_one_batch() (horizonms.models.segmentation.segmentation_base.basesegmentation method)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation.predict_one_batch"]], "preprocessing_input() (horizonms.models.segmentation.segmentation_base.basesegmentation method)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation.preprocessing_input"]], "preprocessing_input() (horizonms.models.segmentation.segmentation_bbox.bboxsegmentation method)": [[14, "horizonms.models.segmentation.segmentation_bbox.BboxSegmentation.preprocessing_input"]], "test_one_batch() (horizonms.models.segmentation.segmentation_base.basesegmentation method)": [[14, "horizonms.models.segmentation.segmentation_base.BaseSegmentation.test_one_batch"]], "upsampleconv() (in module horizonms.models.segmentation.enet)": [[14, "horizonms.models.segmentation.enet.upSampleConv"]], "balancedsampler (class in horizonms.samplers.sampler)": [[15, "horizonms.samplers.sampler.BalancedSampler"]], "distributedbalancedsampler (class in horizonms.samplers.distributed)": [[15, "horizonms.samplers.distributed.DistributedBalancedSampler"]], "distributedweightedsampler (class in horizonms.samplers.distributed)": [[15, "horizonms.samplers.distributed.DistributedWeightedSampler"]], "patientsampler (class in horizonms.samplers.patient_sampler)": [[15, "horizonms.samplers.patient_sampler.PatientSampler"]], "horizonms.samplers.distributed": [[15, "module-horizonms.samplers.distributed"]], "horizonms.samplers.patient_sampler": [[15, "module-horizonms.samplers.patient_sampler"]], "horizonms.samplers.sampler": [[15, "module-horizonms.samplers.sampler"]], "id_() (in module horizonms.samplers.patient_sampler)": [[15, "horizonms.samplers.patient_sampler.id_"]], "map_() (in module horizonms.samplers.patient_sampler)": [[15, "horizonms.samplers.patient_sampler.map_"]], "autocontrast (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.AutoContrast"]], "brightness (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Brightness"]], "cvautocontrast (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVAutoContrast"]], "cvbrightness (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVBrightness"]], "cvcontrast (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVContrast"]], "cvcropx (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVCropX"]], "cvcropy (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVCropY"]], "cvcvtcolor (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVCvtColor"]], "cvequalize (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVEqualize"]], "cvfliplr (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVFliplr"]], "cvflipud (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVFlipud"]], "cvgaussianblur (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVGaussianBlur"]], "cvgaussiannoise (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVGaussianNoise"]], "cvhue (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVHue"]], "cvidentity (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVIdentity"]], "cvimagebase (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVImageBase"]], "cvimagepadding (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVImagePadding"]], "cvinvert (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVInvert"]], "cvlighting (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVLighting"]], "cvnormalizer (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVNormalizer"]], "cvposterize (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVPosterize"]], "cvrandomautocontrast (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomAutoContrast"]], "cvrandomblur (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomBlur"]], "cvrandombrightness (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomBrightness"]], "cvrandomcontrast (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomContrast"]], "cvrandomcrop (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomCrop"]], "cvrandomcropx (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomCropX"]], "cvrandomcropy (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomCropY"]], "cvrandomequalize (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomEqualize"]], "cvrandomfliplr (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomFliplr"]], "cvrandomflipud (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomFlipud"]], "cvrandomgaussianblur (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomGaussianBlur"]], "cvrandomgaussiannoise (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomGaussianNoise"]], "cvrandomhue (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomHue"]], "cvrandominvert (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomInvert"]], "cvrandomlighting (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomLighting"]], "cvrandomposterize (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomPosterize"]], "cvrandomresizedcrop (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomResizedCrop"]], "cvrandomrotate (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomRotate"]], "cvrandomsaturation (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomSaturation"]], "cvrandomscale (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomScale"]], "cvrandomsharpness (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomSharpness"]], "cvrandomshearx (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomShearX"]], "cvrandomsheary (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomShearY"]], "cvrandomshift (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomShift"]], "cvrandomsolarize (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVRandomSolarize"]], "cvrandomtranslatex (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomTranslateX"]], "cvrandomtranslatey (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRandomTranslateY"]], "cvresize (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVResize"]], "cvresizewidth (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVResizeWidth"]], "cvrotate (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVRotate"]], "cvsaturation (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVSaturation"]], "cvscale (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVScale"]], "cvsharpness (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVSharpness"]], "cvshearx (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVShearX"]], "cvsheary (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVShearY"]], "cvsolarize (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVSolarize"]], "cvtranslatex (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVTranslateX"]], "cvtranslatey (class in horizonms.transforms.spatial_cv)": [[16, "horizonms.transforms.spatial_cv.CVTranslateY"]], "cvuint8tofloat (class in horizonms.transforms.image_cv)": [[16, "horizonms.transforms.image_cv.CVUint8ToFloat"]], "compose (class in horizonms.transforms.base)": [[16, "horizonms.transforms.base.Compose"]], "contrast (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Contrast"]], "cropx (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.CropX"]], "cropy (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.CropY"]], "customizedtrivialaugment (class in horizonms.transforms.augment)": [[16, "horizonms.transforms.augment.CustomizedTrivialAugment"]], "equalize (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Equalize"]], "fliplr (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.Fliplr"]], "flipud (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.Flipud"]], "gaussianblur (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.GaussianBlur"]], "gaussiannoise (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.GaussianNoise"]], "horizonmstrivialaugment (class in horizonms.transforms.augment)": [[16, "horizonms.transforms.augment.HorizonmsTrivialAugment"]], "hue (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Hue"]], "identity (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Identity"]], "imagebase (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.ImageBase"]], "imageheightpaddingorcrop (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.ImageHeightPaddingOrCrop"]], "imagepadding (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.ImagePadding"]], "invert (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Invert"]], "lighting (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Lighting"]], "mixup (class in horizonms.transforms.batch_transforms)": [[16, "horizonms.transforms.batch_transforms.Mixup"]], "normalizer (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Normalizer"]], "posterize (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Posterize"]], "randomautocontrast (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomAutoContrast"]], "randombrightness (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomBrightness"]], "randomcontrast (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomContrast"]], "randomcrop (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomCrop"]], "randomcropx (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomCropX"]], "randomcropy (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomCropY"]], "randomequalize (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomEqualize"]], "randomfliplr (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomFliplr"]], "randomflipud (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomFlipud"]], "randomgaussianblur (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomGaussianBlur"]], "randomgaussiannoise (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomGaussianNoise"]], "randomhue (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomHue"]], "randominvert (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomInvert"]], "randomlighting (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomLighting"]], "randomposterize (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomPosterize"]], "randomresizedcrop (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomResizedCrop"]], "randomrotate (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomRotate"]], "randomsaturation (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomSaturation"]], "randomscale (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomScale"]], "randomsharpness (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomSharpness"]], "randomshearx (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomShearX"]], "randomsheary (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomShearY"]], "randomsolarize (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.RandomSolarize"]], "randomtranslatex (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomTranslateX"]], "randomtranslatey (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.RandomTranslateY"]], "resize (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.Resize"]], "resizewidth (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.ResizeWidth"]], "rotate (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.Rotate"]], "saturation (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Saturation"]], "scale (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.Scale"]], "sequentialaugment (class in horizonms.transforms.augment)": [[16, "horizonms.transforms.augment.SequentialAugment"]], "sharpness (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Sharpness"]], "shearx (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.ShearX"]], "sheary (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.ShearY"]], "sigmoidlabelsmoothing (class in horizonms.transforms.batch_transforms)": [[16, "horizonms.transforms.batch_transforms.SigmoidLabelSmoothing"]], "softmaxlabelsmoothing (class in horizonms.transforms.batch_transforms)": [[16, "horizonms.transforms.batch_transforms.SoftmaxLabelSmoothing"]], "solarize (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Solarize"]], "spatialbase (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.SpatialBase"]], "targetstructure (class in horizonms.transforms.base)": [[16, "horizonms.transforms.base.TargetStructure"]], "toonehotlabels (class in horizonms.transforms.batch_transforms)": [[16, "horizonms.transforms.batch_transforms.ToOnehotLabels"]], "totensor (class in horizonms.transforms.base)": [[16, "horizonms.transforms.base.ToTensor"]], "translatex (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.TranslateX"]], "translatey (class in horizonms.transforms.spatial)": [[16, "horizonms.transforms.spatial.TranslateY"]], "uint8tofloat (class in horizonms.transforms.image)": [[16, "horizonms.transforms.image.Uint8ToFloat"]], "calculate() (horizonms.transforms.image.autocontrast method)": [[16, "horizonms.transforms.image.AutoContrast.calculate"]], "calculate() (horizonms.transforms.image.brightness method)": [[16, "horizonms.transforms.image.Brightness.calculate"]], "calculate() (horizonms.transforms.image.contrast method)": [[16, "horizonms.transforms.image.Contrast.calculate"]], "calculate() (horizonms.transforms.image.equalize method)": [[16, "horizonms.transforms.image.Equalize.calculate"]], "calculate() (horizonms.transforms.image.gaussianblur method)": [[16, "horizonms.transforms.image.GaussianBlur.calculate"]], "calculate() (horizonms.transforms.image.gaussiannoise method)": [[16, "horizonms.transforms.image.GaussianNoise.calculate"]], "calculate() (horizonms.transforms.image.hue method)": [[16, "horizonms.transforms.image.Hue.calculate"]], "calculate() (horizonms.transforms.image.identity method)": [[16, "horizonms.transforms.image.Identity.calculate"]], "calculate() (horizonms.transforms.image.imagebase method)": [[16, "horizonms.transforms.image.ImageBase.calculate"]], "calculate() (horizonms.transforms.image.invert method)": [[16, "horizonms.transforms.image.Invert.calculate"]], "calculate() (horizonms.transforms.image.lighting method)": [[16, "horizonms.transforms.image.Lighting.calculate"]], "calculate() (horizonms.transforms.image.normalizer method)": [[16, "horizonms.transforms.image.Normalizer.calculate"]], "calculate() (horizonms.transforms.image.posterize method)": [[16, "horizonms.transforms.image.Posterize.calculate"]], "calculate() (horizonms.transforms.image.randomautocontrast method)": [[16, "horizonms.transforms.image.RandomAutoContrast.calculate"]], "calculate() (horizonms.transforms.image.randombrightness method)": [[16, "horizonms.transforms.image.RandomBrightness.calculate"]], "calculate() (horizonms.transforms.image.randomcontrast method)": [[16, "horizonms.transforms.image.RandomContrast.calculate"]], "calculate() (horizonms.transforms.image.randomequalize method)": [[16, "horizonms.transforms.image.RandomEqualize.calculate"]], "calculate() (horizonms.transforms.image.randomgaussianblur method)": [[16, "horizonms.transforms.image.RandomGaussianBlur.calculate"]], "calculate() (horizonms.transforms.image.randomgaussiannoise method)": [[16, "horizonms.transforms.image.RandomGaussianNoise.calculate"]], "calculate() (horizonms.transforms.image.randomhue method)": [[16, "horizonms.transforms.image.RandomHue.calculate"]], "calculate() (horizonms.transforms.image.randominvert method)": [[16, "horizonms.transforms.image.RandomInvert.calculate"]], "calculate() (horizonms.transforms.image.randomlighting method)": [[16, "horizonms.transforms.image.RandomLighting.calculate"]], "calculate() (horizonms.transforms.image.randomposterize method)": [[16, "horizonms.transforms.image.RandomPosterize.calculate"]], "calculate() (horizonms.transforms.image.randomsaturation method)": [[16, "horizonms.transforms.image.RandomSaturation.calculate"]], "calculate() (horizonms.transforms.image.randomsharpness method)": [[16, "horizonms.transforms.image.RandomSharpness.calculate"]], "calculate() (horizonms.transforms.image.randomsolarize method)": [[16, "horizonms.transforms.image.RandomSolarize.calculate"]], "calculate() (horizonms.transforms.image.saturation method)": [[16, "horizonms.transforms.image.Saturation.calculate"]], "calculate() (horizonms.transforms.image.sharpness method)": [[16, "horizonms.transforms.image.Sharpness.calculate"]], "calculate() (horizonms.transforms.image.solarize method)": [[16, "horizonms.transforms.image.Solarize.calculate"]], "calculate() (horizonms.transforms.image.uint8tofloat method)": [[16, "horizonms.transforms.image.Uint8ToFloat.calculate"]], "calculate() (horizonms.transforms.image_cv.cvautocontrast method)": [[16, "horizonms.transforms.image_cv.CVAutoContrast.calculate"]], "calculate() (horizonms.transforms.image_cv.cvbrightness method)": [[16, "horizonms.transforms.image_cv.CVBrightness.calculate"]], "calculate() (horizonms.transforms.image_cv.cvcontrast method)": [[16, "horizonms.transforms.image_cv.CVContrast.calculate"]], "calculate() (horizonms.transforms.image_cv.cvcvtcolor method)": [[16, "horizonms.transforms.image_cv.CVCvtColor.calculate"]], "calculate() (horizonms.transforms.image_cv.cvequalize method)": [[16, "horizonms.transforms.image_cv.CVEqualize.calculate"]], "calculate() (horizonms.transforms.image_cv.cvgaussianblur method)": [[16, "horizonms.transforms.image_cv.CVGaussianBlur.calculate"]], "calculate() (horizonms.transforms.image_cv.cvgaussiannoise method)": [[16, "horizonms.transforms.image_cv.CVGaussianNoise.calculate"]], "calculate() (horizonms.transforms.image_cv.cvhue method)": [[16, "horizonms.transforms.image_cv.CVHue.calculate"]], "calculate() (horizonms.transforms.image_cv.cvidentity method)": [[16, "horizonms.transforms.image_cv.CVIdentity.calculate"]], "calculate() (horizonms.transforms.image_cv.cvimagebase method)": [[16, "horizonms.transforms.image_cv.CVImageBase.calculate"]], "calculate() (horizonms.transforms.image_cv.cvinvert method)": [[16, "horizonms.transforms.image_cv.CVInvert.calculate"]], "calculate() (horizonms.transforms.image_cv.cvlighting method)": [[16, "horizonms.transforms.image_cv.CVLighting.calculate"]], "calculate() (horizonms.transforms.image_cv.cvnormalizer method)": [[16, "horizonms.transforms.image_cv.CVNormalizer.calculate"]], "calculate() (horizonms.transforms.image_cv.cvposterize method)": [[16, "horizonms.transforms.image_cv.CVPosterize.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomautocontrast method)": [[16, "horizonms.transforms.image_cv.CVRandomAutoContrast.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomblur method)": [[16, "horizonms.transforms.image_cv.CVRandomBlur.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandombrightness method)": [[16, "horizonms.transforms.image_cv.CVRandomBrightness.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomcontrast method)": [[16, "horizonms.transforms.image_cv.CVRandomContrast.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomequalize method)": [[16, "horizonms.transforms.image_cv.CVRandomEqualize.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomgaussianblur method)": [[16, "horizonms.transforms.image_cv.CVRandomGaussianBlur.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomgaussiannoise method)": [[16, "horizonms.transforms.image_cv.CVRandomGaussianNoise.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomhue method)": [[16, "horizonms.transforms.image_cv.CVRandomHue.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandominvert method)": [[16, "horizonms.transforms.image_cv.CVRandomInvert.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomlighting method)": [[16, "horizonms.transforms.image_cv.CVRandomLighting.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomposterize method)": [[16, "horizonms.transforms.image_cv.CVRandomPosterize.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomsaturation method)": [[16, "horizonms.transforms.image_cv.CVRandomSaturation.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomsharpness method)": [[16, "horizonms.transforms.image_cv.CVRandomSharpness.calculate"]], "calculate() (horizonms.transforms.image_cv.cvrandomsolarize method)": [[16, "horizonms.transforms.image_cv.CVRandomSolarize.calculate"]], "calculate() (horizonms.transforms.image_cv.cvsaturation method)": [[16, "horizonms.transforms.image_cv.CVSaturation.calculate"]], "calculate() (horizonms.transforms.image_cv.cvsharpness method)": [[16, "horizonms.transforms.image_cv.CVSharpness.calculate"]], "calculate() (horizonms.transforms.image_cv.cvsolarize method)": [[16, "horizonms.transforms.image_cv.CVSolarize.calculate"]], "calculate() (horizonms.transforms.image_cv.cvuint8tofloat method)": [[16, "horizonms.transforms.image_cv.CVUint8ToFloat.calculate"]], "calculate_image() (horizonms.transforms.spatial.cropx method)": [[16, "horizonms.transforms.spatial.CropX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.cropy method)": [[16, "horizonms.transforms.spatial.CropY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.fliplr method)": [[16, "horizonms.transforms.spatial.Fliplr.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.flipud method)": [[16, "horizonms.transforms.spatial.Flipud.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.imageheightpaddingorcrop method)": [[16, "horizonms.transforms.spatial.ImageHeightPaddingOrCrop.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.imagepadding method)": [[16, "horizonms.transforms.spatial.ImagePadding.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomcropx method)": [[16, "horizonms.transforms.spatial.RandomCropX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomcropy method)": [[16, "horizonms.transforms.spatial.RandomCropY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomfliplr method)": [[16, "horizonms.transforms.spatial.RandomFliplr.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomflipud method)": [[16, "horizonms.transforms.spatial.RandomFlipud.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomresizedcrop method)": [[16, "horizonms.transforms.spatial.RandomResizedCrop.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomrotate method)": [[16, "horizonms.transforms.spatial.RandomRotate.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomscale method)": [[16, "horizonms.transforms.spatial.RandomScale.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomshearx method)": [[16, "horizonms.transforms.spatial.RandomShearX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomsheary method)": [[16, "horizonms.transforms.spatial.RandomShearY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomtranslatex method)": [[16, "horizonms.transforms.spatial.RandomTranslateX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.randomtranslatey method)": [[16, "horizonms.transforms.spatial.RandomTranslateY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.resize method)": [[16, "horizonms.transforms.spatial.Resize.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.resizewidth method)": [[16, "horizonms.transforms.spatial.ResizeWidth.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.rotate method)": [[16, "horizonms.transforms.spatial.Rotate.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.scale method)": [[16, "horizonms.transforms.spatial.Scale.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.shearx method)": [[16, "horizonms.transforms.spatial.ShearX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.sheary method)": [[16, "horizonms.transforms.spatial.ShearY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.spatialbase method)": [[16, "horizonms.transforms.spatial.SpatialBase.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.translatex method)": [[16, "horizonms.transforms.spatial.TranslateX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial.translatey method)": [[16, "horizonms.transforms.spatial.TranslateY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvcropx method)": [[16, "horizonms.transforms.spatial_cv.CVCropX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvcropy method)": [[16, "horizonms.transforms.spatial_cv.CVCropY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvfliplr method)": [[16, "horizonms.transforms.spatial_cv.CVFliplr.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvflipud method)": [[16, "horizonms.transforms.spatial_cv.CVFlipud.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvimagepadding method)": [[16, "horizonms.transforms.spatial_cv.CVImagePadding.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomcrop method)": [[16, "horizonms.transforms.spatial_cv.CVRandomCrop.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomcropx method)": [[16, "horizonms.transforms.spatial_cv.CVRandomCropX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomcropy method)": [[16, "horizonms.transforms.spatial_cv.CVRandomCropY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomfliplr method)": [[16, "horizonms.transforms.spatial_cv.CVRandomFliplr.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomflipud method)": [[16, "horizonms.transforms.spatial_cv.CVRandomFlipud.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomresizedcrop method)": [[16, "horizonms.transforms.spatial_cv.CVRandomResizedCrop.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomrotate method)": [[16, "horizonms.transforms.spatial_cv.CVRandomRotate.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomscale method)": [[16, "horizonms.transforms.spatial_cv.CVRandomScale.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomshearx method)": [[16, "horizonms.transforms.spatial_cv.CVRandomShearX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomsheary method)": [[16, "horizonms.transforms.spatial_cv.CVRandomShearY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomshift method)": [[16, "horizonms.transforms.spatial_cv.CVRandomShift.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomtranslatex method)": [[16, "horizonms.transforms.spatial_cv.CVRandomTranslateX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrandomtranslatey method)": [[16, "horizonms.transforms.spatial_cv.CVRandomTranslateY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvresize method)": [[16, "horizonms.transforms.spatial_cv.CVResize.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvresizewidth method)": [[16, "horizonms.transforms.spatial_cv.CVResizeWidth.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvrotate method)": [[16, "horizonms.transforms.spatial_cv.CVRotate.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvscale method)": [[16, "horizonms.transforms.spatial_cv.CVScale.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvshearx method)": [[16, "horizonms.transforms.spatial_cv.CVShearX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvsheary method)": [[16, "horizonms.transforms.spatial_cv.CVShearY.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvtranslatex method)": [[16, "horizonms.transforms.spatial_cv.CVTranslateX.calculate_image"]], "calculate_image() (horizonms.transforms.spatial_cv.cvtranslatey method)": [[16, "horizonms.transforms.spatial_cv.CVTranslateY.calculate_image"]], "calculate_target() (horizonms.transforms.spatial.cropx method)": [[16, "horizonms.transforms.spatial.CropX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.cropy method)": [[16, "horizonms.transforms.spatial.CropY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.fliplr method)": [[16, "horizonms.transforms.spatial.Fliplr.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.flipud method)": [[16, "horizonms.transforms.spatial.Flipud.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.imageheightpaddingorcrop method)": [[16, "horizonms.transforms.spatial.ImageHeightPaddingOrCrop.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.imagepadding method)": [[16, "horizonms.transforms.spatial.ImagePadding.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomcropx method)": [[16, "horizonms.transforms.spatial.RandomCropX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomcropy method)": [[16, "horizonms.transforms.spatial.RandomCropY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomfliplr method)": [[16, "horizonms.transforms.spatial.RandomFliplr.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomflipud method)": [[16, "horizonms.transforms.spatial.RandomFlipud.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomresizedcrop method)": [[16, "horizonms.transforms.spatial.RandomResizedCrop.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomrotate method)": [[16, "horizonms.transforms.spatial.RandomRotate.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomscale method)": [[16, "horizonms.transforms.spatial.RandomScale.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomshearx method)": [[16, "horizonms.transforms.spatial.RandomShearX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomsheary method)": [[16, "horizonms.transforms.spatial.RandomShearY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomtranslatex method)": [[16, "horizonms.transforms.spatial.RandomTranslateX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.randomtranslatey method)": [[16, "horizonms.transforms.spatial.RandomTranslateY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.resize method)": [[16, "horizonms.transforms.spatial.Resize.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.resizewidth method)": [[16, "horizonms.transforms.spatial.ResizeWidth.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.rotate method)": [[16, "horizonms.transforms.spatial.Rotate.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.scale method)": [[16, "horizonms.transforms.spatial.Scale.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.shearx method)": [[16, "horizonms.transforms.spatial.ShearX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.sheary method)": [[16, "horizonms.transforms.spatial.ShearY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.spatialbase method)": [[16, "horizonms.transforms.spatial.SpatialBase.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.translatex method)": [[16, "horizonms.transforms.spatial.TranslateX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial.translatey method)": [[16, "horizonms.transforms.spatial.TranslateY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvcropx method)": [[16, "horizonms.transforms.spatial_cv.CVCropX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvcropy method)": [[16, "horizonms.transforms.spatial_cv.CVCropY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvfliplr method)": [[16, "horizonms.transforms.spatial_cv.CVFliplr.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvflipud method)": [[16, "horizonms.transforms.spatial_cv.CVFlipud.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvimagepadding method)": [[16, "horizonms.transforms.spatial_cv.CVImagePadding.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomcrop method)": [[16, "horizonms.transforms.spatial_cv.CVRandomCrop.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomcropx method)": [[16, "horizonms.transforms.spatial_cv.CVRandomCropX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomcropy method)": [[16, "horizonms.transforms.spatial_cv.CVRandomCropY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomfliplr method)": [[16, "horizonms.transforms.spatial_cv.CVRandomFliplr.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomflipud method)": [[16, "horizonms.transforms.spatial_cv.CVRandomFlipud.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomresizedcrop method)": [[16, "horizonms.transforms.spatial_cv.CVRandomResizedCrop.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomrotate method)": [[16, "horizonms.transforms.spatial_cv.CVRandomRotate.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomscale method)": [[16, "horizonms.transforms.spatial_cv.CVRandomScale.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomshearx method)": [[16, "horizonms.transforms.spatial_cv.CVRandomShearX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomsheary method)": [[16, "horizonms.transforms.spatial_cv.CVRandomShearY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomshift method)": [[16, "horizonms.transforms.spatial_cv.CVRandomShift.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomtranslatex method)": [[16, "horizonms.transforms.spatial_cv.CVRandomTranslateX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrandomtranslatey method)": [[16, "horizonms.transforms.spatial_cv.CVRandomTranslateY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvresize method)": [[16, "horizonms.transforms.spatial_cv.CVResize.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvresizewidth method)": [[16, "horizonms.transforms.spatial_cv.CVResizeWidth.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvrotate method)": [[16, "horizonms.transforms.spatial_cv.CVRotate.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvscale method)": [[16, "horizonms.transforms.spatial_cv.CVScale.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvshearx method)": [[16, "horizonms.transforms.spatial_cv.CVShearX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvsheary method)": [[16, "horizonms.transforms.spatial_cv.CVShearY.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvtranslatex method)": [[16, "horizonms.transforms.spatial_cv.CVTranslateX.calculate_target"]], "calculate_target() (horizonms.transforms.spatial_cv.cvtranslatey method)": [[16, "horizonms.transforms.spatial_cv.CVTranslateY.calculate_target"]], "crop_region() (horizonms.transforms.spatial.randomcrop method)": [[16, "horizonms.transforms.spatial.RandomCrop.crop_region"]], "cv_image_shift() (in module horizonms.transforms.utils)": [[16, "horizonms.transforms.utils.cv_image_shift"]], "forward() (horizonms.transforms.augment.customizedtrivialaugment method)": [[16, "horizonms.transforms.augment.CustomizedTrivialAugment.forward"]], "forward() (horizonms.transforms.augment.horizonmstrivialaugment method)": [[16, "horizonms.transforms.augment.HorizonmsTrivialAugment.forward"]], "forward() (horizonms.transforms.augment.sequentialaugment method)": [[16, "horizonms.transforms.augment.SequentialAugment.forward"]], "forward() (horizonms.transforms.batch_transforms.mixup method)": [[16, "horizonms.transforms.batch_transforms.Mixup.forward"]], "forward() (horizonms.transforms.batch_transforms.softmaxlabelsmoothing method)": [[16, "horizonms.transforms.batch_transforms.SoftmaxLabelSmoothing.forward"]], "forward() (horizonms.transforms.batch_transforms.toonehotlabels method)": [[16, "horizonms.transforms.batch_transforms.ToOnehotLabels.forward"]], "forward() (horizonms.transforms.image.imagebase method)": [[16, "horizonms.transforms.image.ImageBase.forward"]], "forward() (horizonms.transforms.spatial.randomcrop method)": [[16, "horizonms.transforms.spatial.RandomCrop.forward"]], "forward() (horizonms.transforms.spatial.spatialbase method)": [[16, "horizonms.transforms.spatial.SpatialBase.forward"]], "get_image_size() (in module horizonms.transforms.utils)": [[16, "horizonms.transforms.utils.get_image_size"]], "get_params() (horizonms.transforms.spatial.randomresizedcrop static method)": [[16, "horizonms.transforms.spatial.RandomResizedCrop.get_params"]], "get_params() (horizonms.transforms.spatial_cv.cvrandomresizedcrop static method)": [[16, "horizonms.transforms.spatial_cv.CVRandomResizedCrop.get_params"]], "horizonms.transforms.augment": [[16, "module-horizonms.transforms.augment"]], "horizonms.transforms.base": [[16, "module-horizonms.transforms.base"]], "horizonms.transforms.batch_transforms": [[16, "module-horizonms.transforms.batch_transforms"]], "horizonms.transforms.image": [[16, "module-horizonms.transforms.image"]], "horizonms.transforms.image_cv": [[16, "module-horizonms.transforms.image_cv"]], "horizonms.transforms.spatial": [[16, "module-horizonms.transforms.spatial"]], "horizonms.transforms.spatial_cv": [[16, "module-horizonms.transforms.spatial_cv"]], "horizonms.transforms.utils": [[16, "module-horizonms.transforms.utils"]], "setup_size() (in module horizonms.transforms.utils)": [[16, "horizonms.transforms.utils.setup_size"]], "to() (horizonms.transforms.base.targetstructure method)": [[16, "horizonms.transforms.base.TargetStructure.to"]], "torch_choice() (horizonms.transforms.spatial.resizewidth method)": [[16, "horizonms.transforms.spatial.ResizeWidth.torch_choice"]], "registry (class in horizonms.utils.registry)": [[17, "horizonms.utils.registry.Registry"]], "append_df_to_excel() (in module horizonms.utils.pd_utils)": [[17, "horizonms.utils.pd_utils.append_df_to_excel"]], "build() (horizonms.utils.registry.registry method)": [[17, "horizonms.utils.registry.Registry.build"]], "build_from_cfg() (in module horizonms.utils.registry)": [[17, "horizonms.utils.registry.build_from_cfg"]], "children (horizonms.utils.registry.registry property)": [[17, "horizonms.utils.registry.Registry.children"]], "config_updates() (in module horizonms.utils.config)": [[17, "horizonms.utils.config.config_updates"]], "deprecated_api_warning() (in module horizonms.utils.misc)": [[17, "horizonms.utils.misc.deprecated_api_warning"]], "deprecated_register_module() (horizonms.utils.registry.registry method)": [[17, "horizonms.utils.registry.Registry.deprecated_register_module"]], "get() (horizonms.utils.registry.registry method)": [[17, "horizonms.utils.registry.Registry.get"]], "horizonms.utils.config": [[17, "module-horizonms.utils.config"]], "horizonms.utils.misc": [[17, "module-horizonms.utils.misc"]], "horizonms.utils.pd_utils": [[17, "module-horizonms.utils.pd_utils"]], "horizonms.utils.registry": [[17, "module-horizonms.utils.registry"]], "horizonms.utils.summary": [[17, "module-horizonms.utils.summary"]], "horizonms.utils.training_utils": [[17, "module-horizonms.utils.training_utils"]], "infer_scope() (horizonms.utils.registry.registry static method)": [[17, "horizonms.utils.registry.Registry.infer_scope"]], "is_seq_of() (in module horizonms.utils.misc)": [[17, "horizonms.utils.misc.is_seq_of"]], "module_dict (horizonms.utils.registry.registry property)": [[17, "horizonms.utils.registry.Registry.module_dict"]], "name (horizonms.utils.registry.registry property)": [[17, "horizonms.utils.registry.Registry.name"]], "read_config_file() (in module horizonms.utils.config)": [[17, "horizonms.utils.config.read_config_file"]], "register_module() (horizonms.utils.registry.registry method)": [[17, "horizonms.utils.registry.Registry.register_module"]], "save_checkpoints_update() (in module horizonms.utils.training_utils)": [[17, "horizonms.utils.training_utils.save_checkpoints_update"]], "save_config_file() (in module horizonms.utils.config)": [[17, "horizonms.utils.config.save_config_file"]], "scope (horizonms.utils.registry.registry property)": [[17, "horizonms.utils.registry.Registry.scope"]], "split_scope_key() (horizonms.utils.registry.registry static method)": [[17, "horizonms.utils.registry.Registry.split_scope_key"]], "summary() (in module horizonms.utils.summary)": [[17, "horizonms.utils.summary.summary"]], "summary_update() (in module horizonms.utils.training_utils)": [[17, "horizonms.utils.training_utils.summary_update"]]}})